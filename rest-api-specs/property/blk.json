{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Block API",
    "description": "APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "22.3",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/blk/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/blocks": {
      "get": {
        "summary": "Get Blocks",
        "description": "Use this API to retrieve blocks.  You can use the query parameters to narrow down your results. <p><strong>OperationId:</strong>getBlocks</p>",
        "operationId": "getBlocks",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "markAsRecentlyAccessed",
            "in": "query",
            "required": false,
            "description": "Mark this block as recently accessed.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "multipleHotelsSearchHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "superSearch",
            "in": "query",
            "required": false,
            "description": "Free form text field for searching block fields",
            "type": "string"
          },
          {
            "name": "blockIdList",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalReferenceIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystemCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockCode",
            "in": "query",
            "required": false,
            "description": "Block code",
            "type": "string"
          },
          {
            "name": "blockName",
            "in": "query",
            "required": false,
            "description": "Block Name",
            "type": "string"
          },
          {
            "name": "blockOwner",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Block Owner.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "blockStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Block Status.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "cateringStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Catering Status.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "createdByUser",
            "in": "query",
            "required": false,
            "description": "user who created the Block(s).",
            "type": "string"
          },
          {
            "name": "blockStartEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "blockStartStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "blockEndEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "blockEndStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "reservationArrival",
            "in": "query",
            "required": false,
            "description": "Date when guests plan to arrive(first night stay date).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "reservationDeparture",
            "in": "query",
            "required": false,
            "description": "Date when guests plan to leave(last stay day date).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeShoulderDates",
            "in": "query",
            "required": false,
            "description": "Whether to include shoulder dates when considering stay date.",
            "type": "boolean"
          },
          {
            "name": "stayDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "blockCreatedOnEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "blockCreatedOnStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "decisionEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "decisionStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "cutOffEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "cutOffStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "category",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are Group, Source, TravelAgent, Contact, Company.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Group",
                "Source",
                "Agent",
                "Contact",
                "Company",
                "Account"
              ]
            },
            "required": false
          },
          {
            "name": "name",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachedProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "attachedProfileIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "leads",
            "in": "query",
            "required": false,
            "description": "Show Leads in the search result.",
            "type": "boolean"
          },
          {
            "name": "tourSeries",
            "in": "query",
            "required": false,
            "description": "Show tour series in the search result.",
            "type": "boolean"
          },
          {
            "name": "onlyPickupBlocks",
            "in": "query",
            "required": false,
            "description": "Fetch only blocks which are open for pickup, if true. If the value is false, fetch all block statuses.",
            "type": "boolean"
          },
          {
            "name": "onlyOpportunities",
            "in": "query",
            "required": false,
            "description": "Indicates that only Opportunity blocks will be fetched.",
            "type": "boolean"
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Rate Plan Code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "tourCode",
            "in": "query",
            "required": false,
            "description": "Tour code for the block.",
            "type": "string"
          },
          {
            "name": "attributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Type for block instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "AccessExclusions",
                "Aliases",
                "AlternateDates",
                "Attachments",
                "Block",
                "BlockNextStatuses",
                "BlockStatusHistory",
                "CatNextStatuses",
                "CatStatusHistory",
                "Comments",
                "DateProtect",
                "ExternalReferences",
                "GenericRateGrid",
                "Header",
                "Indicators",
                "InventoryItems",
                "Owners",
                "Packages",
                "Policies",
                "PrimaryOwners",
                "PrimaryProfiles",
                "PrimaryRates",
                "Profiles",
                "RateGrid",
                "RateProgram",
                "Rates",
                "Restrictions",
                "SellMessages",
                "Statistics",
                "SummaryStatistics",
                "Traces",
                "WashSchedules"
              ]
            },
            "required": false
          },
          {
            "name": "fetchAllocatedRoomTypes",
            "in": "query",
            "required": false,
            "description": "Indicates whether to fetch only those room types that have rooms allocated. If this flag is true then only those room types with rooms allocated for the block are fetched. Only applicable to fetch instruction RateGrid.",
            "type": "boolean"
          },
          {
            "name": "additionalCriteriaStartDate",
            "in": "query",
            "required": false,
            "description": "Start Date for the rate grid data. Only applicable to fetch instruction RateGrid.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "numberOfDays",
            "in": "query",
            "required": false,
            "description": "Number of days to fetch for the rate grid data. Only applicable to fetch instruction RateGrid.",
            "type": "number"
          },
          {
            "name": "adults",
            "in": "query",
            "required": false,
            "description": "Defines the number of Adults.",
            "type": "integer"
          },
          {
            "name": "children",
            "in": "query",
            "required": false,
            "description": "Defines the number of Children.",
            "type": "integer"
          },
          {
            "name": "childAge",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Age of a child in years.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "bucket1Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
            "type": "integer"
          },
          {
            "name": "bucket2Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
            "type": "integer"
          },
          {
            "name": "bucket3Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
            "type": "integer"
          },
          {
            "name": "bucket4Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
            "type": "integer"
          },
          {
            "name": "bucket5Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
            "type": "integer"
          },
          {
            "name": "existingReservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "existingReservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "roomAllocationCriteria",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for block allocation used in room rate grid.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Initial",
                "Actual",
                "Rates",
                "Pickup",
                "Contract",
                "Available",
                "Pickupperc",
                "Changes",
                "Released",
                "Houseavailability",
                "SellLimit",
                "AvailableSellLimit",
                "MasterAllocInitial",
                "Allocated",
                "SubAllocResv",
                "CutoffDate"
              ]
            },
            "required": false
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Room Types that need to be fetched for the rate room grid data. If these values are not provided, all room types for the block will be fetched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "additionalCriteriaRatePlanCode",
            "in": "query",
            "required": false,
            "description": "Rate Plan to use for fetching rates.",
            "type": "string"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Curency in which the grid rates should be fetched.",
            "type": "string"
          },
          {
            "name": "customCharUDFsAltname",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Label of user defined field used by vendors or customers.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "customCharUDFsName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "customCharUDFsValue",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of user defined field.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "customNumericUDFsAltname",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Label of user defined field used by vendors or customers.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "customNumericUDFsName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of user defined field.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "customNumericUDFsValue",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of user defined field.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "customDateUDFsAltname",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Label of user defined field used by vendors or customers.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "customDateUDFsName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "customDateUDFsValue",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of user defined field.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "accessRestriction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for block access exclusion/restriction types.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Availability",
                "Create",
                "Modify",
                "Cancel"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "It also contains Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/blockSummaries"
            }
          },
          "204": {
            "description": "Blocks not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/blocks/dailyStatistics": {
      "get": {
        "summary": "Get Block Daily Statistics",
        "description": "Use this API to retrieve block daily statistics. <p><strong>OperationId:</strong>getBlockDailyStatistics</p>",
        "operationId": "getBlockDailyStatistics",
        "parameters": [
          {
            "name": "genericRoomType",
            "in": "query",
            "required": false,
            "description": "Indicates if the Allocation objects refer to Generic Room Types (Room Pools).",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Pertain Hotel Code for search criteria.",
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response Object of Fetch Block Daily Statistics.",
            "schema": {
              "$ref": "#/definitions/blockDailyStatistics"
            }
          },
          "204": {
            "description": "BlockDailyStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/blocks/{blockId}/revenueActivityLog": {
      "get": {
        "summary": "Fetch Block Revenue Changes",
        "description": "This API retrieves block revenue change log based on the HotelID and Block ID . <p><strong>OperationId:</strong>getBlockRevenueChanges</p>",
        "operationId": "getBlockRevenueChanges",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id",
            "x-example": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel code for this block.",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Status of this block.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "changeEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "changeStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response Object of details fetched of reveneue log changes of selected block",
            "schema": {
              "$ref": "#/definitions/blockRevenueChanges"
            }
          },
          "204": {
            "description": "BlockRevenueChanges not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/blocks/{blockId}/statistics": {
      "get": {
        "summary": "Get Block Statistics",
        "description": "Use this API to API retrieve detailed block statistics <p><strong>OperationId:</strong>getBlockStatistics</p>",
        "operationId": "getBlockStatistics",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id",
            "x-example": ""
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code of the business block.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start date for the statistics data.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "numberOfDays",
            "in": "query",
            "required": false,
            "description": "Number of days to fetch for statistics data.",
            "type": "integer"
          },
          {
            "name": "statisticsInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Type of statistic for which its statistics information by date and room type will be populated.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Contract",
                "Initial",
                "Actual",
                "Pickup",
                "Available",
                "Change",
                "Rates",
                "Totalavailable",
                "Tentativereservations",
                "Pickuppersons",
                "Roomrevenue",
                "Totalrevenue",
                "Avgroomrate"
              ]
            },
            "required": false
          },
          {
            "name": "roomTypeHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "invBlockCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Block code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "promotionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Represents the promotional code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomCategory",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomClass",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomQualifierCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Represents the room qualifier code like Deluxe,Economy,Suite etc.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomQualifierMatchIndicator",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomViewCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Represents the room view code like City view, River view, Ocean view etc.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomFeatureCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "defaultOccupancy",
            "in": "query",
            "required": false,
            "description": "Default occupancy of property room type.",
            "type": "integer"
          },
          {
            "name": "maximumOccupancy",
            "in": "query",
            "required": false,
            "description": "Max occupancy of property room type.",
            "type": "integer"
          },
          {
            "name": "noOfPhysicalRooms",
            "in": "query",
            "required": false,
            "description": "Number of physical rooms of property room type.",
            "type": "integer"
          },
          {
            "name": "bookingChannelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "bookingChannelMappingCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "bookingChannelMappingName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "bedTypeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Bed type code associated with room.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The response object that returns Block Statistics information.",
            "schema": {
              "$ref": "#/definitions/blockStatistics"
            }
          },
          "204": {
            "description": "BlockStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/hotels/{hotelId}/block": {
      "post": {
        "summary": "Create a Block",
        "description": "Use this API to create a new block in OPERA.  APIs to cater for Block related functionality in OPERA. You will need to first use the ListOfValues APIs to find block attributes, such as Block Status, Room Types etc.; knowing these List of Values will allow for a successful postBlock. <p><strong>OperationId:</strong>postBlock</p>",
        "operationId": "postBlock",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Hotel Id",
            "x-example": ""
          },
          {
            "name": "block",
            "in": "body",
            "required": true,
            "description": "Request object for creation of blocks. This object contains block details with unique identifiers for each block. The standard optional Opera Context element is also included.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/block"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}": {
      "get": {
        "summary": "Get a Block By ID",
        "description": "Use this API to retrieve a specific block.  You will need to know the blockID in the request; if you don't know it, please go ahead and use getBlocks API first.  The response will include detailed information about the block. <p><strong>OperationId:</strong>getBlock</p>",
        "operationId": "getBlock",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
            "x-example": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Hotel Id",
            "x-example": ""
          },
          {
            "name": "markAsRecentlyAccessed",
            "in": "query",
            "required": false,
            "description": "Mark this block as recently accessed.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Type for block instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "AccessExclusions",
                "Aliases",
                "AlternateDates",
                "Attachments",
                "Block",
                "BlockNextStatuses",
                "BlockStatusHistory",
                "CatNextStatuses",
                "CatStatusHistory",
                "Comments",
                "DateProtect",
                "ExternalReferences",
                "GenericRateGrid",
                "Header",
                "Indicators",
                "InventoryItems",
                "Owners",
                "Packages",
                "Policies",
                "PrimaryOwners",
                "PrimaryProfiles",
                "PrimaryRates",
                "Profiles",
                "RateGrid",
                "RateProgram",
                "Rates",
                "Restrictions",
                "SellMessages",
                "Statistics",
                "SummaryStatistics",
                "Traces",
                "WashSchedules"
              ]
            },
            "required": false
          },
          {
            "name": "fetchAllocatedRoomTypes",
            "in": "query",
            "required": false,
            "description": "Indicates whether to fetch only those room types that have rooms allocated. If this flag is true then only those room types with rooms allocated for the block are fetched. Only applicable to fetch instruction RateGrid.",
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start Date for the rate grid data. Only applicable to fetch instruction RateGrid.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "numberOfDays",
            "in": "query",
            "required": false,
            "description": "Number of days to fetch for the rate grid data. Only applicable to fetch instruction RateGrid.",
            "type": "number"
          },
          {
            "name": "roomAllocationCriteria",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for block allocation used in room rate grid.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Initial",
                "Actual",
                "Rates",
                "Pickup",
                "Contract",
                "Available",
                "Pickupperc",
                "Changes",
                "Released",
                "Houseavailability",
                "SellLimit",
                "AvailableSellLimit",
                "MasterAllocInitial",
                "Allocated",
                "SubAllocResv",
                "CutoffDate"
              ]
            },
            "required": false
          },
          {
            "name": "roomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Room Types that need to be fetched for the rate room grid data. If these values are not provided, all room types for the block will be fetched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "It also contains Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/block"
            },
            "examples": {
              "application/json": {
                "blocks": {
                  "blockInfo": [
                    {
                      "block": {
                        "blockIdList": [
                          {
                            "id": "116467",
                            "type": "Block",
                            "idContext": "OPERA"
                          },
                          {
                            "id": "258381",
                            "type": "GroupId",
                            "idContext": "OPERA"
                          },
                          {
                            "type": "ExternalReference",
                            "idContext": "EXTREF"
                          },
                          {
                            "id": "535298",
                            "type": "ExternalReference",
                            "idContext": "ORS"
                          }
                        ],
                        "blockDetails": {
                          "blockCode": "ABCEVENT0516",
                          "blockName": "ABC Business Event",
                          "timeSpan": {
                            "startDate": "2020-05-08",
                            "endDate": "2020-05-24"
                          },
                          "shoulderRatePlanCode": {
                            "shoulderStart": [
                              {
                                "description": "Rack Rate",
                                "currencyCode": "USD",
                                "ratePlanCode": "RACK",
                                "primary": true,
                                "marketCode": "HOTEL1",
                                "sourceCode": "PRICE",
                                "negotiated": false
                              }
                            ],
                            "shoulderEnd": [
                              {
                                "description": "Rate Description",
                                "currencyCode": "USD",
                                "ratePlanCode": "FIXED",
                                "primary": true,
                                "marketCode": "CORP",
                                "sourceCode": "CREF",
                                "negotiated": false
                              }
                            ]
                          },
                          "blockStatus": {
                            "bookingStatus": {
                              "status": {
                                "code": "DEF",
                                "description": "Definite"
                              }
                            },
                            "deductInventory": true,
                            "allowPickup": true,
                            "returnToInventory": false
                          },
                          "blockNextStatusList": [
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "ACT",
                                  "description": "Actual"
                                }
                              },
                              "parentBookingStatus": "DEF",
                              "deductInventory": true,
                              "allowPickup": true,
                              "returnToInventory": false
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "CAN",
                                  "description": "Cancel"
                                }
                              },
                              "parentBookingStatus": "DEF",
                              "deductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": true
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "LOS",
                                  "description": "Lost"
                                }
                              },
                              "parentBookingStatus": "DEF",
                              "deductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": true
                            }
                          ],
                          "blockStatusChangeHistory": [
                            {
                              "sequence": "1",
                              "bookingStatus": {
                                "code": "DED",
                                "description": "Inquiry"
                              },
                              "modifyDateTime": "2020-01-18 16:16:39.0",
                              "modifierId": "BEN.SMITH"
                            },
                            {
                              "sequence": "2",
                              "bookingStatus": {
                                "code": "DEF",
                                "description": "Definite"
                              },
                              "modifyDateTime": "2020-01-18 16:20:58.0",
                              "modifierId": "BEN.SMITH"
                            }
                          ],
                          "reservationType": {
                            "reservationType": "GDED",
                            "description": "Group Deduct"
                          },
                          "marketCode": {
                            "marketCode": "HOTEL1",
                            "marketGroup": "CAT",
                            "description": "Hotel1 Market Group 1"
                          },
                          "sourceOfSale": {
                            "sourceCode": {
                              "sourceCode": "PRICE",
                              "sourceGroup": "PRICE",
                              "description": "Priceline"
                            }
                          },
                          "reservationMethod": {
                            "code": "RML",
                            "description": "Rooming List"
                          },
                          "status": "O",
                          "blockType": "TENTATIVE",
                          "paymentMethod": {
                            "code": "CA",
                            "description": "Cash"
                          },
                          "rateProtectionDetails": {
                            "criteria": "None"
                          },
                          "nonCompeteDetails": {
                            "criteria": "None"
                          },
                          "currencyCode": "USD",
                          "blockClassification": "RegularBooking",
                          "synchronized": false,
                          "cateringOnlyBlock": false,
                          "flexibleDates": false,
                          "externalLocked": false,
                          "autoloadContractGrid": true,
                          "allowRateOverride": false,
                          "manualCutOff": false,
                          "wholesaleBlock": false,
                          "controlBlockLocally": false,
                          "businessDateArrivalsExist": false
                        },
                        "blockOwners": {
                          "owner": [
                            {
                              "userName": "JEN@HOTEL1",
                              "ownerCode": "JEN",
                              "profileId": {
                                "type": "Profile",
                                "idContext": "OPERA",
                                "id": "24211"
                              },
                              "name": {
                                "givenName": "Jennifer",
                                "surname": "Clarke"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "Jennifer.Clarke@example.com"
                                }
                              },
                              "primary": true,
                              "ownership": "Block"
                            },
                            {
                              "userName": "BEN.SMITH@SFIRST",
                              "ownerCode": "BS",
                              "profileId": {
                                "type": "Profile",
                                "idContext": "OPERA",
                                "id": "151308"
                              },
                              "name": {
                                "givenName": "Sarah",
                                "surname": "Johnson"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "Sarah.Johnson@example.com"
                                }
                              },
                              "primary": false,
                              "ownership": "Block"
                            },
                            {
                              "userName": "TOM@HOTEL1",
                              "ownerCode": "AMF",
                              "profileId": {
                                "type": "Profile",
                                "idContext": "OPERA",
                                "id": "197815"
                              },
                              "name": {
                                "givenName": "Tom",
                                "surname": "Brown"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "tom.brown@example.com"
                                }
                              },
                              "primary": false,
                              "ownership": "Block"
                            },
                            {
                              "userName": "BEN.SMITH@HOTEL1",
                              "ownerCode": "BS",
                              "profileId": {
                                "type": "Profile",
                                "idContext": "OPERA",
                                "id": "151308"
                              },
                              "name": {
                                "givenName": "Sarah",
                                "surname": "Johnson"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "sarah.johnson@example.com"
                                }
                              },
                              "primary": true,
                              "ownership": "Rooms"
                            }
                          ],
                          "lockBlockOwners": false,
                          "lockRoomsOwners": false,
                          "lockCateringOwners": false
                        },
                        "reservationPolicies": [
                          {
                            "reservationIdList": [
                              {
                                "id": "208314",
                                "type": "Reservation",
                                "idContext": "OPERA"
                              },
                              {
                                "id": "338347",
                                "type": "Confirmation",
                                "idContext": "OPERA"
                              }
                            ],
                            "name": "Friday demo"
                          }
                        ],
                        "reservationDetails": {
                          "ratePlanCode": [
                            {
                              "description": "Promotional Rate 2",
                              "currencyCode": "USD",
                              "ratePlanCode": "PROMO1",
                              "primary": false,
                              "negotiated": false
                            },
                            {
                              "description": "Promotional Rate Description",
                              "currencyCode": "USD",
                              "ratePlanCode": "FIXED",
                              "primary": false,
                              "marketCode": "CORPC1",
                              "sourceCode": "CREF",
                              "negotiated": false
                            },
                            {
                              "description": "Rack Rate",
                              "currencyCode": "USD",
                              "ratePlanCode": "RACK",
                              "primary": true,
                              "marketCode": "HOTEL1",
                              "sourceCode": "PRICE",
                              "negotiated": false
                            }
                          ],
                          "arrivalTime": "2020-05-08",
                          "departureTime": "2020-05-24 09:00:00.0",
                          "breakfast": {
                            "breakfastIncluded": false,
                            "price": {
                              "currencyCode": "USD"
                            }
                          },
                          "porterage": {
                            "porterageIncluded": true,
                            "price": {
                              "currencyCode": "USD"
                            }
                          },
                          "cutOffDays": "2",
                          "decisionDate": "2020-05-08",
                          "suppressRate": false,
                          "printRate": true,
                          "rateGuarantee": false,
                          "inventoryControl": "Elastic",
                          "activePostingMasterReservations": false,
                          "housing": false,
                          "guaranteeRequired": false
                        },
                        "catering": {
                          "cateringStatus": {
                            "bookingStatus": {
                              "status": {
                                "code": "PRO",
                                "description": "Prospect"
                              }
                            },
                            "deductInventory": false,
                            "allowPickup": false,
                            "returnToInventory": false
                          },
                          "cateringInternalStatus": "F",
                          "cateringNextStatusList": [
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "CAN",
                                  "description": "Cancel"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": true
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "STP",
                                  "description": "SP Test Status"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": true,
                              "allowPickup": false,
                              "returnToInventory": false
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "LOST",
                                  "description": "Lost"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": true
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "ALLO",
                                  "description": "Allotment (non ded)"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": false
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "TE1",
                                  "description": "TEN"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": false
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "OPEN",
                                  "description": "Open for pickup"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": true,
                              "allowPickup": false,
                              "returnToInventory": false
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "REF",
                                  "description": "Refused"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": true
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "TDN",
                                  "description": "Turndown"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": true
                            },
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "LOS",
                                  "description": "Lost"
                                }
                              },
                              "parentBookingStatus": "PRO",
                              "catDeductInventory": false,
                              "allowPickup": false,
                              "returnToInventory": true
                            }
                          ],
                          "cateringStatusChangeHistory": [
                            {
                              "sequence": "1",
                              "bookingStatus": {
                                "code": "PRO",
                                "description": "Prospect"
                              },
                              "modifyDateTime": "2020-01-18 16:16:39.0",
                              "modifierId": "BEN.SMITH"
                            }
                          ],
                          "eventAttendees": {
                            "noOfAttendees": "10",
                            "attendeesGuaranteed": false
                          },
                          "boardInfo": "post as",
                          "onSiteName": "onsite name",
                          "functionInfo": "Function type",
                          "trackChanges": true,
                          "cateringRevenue": {
                            "serviceCharge": {
                              "currencyCode": "USD"
                            },
                            "taxAmount": {
                              "currencyCode": "USD"
                            }
                          },
                          "decisionDate": "2020-05-08",
                          "hasPackageEvents": false
                        },
                        "blockProfiles": {
                          "blockProfile": [
                            {
                              "profileIdList": [
                                {
                                  "id": "209860",
                                  "type": "AgentId",
                                  "idContext": "OPERA"
                                },
                                {
                                  "id": "209860",
                                  "type": "Profile",
                                  "idContext": "OPERA"
                                }
                              ],
                              "profile": {
                                "company": {
                                  "companyName": "Oracle America Inc"
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "500 Oracle Parkway"
                                        ],
                                        "cityName": "Redwood Shores",
                                        "postalCode": "94065",
                                        "county": "US",
                                        "state": "CA",
                                        "country": {
                                          "code": "US"
                                        },
                                        "type": "Business Address"
                                      }
                                    }
                                  ]
                                },
                                "profileType": "Agent"
                              },
                              "primary": true,
                              "blockProfileType": "Agent",
                              "defaultPrint": false
                            },
                            {
                              "profileIdList": [
                                {
                                  "id": "209862",
                                  "type": "AgentContactId",
                                  "idContext": "OPERA"
                                },
                                {
                                  "id": "209862",
                                  "type": "Profile",
                                  "idContext": "OPERA"
                                }
                              ],
                              "profile": {
                                "customer": {
                                  "personName": [
                                    {
                                      "givenName": "Sue",
                                      "surname": "Smith"
                                    }
                                  ]
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "10 Main Street"
                                        ],
                                        "cityName": "Bright City",
                                        "county": "CA",
                                        "country": {
                                          "code": "CA"
                                        },
                                        "type": "Home Address"
                                      }
                                    }
                                  ]
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "+1 415 555 0100"
                                      }
                                    }
                                  ]
                                },
                                "emails": {
                                  "emailInfo": [
                                    {
                                      "email": {
                                        "emailAddress": "eg@example.com"
                                      }
                                    }
                                  ]
                                },
                                "relationships": {
                                  "relationship": [
                                    {
                                      "relationshipProfile": {
                                        "company": {
                                          "companyName": "Oracle America Inc."
                                        },
                                        "profileIdList": [
                                          {
                                            "id": "209860",
                                            "type": "AgentId",
                                            "idContext": "OPERA"
                                          }
                                        ],
                                        "profileType": "Agent"
                                      },
                                      "relation": "Employee",
                                      "targetRelation": "Employer"
                                    }
                                  ]
                                },
                                "profileType": "Contact"
                              },
                              "primary": true,
                              "blockProfileType": "AgentContact",
                              "defaultPrint": false
                            },
                            {
                              "profileIdList": [
                                {
                                  "id": "219591",
                                  "type": "SourceId",
                                  "idContext": "OPERA"
                                },
                                {
                                  "id": "219591",
                                  "type": "Profile",
                                  "idContext": "OPERA"
                                }
                              ],
                              "profile": {
                                "company": {
                                  "companyName": "Sample Company"
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "25 First Street"
                                        ],
                                        "cityName": "New York",
                                        "postalCode": "10011",
                                        "county": "US",
                                        "state": "NY",
                                        "country": {
                                          "code": "US"
                                        },
                                        "type": "Business Address"
                                      }
                                    }
                                  ]
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "+1 415 555 0100"
                                      }
                                    }
                                  ]
                                },
                                "emails": {
                                  "emailInfo": [
                                    {
                                      "email": {
                                        "emailAddress": "example@example.com"
                                      }
                                    }
                                  ]
                                },
                                "profileType": "Source"
                              },
                              "primary": true,
                              "blockProfileType": "Source",
                              "defaultPrint": false
                            },
                            {
                              "profileIdList": [
                                {
                                  "id": "42715",
                                  "type": "SourceId",
                                  "idContext": "OPERA"
                                },
                                {
                                  "id": "42715",
                                  "type": "Profile",
                                  "idContext": "OPERA"
                                }
                              ],
                              "profile": {
                                "company": {
                                  "companyName": "Expedia"
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "+1 415 555 0000"
                                      }
                                    }
                                  ]
                                },
                                "profileType": "Source"
                              },
                              "primary": false,
                              "blockProfileType": "Source",
                              "defaultPrint": false
                            },
                            {
                              "profileIdList": [
                                {
                                  "id": "258381",
                                  "type": "GroupId",
                                  "idContext": "OPERA"
                                },
                                {
                                  "id": "258381",
                                  "type": "Profile",
                                  "idContext": "OPERA"
                                }
                              ],
                              "profile": {
                                "company": {
                                  "companyName": "Friday Co"
                                },
                                "profileType": "Group"
                              },
                              "primary": true,
                              "blockProfileType": "Group",
                              "defaultPrint": false
                            }
                          ],
                          "fullOverlay": false
                        },
                        "blockPackages": [
                          {
                            "packageHeaderType": {
                              "primaryDetails": {
                                "description": "Continental Breakfast - Include in Rate"
                              },
                              "transactionDetails": {
                                "allowance": false,
                                "currency": "USD",
                                "postingType": "D",
                                "calculationRule": "P"
                              },
                              "postingAttributes": {
                                "addToRate": false,
                                "printSeparateLine": false,
                                "postNextDay": false,
                                "forecastNextDay": true
                              }
                            },
                            "consumptionDetails": {},
                            "packageCode": "BKFT1",
                            "ratePlanCode": "GINGIE"
                          }
                        ],
                        "blockStatistics": {
                          "allocatedRoomStatistics": {
                            "roomCount": "91",
                            "roomRevenue": "-9000",
                            "averageRate": "-98.9"
                          },
                          "actualRoomStatistics": {
                            "roomCount": "20",
                            "roomRevenue": "3543",
                            "averageRate": "177.15"
                          },
                          "cateringRevenueOnBooks": "340",
                          "actualCateringRevenue": "0"
                        },
                        "comments": {},
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "UDFC01",
                              "value": "535298"
                            }
                          ]
                        },
                        "blockIndicators": [
                          {
                            "indicatorName": "ALLOTMENT_DETAIL",
                            "count": "26"
                          },
                          {
                            "indicatorName": "EVENTS",
                            "count": "1"
                          },
                          {
                            "indicatorName": "RATES_PACKAGES_ITEMS",
                            "count": "5"
                          },
                          {
                            "indicatorName": "RATES",
                            "count": "5"
                          },
                          {
                            "indicatorName": "OWNERS",
                            "count": "6"
                          },
                          {
                            "indicatorName": "ASSOCIATED_PROFILES",
                            "count": "5"
                          }
                        ],
                        "markAsRecentlyAccessed": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "Block not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      },
      "put": {
        "summary": "Change a Block",
        "description": "You can use this API to update an existing block.  You must know the block ID for the request message.  Use getBlocks if you dont already know the block ID. <p><strong>OperationId:</strong>putBlock</p>",
        "operationId": "putBlock",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id",
            "x-example": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Hotel Id",
            "x-example": ""
          },
          {
            "name": "blockToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for change/modification of block details. This object contains modified block details with unique identifiers for each block. The standard optional Opera Context element is also included.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/blockToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for change/modification of block details. This object contains the block details with unique identifiers for each block. Also Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/blockChanged"
            },
            "examples": {
              "application/json": {
                "blocks": {
                  "blockInfo": [
                    {
                      "block": {
                        "blockIdList": [
                          {
                            "id": "string",
                            "type": "string",
                            "idContext": "string"
                          }
                        ],
                        "blockDetails": {
                          "blockCode": "string",
                          "blockName": "string",
                          "blockAliases": [
                            "string"
                          ],
                          "timeSpan": {
                            "startDate": "2020-08-26",
                            "endDate": "2020-08-26",
                            "duration": "string"
                          },
                          "originalTimeSpan": {
                            "startDate": "2020-08-26",
                            "endDate": "2020-08-26",
                            "duration": "string"
                          },
                          "shoulderDates": {
                            "startDate": "2020-08-26",
                            "endDate": "2020-08-26",
                            "duration": "string"
                          },
                          "shoulderRatePlanCode": {
                            "shoulderStart": [
                              {
                                "description": "string",
                                "currencyCode": "string",
                                "ratePlanCode": "string",
                                "primary": true,
                                "marketCode": "string",
                                "sourceCode": "string",
                                "negotiated": true
                              }
                            ],
                            "shoulderEnd": [
                              {
                                "description": "string",
                                "currencyCode": "string",
                                "ratePlanCode": "string",
                                "primary": true,
                                "marketCode": "string",
                                "sourceCode": "string",
                                "negotiated": true
                              }
                            ]
                          },
                          "blockStatus": {
                            "bookingStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "parentBookingStatus": "string",
                            "deductInventory": true,
                            "catDeductInventory": true,
                            "allowPickup": true,
                            "returnToInventory": true
                          },
                          "blockNextStatusList": [
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "parentBookingStatus": "string",
                              "deductInventory": true,
                              "catDeductInventory": true,
                              "allowPickup": true,
                              "returnToInventory": true
                            }
                          ],
                          "blockStatusChangeHistory": [
                            {
                              "sequence": 0,
                              "bookingStatus": {
                                "code": "string",
                                "description": "string"
                              },
                              "modifyDateTime": "2020-08-26",
                              "modifierId": "string"
                            }
                          ],
                          "reservationType": {
                            "reservationType": "string",
                            "chainCode": "string",
                            "description": "string"
                          },
                          "marketCode": {
                            "marketCode": "string",
                            "marketGroup": "string",
                            "description": "string"
                          },
                          "sourceOfSale": {
                            "sourceCode": {
                              "sourceCode": "string",
                              "sourceGroup": "string",
                              "description": "string"
                            }
                          },
                          "reservationMethod": {
                            "code": "string",
                            "description": "string"
                          },
                          "bookingType": {
                            "code": "string",
                            "description": "string"
                          },
                          "status": "string",
                          "blockType": "string",
                          "paymentMethod": {
                            "code": "string",
                            "description": "string"
                          },
                          "commissionPercent": 0,
                          "conversionCode": "string",
                          "conversionCodeDescription": "string",
                          "rateProtectionDetails": {
                            "criteria": "All",
                            "protectedDates": [
                              "2020-08-26"
                            ]
                          },
                          "nonCompeteDetails": {
                            "industry": "string",
                            "industryDescription": "string",
                            "criteria": "All",
                            "protectedDates": [
                              "2020-08-26"
                            ]
                          },
                          "rankingCode": "string",
                          "rankingCodeDescription": "string",
                          "currencyCode": "string",
                          "cancellationDetails": {
                            "cancellationNumber": {
                              "id": "string",
                              "type": "string",
                              "idContext": "string"
                            },
                            "cancellationCode": {
                              "code": "string",
                              "description": "string"
                            },
                            "cancellationDate": "2020-08-26",
                            "cancellationInfo": "string",
                            "destination": "string",
                            "lostToProperty": "string"
                          },
                          "tourCode": "string",
                          "rateOverrideReason": {
                            "code": "string",
                            "description": "string"
                          },
                          "blockClassification": "MasterBlock",
                          "synchronized": true,
                          "primaryOwners": {
                            "blockOwner": {
                              "userName": "string",
                              "ownerCode": "string",
                              "profileId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "name": {
                                "givenName": "string",
                                "surname": "string",
                                "nameType": "Primary",
                                "language": "string",
                                "externalSystem": "string"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "string"
                                }
                              },
                              "phone": {
                                "telephone": {
                                  "phoneNumber": "string"
                                }
                              },
                              "primary": true,
                              "ownership": "Block"
                            },
                            "roomsOwner": {
                              "userName": "string",
                              "ownerCode": "string",
                              "profileId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "name": {
                                "givenName": "string",
                                "surname": "string",
                                "nameType": "Primary",
                                "language": "string",
                                "externalSystem": "string"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "string"
                                }
                              },
                              "phone": {
                                "telephone": {
                                  "phoneNumber": "string"
                                }
                              },
                              "primary": true,
                              "ownership": "Block"
                            },
                            "cateringOwner": {
                              "userName": "string",
                              "ownerCode": "string",
                              "profileId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "name": {
                                "givenName": "string",
                                "surname": "string",
                                "nameType": "Primary",
                                "language": "string",
                                "externalSystem": "string"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "string"
                                }
                              },
                              "phone": {
                                "telephone": {
                                  "phoneNumber": "string"
                                }
                              },
                              "primary": true,
                              "ownership": "Block"
                            },
                            "blockOwnerCount": 0,
                            "roomsOwnerCount": 0,
                            "cateringOwnerCount": 0
                          },
                          "primaryProfiles": {
                            "account": {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string",
                                  "idContext": "string"
                                }
                              ],
                              "profile": {
                                "customer": {
                                  "personName": [
                                    {
                                      "givenName": "string",
                                      "surname": "string",
                                      "nameType": "Primary",
                                      "language": "string",
                                      "externalSystem": "string"
                                    }
                                  ],
                                  "anonymization": {
                                    "anonymizationStatus": "Requested",
                                    "anonymizationDate": "2020-08-26T13:29:38.273Z"
                                  },
                                  "businessTitle": "string",
                                  "language": "string",
                                  "privateProfile": true,
                                  "blacklist": true
                                },
                                "company": {
                                  "companyName": "string"
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "string"
                                        ],
                                        "cityName": "string",
                                        "postalCode": "string",
                                        "county": "string",
                                        "state": "string",
                                        "country": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "type": "string"
                                      },
                                      "id": "string",
                                      "type": "string",
                                      "idContext": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "emails": {
                                  "emailInfo": [
                                    {
                                      "email": {
                                        "emailAddress": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "uRLs": {
                                  "uRLInfo": [
                                    {
                                      "url": {
                                        "value": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileDeliveryMethods": {
                                  "profileDeliveryMethod": [
                                    {
                                      "deliveryId": {
                                        "id": "string",
                                        "type": "string",
                                        "idContext": "string"
                                      },
                                      "deliveryType": "string",
                                      "deliveryValue": "string",
                                      "hotelId": "string",
                                      "deliveryModule": "EfolioExport",
                                      "orderSequence": 0
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "relationships": {
                                  "relationship": [
                                    {
                                      "relationshipProfile": {
                                        "company": {
                                          "companyName": "string"
                                        },
                                        "profileIdList": [
                                          {
                                            "id": "string",
                                            "type": "string",
                                            "idContext": "string"
                                          }
                                        ],
                                        "profileType": "Guest"
                                      },
                                      "relation": "string",
                                      "targetRelation": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileType": "Guest"
                              },
                              "primary": true,
                              "blockProfileType": "Company",
                              "defaultPrint": true
                            },
                            "contact": {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string",
                                  "idContext": "string"
                                }
                              ],
                              "profile": {
                                "customer": {
                                  "personName": [
                                    {
                                      "givenName": "string",
                                      "surname": "string",
                                      "nameType": "Primary",
                                      "language": "string",
                                      "externalSystem": "string"
                                    }
                                  ],
                                  "anonymization": {
                                    "anonymizationStatus": "Requested",
                                    "anonymizationDate": "2020-08-26T13:29:38.273Z"
                                  },
                                  "businessTitle": "string",
                                  "language": "string",
                                  "privateProfile": true,
                                  "blacklist": true
                                },
                                "company": {
                                  "companyName": "string"
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "string"
                                        ],
                                        "cityName": "string",
                                        "postalCode": "string",
                                        "county": "string",
                                        "state": "string",
                                        "country": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "type": "string"
                                      },
                                      "id": "string",
                                      "type": "string",
                                      "idContext": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "emails": {
                                  "emailInfo": [
                                    {
                                      "email": {
                                        "emailAddress": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "uRLs": {
                                  "uRLInfo": [
                                    {
                                      "url": {
                                        "value": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileDeliveryMethods": {
                                  "profileDeliveryMethod": [
                                    {
                                      "deliveryId": {
                                        "id": "string",
                                        "type": "string",
                                        "idContext": "string"
                                      },
                                      "deliveryType": "string",
                                      "deliveryValue": "string",
                                      "hotelId": "string",
                                      "deliveryModule": "EfolioExport",
                                      "orderSequence": 0
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "relationships": {
                                  "relationship": [
                                    {
                                      "relationshipProfile": {
                                        "company": {
                                          "companyName": "string"
                                        },
                                        "profileIdList": [
                                          {
                                            "id": "string",
                                            "type": "string",
                                            "idContext": "string"
                                          }
                                        ],
                                        "profileType": "Guest"
                                      },
                                      "relation": "string",
                                      "targetRelation": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileType": "Guest"
                              },
                              "primary": true,
                              "blockProfileType": "Company",
                              "defaultPrint": true
                            },
                            "image": {
                              "language": "string",
                              "imageSet": "string",
                              "sequenceId": 0,
                              "imageStyle": "Full",
                              "imageType": "string",
                              "hotelId": "string",
                              "chainCode": "string",
                              "imageURL": "string",
                              "description": "string",
                              "imageOrder": 0,
                              "website": "string"
                            }
                          },
                          "primaryRatePlanCodes": {
                            "blockRatePlanCode": {
                              "description": "string",
                              "currencyCode": "string",
                              "ratePlanCode": "string",
                              "primary": true,
                              "marketCode": "string",
                              "sourceCode": "string",
                              "negotiated": true
                            },
                            "shoulderStartRatePlanCode": {
                              "description": "string",
                              "currencyCode": "string",
                              "ratePlanCode": "string",
                              "primary": true,
                              "marketCode": "string",
                              "sourceCode": "string",
                              "negotiated": true
                            },
                            "shoulderEndRatePlanCode": {
                              "description": "string",
                              "currencyCode": "string",
                              "ratePlanCode": "string",
                              "primary": true,
                              "marketCode": "string",
                              "sourceCode": "string",
                              "negotiated": true
                            },
                            "blockRatePlanCodeCount": 0,
                            "shoulderStartRatePlanCodeCount": 0,
                            "shoulderEndRatePlanCodeCount": 0
                          },
                          "cateringOnlyBlock": true,
                          "flexibleDates": true,
                          "externalLocked": true,
                          "autoloadContractGrid": true,
                          "allowRateOverride": true,
                          "manualCutOff": true,
                          "wholesaleBlock": true,
                          "controlBlockLocally": true,
                          "businessDateArrivalsExist": true
                        },
                        "blockOwners": {
                          "owner": [
                            {
                              "userName": "string",
                              "ownerCode": "string",
                              "profileId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "name": {
                                "givenName": "string",
                                "surname": "string",
                                "nameType": "Primary",
                                "language": "string",
                                "externalSystem": "string"
                              },
                              "email": {
                                "email": {
                                  "emailAddress": "string"
                                }
                              },
                              "phone": {
                                "telephone": {
                                  "phoneNumber": "string"
                                }
                              },
                              "primary": true,
                              "ownership": "Block"
                            }
                          ],
                          "lockBlockOwners": true,
                          "lockRoomsOwners": true,
                          "lockCateringOwners": true
                        },
                        "masterBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string",
                              "idContext": "string"
                            }
                          ],
                          "hotelId": "string",
                          "blockType": "MasterBlock",
                          "timeSpan": {
                            "startDate": "2020-08-26",
                            "endDate": "2020-08-26",
                            "duration": "string"
                          },
                          "blockName": "string",
                          "blockStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "cateringStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            }
                          },
                          "roomNights": 0,
                          "roomNightsPickedup": 0,
                          "subBlockInfo": [
                            {
                              "blockIdList": [
                                {
                                  "id": "string",
                                  "type": "string",
                                  "idContext": "string"
                                }
                              ],
                              "hotelId": "string",
                              "blockType": "MasterBlock",
                              "timeSpan": {
                                "startDate": "2020-08-26",
                                "endDate": "2020-08-26",
                                "duration": "string"
                              },
                              "blockName": "string",
                              "blockStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "cateringStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "roomNights": 0,
                              "roomNightsPickedup": 0
                            }
                          ],
                          "masterSubHotels": [
                            [
                              "string"
                            ]
                          ]
                        },
                        "reservationPolicies": [
                          {
                            "cancellationPolicies": [
                              {
                                "revenueType": "Rooms",
                                "policy": {
                                  "deadline": {
                                    "absoluteDeadline": "2020-08-26T13:29:38.274Z"
                                  },
                                  "amountPercent": {
                                    "basisType": "FlatAmount",
                                    "nights": 0,
                                    "percent": 0,
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "policyCode": "string",
                                  "effective": true
                                },
                                "percentageDue": 0,
                                "comments": "string",
                                "policyId": {
                                  "id": "string",
                                  "type": "string",
                                  "idContext": "string"
                                }
                              }
                            ],
                            "depositPolicies": [
                              {
                                "revenueType": "Rooms",
                                "policy": {
                                  "amountPercent": {
                                    "basisType": "FlatAmount",
                                    "nights": 0,
                                    "percent": 0,
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "deadline": {
                                    "absoluteDeadline": "2020-08-26T13:29:38.274Z"
                                  },
                                  "description": "string",
                                  "policyCode": "string"
                                },
                                "comments": "string",
                                "amountPaid": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "amountDue": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "policyId": {
                                  "id": "string",
                                  "type": "string",
                                  "idContext": "string"
                                }
                              }
                            ],
                            "reservationIdList": [
                              {
                                "id": "string",
                                "type": "string",
                                "idContext": "string"
                              }
                            ],
                            "name": "string"
                          }
                        ],
                        "reservationDetails": {
                          "ratePlanCode": [
                            {
                              "description": "string",
                              "currencyCode": "string",
                              "ratePlanCode": "string",
                              "primary": true,
                              "marketCode": "string",
                              "sourceCode": "string",
                              "negotiated": true
                            }
                          ],
                          "arrivalTime": "2020-08-26T13:29:38.274Z",
                          "departureTime": "2020-08-26T13:29:38.274Z",
                          "traceCode": {
                            "code": "string",
                            "description": "string"
                          },
                          "breakfast": {
                            "breakfastIncluded": true,
                            "price": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "description": "string"
                          },
                          "porterage": {
                            "porterageIncluded": true,
                            "price": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          },
                          "cutOffDate": "2020-08-26",
                          "cutOffDays": 0,
                          "updateGridOnCutoffChange": true,
                          "followupDate": "2020-08-26",
                          "decisionDate": "2020-08-26",
                          "roomingListDueDate": "2020-08-26",
                          "suppressRate": true,
                          "printRate": true,
                          "rateGuarantee": true,
                          "inventoryControl": "NonElastic",
                          "personsPerRoom": 0,
                          "activePostingMasterReservations": true,
                          "housing": true,
                          "guaranteeRequired": true,
                          "transactionCode": "string"
                        },
                        "catering": {
                          "cateringStatus": {
                            "bookingStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              }
                            },
                            "parentBookingStatus": "string",
                            "deductInventory": true,
                            "catDeductInventory": true,
                            "allowPickup": true,
                            "returnToInventory": true
                          },
                          "cateringInternalStatus": "string",
                          "cateringNextStatusList": [
                            {
                              "bookingStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                }
                              },
                              "parentBookingStatus": "string",
                              "deductInventory": true,
                              "catDeductInventory": true,
                              "allowPickup": true,
                              "returnToInventory": true
                            }
                          ],
                          "cateringStatusChangeHistory": [
                            {
                              "sequence": 0,
                              "bookingStatus": {
                                "code": "string",
                                "description": "string"
                              },
                              "modifyDateTime": "2020-08-26",
                              "modifierId": "string"
                            }
                          ],
                          "cateringOwner": "string",
                          "eventAttendees": {
                            "noOfAttendees": 0,
                            "attendeesGuaranteed": true
                          },
                          "boardInfo": "string",
                          "onSiteName": "string",
                          "functionInfo": "string",
                          "trackChanges": true,
                          "cateringRevenue": {
                            "serviceCharge": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "taxAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          },
                          "followUpDate": "2020-08-26",
                          "decisionDate": "2020-08-26",
                          "resourceDiscountPercentage": 0,
                          "hasPackageEvents": true,
                          "applyBoardInfoToAllEvents": true,
                          "overrideEventsProcessingWarnings": true,
                          "applyEventsGuaranteeToAllEvents": true,
                          "applyEventAttendeesChangesToEvents": "All",
                          "resourceDiscountType": "AllDiscountableResources"
                        },
                        "blockProfiles": {
                          "blockProfile": [
                            {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string",
                                  "idContext": "string"
                                }
                              ],
                              "profile": {
                                "customer": {
                                  "personName": [
                                    {
                                      "givenName": "string",
                                      "surname": "string",
                                      "nameType": "Primary",
                                      "language": "string",
                                      "externalSystem": "string"
                                    }
                                  ],
                                  "anonymization": {
                                    "anonymizationStatus": "Requested",
                                    "anonymizationDate": "2020-08-26T13:29:38.275Z"
                                  },
                                  "businessTitle": "string",
                                  "language": "string",
                                  "privateProfile": true,
                                  "blacklist": true
                                },
                                "company": {
                                  "companyName": "string"
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "string"
                                        ],
                                        "cityName": "string",
                                        "postalCode": "string",
                                        "county": "string",
                                        "state": "string",
                                        "country": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "type": "string"
                                      },
                                      "id": "string",
                                      "type": "string",
                                      "idContext": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "emails": {
                                  "emailInfo": [
                                    {
                                      "email": {
                                        "emailAddress": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "uRLs": {
                                  "uRLInfo": [
                                    {
                                      "url": {
                                        "value": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileDeliveryMethods": {
                                  "profileDeliveryMethod": [
                                    {
                                      "deliveryId": {
                                        "id": "string",
                                        "type": "string",
                                        "idContext": "string"
                                      },
                                      "deliveryType": "string",
                                      "deliveryValue": "string",
                                      "hotelId": "string",
                                      "deliveryModule": "EfolioExport",
                                      "orderSequence": 0
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "relationships": {
                                  "relationship": [
                                    {
                                      "relationshipProfile": {
                                        "company": {
                                          "companyName": "string"
                                        },
                                        "profileIdList": [
                                          {
                                            "id": "string",
                                            "type": "string",
                                            "idContext": "string"
                                          }
                                        ],
                                        "profileType": "Guest"
                                      },
                                      "relation": "string",
                                      "targetRelation": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileType": "Guest"
                              },
                              "primary": true,
                              "blockProfileType": "Company",
                              "defaultPrint": true
                            }
                          ],
                          "fullOverlay": true
                        },
                        "blockPackages": [
                          {
                            "packageHeaderType": {
                              "primaryDetails": {
                                "description": "string"
                              },
                              "transactionDetails": {
                                "allowance": true,
                                "currency": "string",
                                "postingType": "string",
                                "calculationRule": "string"
                              },
                              "postingAttributes": {
                                "addToRate": true,
                                "printSeparateLine": true,
                                "sellSeparate": true,
                                "postNextDay": true,
                                "forecastNextDay": true,
                                "calculatedPrice": 0
                              }
                            },
                            "consumptionDetails": {
                              "defaultQuantity": 0
                            },
                            "packageCode": "string",
                            "ratePlanCode": "string",
                            "startDate": "2020-08-26",
                            "endDate": "2020-08-26"
                          }
                        ],
                        "inventoryItems": [
                          {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0,
                            "item": {
                              "description": "string",
                              "availabilityPeriod": {
                                "startTime": "string",
                                "endTime": "string"
                              },
                              "timeSpan": {
                                "startDate": "2020-08-26",
                                "endDate": "2020-08-26",
                                "duration": "string"
                              },
                              "code": "string",
                              "name": "string",
                              "sellSeparate": true,
                              "requiredForBooking": true
                            },
                            "quantity": 0,
                            "timeSpan": {
                              "start": "2020-08-26",
                              "end": "2020-08-26"
                            }
                          }
                        ],
                        "blockStatistics": {
                          "allocatedRoomStatistics": {
                            "roomCount": 0,
                            "roomRevenue": 0,
                            "averageRate": 0
                          },
                          "actualRoomStatistics": {
                            "roomCount": 0,
                            "roomRevenue": 0,
                            "averageRate": 0
                          },
                          "cateringRevenueOnBooks": 0,
                          "actualCateringRevenue": 0
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "comment": {
                                "text": {
                                  "value": "string",
                                  "language": "string"
                                },
                                "image": "string",
                                "url": "string",
                                "commentTitle": "string",
                                "type": "string",
                                "internal": true
                              },
                              "id": "string",
                              "type": "string",
                              "idContext": "string"
                            }
                          ],
                          "count": 0
                        },
                        "roomAllocations": {
                          "roomAllocationType": [
                            {
                              "roomAllocationInfo": [
                                {
                                  "roomGridDetails": [
                                    {
                                      "inventory": {
                                        "onePerson": 0,
                                        "twoPerson": 0,
                                        "threePerson": 0,
                                        "fourPerson": 0,
                                        "sellLimit": 0,
                                        "cutoffDate": "2020-08-26"
                                      },
                                      "rate": {
                                        "onePerson": 0,
                                        "twoPerson": 0,
                                        "threePerson": 0,
                                        "fourPerson": 0,
                                        "extraPerson": 0
                                      },
                                      "roomType": "string"
                                    }
                                  ],
                                  "roomGridInvSummary": [
                                    {
                                      "onePerson": 0,
                                      "twoPerson": 0,
                                      "threePerson": 0,
                                      "fourPerson": 0,
                                      "sellLimit": 0,
                                      "cutoffDate": "2020-08-26"
                                    }
                                  ],
                                  "availableRoomGridInvSummary": [
                                    {
                                      "onePerson": 0,
                                      "twoPerson": 0,
                                      "threePerson": 0,
                                      "fourPerson": 0,
                                      "sellLimit": 0,
                                      "cutoffDate": "2020-08-26"
                                    }
                                  ],
                                  "stayDate": "2020-08-26",
                                  "extendedStay": true
                                }
                              ],
                              "allocation": "Initial"
                            }
                          ],
                          "masterInfo": {
                            "roomTypes": [
                              {
                                "longDescription": "string",
                                "webName": "string",
                                "webPage": "string",
                                "roomFeatures": [
                                  {
                                    "code": "string",
                                    "description": "string",
                                    "quantity": 0
                                  }
                                ],
                                "roomTypeAttributes": {
                                  "defaultOccupancy": 0,
                                  "maximumOccupancy": 0,
                                  "noOfPhysicalRooms": 0
                                },
                                "bookingChannelMappings": [
                                  {
                                    "bookingChannelCode": "string",
                                    "code": "string",
                                    "name": "string",
                                    "description": "string"
                                  }
                                ],
                                "bedTypeCodes": [
                                  "string"
                                ],
                                "roomType": "string",
                                "description": "string",
                                "available": true
                              }
                            ],
                            "genericRoomTypes": [
                              {
                                "longDescription": "string",
                                "webName": "string",
                                "webPage": "string",
                                "roomFeatures": [
                                  {
                                    "code": "string",
                                    "description": "string",
                                    "quantity": 0
                                  }
                                ],
                                "roomTypeAttributes": {
                                  "defaultOccupancy": 0,
                                  "maximumOccupancy": 0,
                                  "noOfPhysicalRooms": 0
                                },
                                "bookingChannelMappings": [
                                  {
                                    "bookingChannelCode": "string",
                                    "code": "string",
                                    "name": "string",
                                    "description": "string"
                                  }
                                ],
                                "bedTypeCodes": [
                                  "string"
                                ],
                                "roomType": "string",
                                "description": "string",
                                "available": true
                              }
                            ]
                          },
                          "count": 0,
                          "startDate": "2020-08-26",
                          "numberOfDays": 0
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "string",
                              "value": "string",
                              "alternateName": "string"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "name": "string",
                              "value": 0,
                              "alternateName": "string"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "name": "string",
                              "value": "2020-08-26",
                              "alternateName": "string"
                            }
                          ]
                        },
                        "blockIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "traces": [
                          {
                            "timeInfo": {
                              "traceOn": "2020-08-26T13:29:38.276Z",
                              "traceTime": "string",
                              "enteredBy": "string"
                            },
                            "departmentId": "string",
                            "traceText": "string",
                            "resolveInfo": {
                              "resolvedOn": "2020-08-26",
                              "resolvedBy": "string"
                            },
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "createDateTime": "2020-08-26T13:29:38.276Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-08-26T13:29:38.276Z",
                            "lastModifierId": "string"
                          }
                        ],
                        "statistics": [
                          {
                            "roomsSold": 0,
                            "revenueSummary": {
                              "roomRevenue": 0,
                              "foodAndBeverageRevenue": 0,
                              "otherRevenue": 0,
                              "cateringRevenue": 0,
                              "cateringOtherRevenue": 0,
                              "totalRevenue": 0
                            },
                            "avgRoomRate": 0,
                            "statisticType": "Potential"
                          }
                        ],
                        "blockSecurity": {
                          "securedFromDIdisplayYn": true,
                          "allDescriptionDDSecured": true,
                          "ratesSecuredfromGNR": true,
                          "ratesSecuredfromAllDisplays": true,
                          "housingInformationSecured": true
                        },
                        "ratePrograms": [
                          {
                            "roomPool": "string",
                            "rates": [
                              {
                                "rateCode": "string",
                                "rateMarketCode": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "rateAmounts": {
                                  "onePerson": 0,
                                  "twoPerson": 0,
                                  "threePerson": 0,
                                  "fourPerson": 0,
                                  "extraPerson": 0
                                },
                                "roomTypes": [
                                  "string"
                                ],
                                "startDate": "2020-08-26",
                                "endDate": "2020-08-26",
                                "commissionable": true,
                                "mobileCheckout": true,
                                "primary": true,
                                "sequence": 0
                              }
                            ]
                          }
                        ],
                        "externalAttributes": {
                          "housingProtected": true,
                          "eventType": "Convention",
                          "gIId": "string",
                          "rollEndDate": true
                        },
                        "genericRoomAllocations": {
                          "roomAllocationType": [
                            {
                              "roomAllocationInfo": [
                                {
                                  "roomGridDetails": [
                                    {
                                      "inventory": {
                                        "onePerson": 0,
                                        "twoPerson": 0,
                                        "threePerson": 0,
                                        "fourPerson": 0,
                                        "sellLimit": 0,
                                        "cutoffDate": "2020-08-26"
                                      },
                                      "rate": {
                                        "onePerson": 0,
                                        "twoPerson": 0,
                                        "threePerson": 0,
                                        "fourPerson": 0,
                                        "extraPerson": 0
                                      },
                                      "roomType": "string"
                                    }
                                  ],
                                  "roomGridInvSummary": [
                                    {
                                      "onePerson": 0,
                                      "twoPerson": 0,
                                      "threePerson": 0,
                                      "fourPerson": 0,
                                      "sellLimit": 0,
                                      "cutoffDate": "2020-08-26"
                                    }
                                  ],
                                  "availableRoomGridInvSummary": [
                                    {
                                      "onePerson": 0,
                                      "twoPerson": 0,
                                      "threePerson": 0,
                                      "fourPerson": 0,
                                      "sellLimit": 0,
                                      "cutoffDate": "2020-08-26"
                                    }
                                  ],
                                  "stayDate": "2020-08-26",
                                  "extendedStay": true
                                }
                              ],
                              "allocation": "Initial"
                            }
                          ],
                          "masterInfo": {
                            "roomTypes": [
                              {
                                "longDescription": "string",
                                "webName": "string",
                                "webPage": "string",
                                "roomFeatures": [
                                  {
                                    "code": "string",
                                    "description": "string",
                                    "quantity": 0
                                  }
                                ],
                                "roomTypeAttributes": {
                                  "defaultOccupancy": 0,
                                  "maximumOccupancy": 0,
                                  "noOfPhysicalRooms": 0
                                },
                                "bookingChannelMappings": [
                                  {
                                    "bookingChannelCode": "string",
                                    "code": "string",
                                    "name": "string",
                                    "description": "string"
                                  }
                                ],
                                "bedTypeCodes": [
                                  "string"
                                ],
                                "roomType": "string",
                                "description": "string",
                                "available": true
                              }
                            ],
                            "genericRoomTypes": [
                              {
                                "longDescription": "string",
                                "webName": "string",
                                "webPage": "string",
                                "roomFeatures": [
                                  {
                                    "code": "string",
                                    "description": "string",
                                    "quantity": 0
                                  }
                                ],
                                "roomTypeAttributes": {
                                  "defaultOccupancy": 0,
                                  "maximumOccupancy": 0,
                                  "noOfPhysicalRooms": 0
                                },
                                "bookingChannelMappings": [
                                  {
                                    "bookingChannelCode": "string",
                                    "code": "string",
                                    "name": "string",
                                    "description": "string"
                                  }
                                ],
                                "bedTypeCodes": [
                                  "string"
                                ],
                                "roomType": "string",
                                "description": "string",
                                "available": true
                              }
                            ]
                          },
                          "count": 0,
                          "startDate": "2020-08-26",
                          "numberOfDays": 0
                        },
                        "alternateDates": [
                          {
                            "alternateBeginDate": "2020-08-26",
                            "blockRates": {
                              "onePerson": 0,
                              "twoPerson": 0,
                              "threePerson": 0,
                              "fourPerson": 0,
                              "extraPerson": 0
                            },
                            "roomCategory": "string",
                            "priority": 0
                          }
                        ],
                        "sellMessages": {
                          "sellMessageConfig": [
                            {
                              "message": "string",
                              "timespan": {
                                "startDate": "2020-08-26",
                                "endDate": "2020-08-26",
                                "duration": "string"
                              },
                              "chainCode": "string",
                              "roomType": "string",
                              "ratePlanCode": "string",
                              "languageCode": "string",
                              "stickyFlag": true,
                              "sellSequence": 0,
                              "usedInModule": [
                                "Blocks"
                              ],
                              "type": "string",
                              "id": "string"
                            }
                          ],
                          "count": 0
                        },
                        "attachments": [
                          {
                            "fileName": "string",
                            "fileSize": 0,
                            "description": "string",
                            "global": true,
                            "history": {
                              "createDateTime": "2020-08-26T13:29:38.276Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-08-26T13:29:38.276Z",
                              "lastModifierId": "string"
                            },
                            "type": "string",
                            "idContext": "string",
                            "id": "string"
                          }
                        ],
                        "washSchedules": [
                          {
                            "washDate": "2020-08-26",
                            "roomTypes": [
                              "string"
                            ],
                            "washByRooms": {
                              "onePerson": 0,
                              "twoPerson": 0,
                              "threePerson": 0,
                              "fourPerson": 0,
                              "sellLimit": 0,
                              "cutoffDate": "2020-08-26"
                            },
                            "washByPercent": 0
                          }
                        ],
                        "restrictions": {
                          "blockRestriction": [
                            {
                              "restrictionDate": {
                                "timeSpan": {
                                  "startDate": "2020-08-26",
                                  "endDate": "2020-08-26",
                                  "duration": "string"
                                },
                                "sunday": true,
                                "monday": true,
                                "tuesday": true,
                                "wednesday": true,
                                "thursday": true,
                                "friday": true,
                                "saturday": true
                              },
                              "roomType": "string",
                              "blockRestrictionStatus": {
                                "code": "Closed",
                                "unit": 0
                              },
                              "actualTimeSpan": {
                                "startDate": "2020-08-26",
                                "endDate": "2020-08-26",
                                "duration": "string"
                              }
                            }
                          ]
                        },
                        "accessExclusions": {
                          "blockAccessExclusion": [
                            {
                              "sourceType": "string",
                              "sourceValue": "string",
                              "allowModifyReservation": true,
                              "allowCancelReservation": true,
                              "allowCreateReservation": true,
                              "inactive": true,
                              "excludeFromAvailability": true
                            }
                          ],
                          "accessExclusionMessage": {
                            "exclusionMessage": "string"
                          }
                        },
                        "markAsRecentlyAccessed": true
                      }
                    }
                  ],
                  "count": 0
                },
                "cateringEventsProcessedInfo": [
                  {
                    "hotelId": "string",
                    "blockId": {
                      "url": "string",
                      "type": "string",
                      "instance": "string",
                      "idContext": "string",
                      "id": "string",
                      "idExtension": 0
                    },
                    "eventName": "string",
                    "eventType": "string",
                    "eventDate": "2020-08-26",
                    "room": {
                      "code": "string",
                      "description": "string"
                    },
                    "status": "string",
                    "reason": "string",
                    "processingInfoType": "string",
                    "processingInfoCode": "string"
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/allocation": {
      "put": {
        "summary": "Set Block Allocation  ",
        "description": "Use this API to add block room type allocations and rates to a specified Block. <p><strong>OperationId:</strong>putBlockAllocation</p>",
        "operationId": "putBlockAllocation",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id",
            "x-example": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Hotel Id",
            "x-example": ""
          },
          {
            "name": "allocation",
            "in": "body",
            "required": true,
            "description": "A Request message that sets the room allocations as a collection of room types and dates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/allocation"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/availability": {
      "get": {
        "summary": "Get Block AvailaBility",
        "description": "Use this API to search for availability on an OPERA block.  You will need to know the block ID.  Once you know what rooms and rates are available you can proceed to post a block reservation. <p><strong>OperationId:</strong>getBlockAvailability</p>",
        "operationId": "getBlockAvailability",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id",
            "x-example": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Hotel Id",
            "x-example": ""
          },
          {
            "name": "overrideRateCode",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "arrivalDate",
            "in": "query",
            "required": false,
            "description": "Arrival date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "nights",
            "in": "query",
            "required": false,
            "description": "Number of nights of stay.",
            "type": "integer"
          },
          {
            "name": "adults",
            "in": "query",
            "required": false,
            "description": "Documentation goes here",
            "type": "integer"
          },
          {
            "name": "children",
            "in": "query",
            "required": false,
            "description": "Documentation goes here",
            "type": "integer"
          },
          {
            "name": "rooms",
            "in": "query",
            "required": false,
            "description": "Documentation goes here",
            "type": "integer"
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "required": false,
            "description": "Documentation goes here",
            "type": "string"
          },
          {
            "name": "existingReservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "existingReservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room type.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchAllocatedRoomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instruction to determine room types to fetch.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Allocated",
                "Available",
                "GenericAllocated",
                "GenericAvailable"
              ]
            },
            "required": false
          },
          {
            "name": "roomTypeCount",
            "in": "query",
            "required": false,
            "description": "Criteria to fetch number of room type(s).",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for FetchBlockAvailability operation.",
            "schema": {
              "$ref": "#/definitions/blockAvailability"
            }
          },
          "204": {
            "description": "BlockAvailability not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/postingMaster/reservations": {
      "get": {
        "summary": "Get Posting Master Reservations for a Block",
        "description": "Use this API to retrieve PM (Posting Master) reservations for a block. <p><strong>OperationId:</strong>getBlockPMReservations</p>",
        "operationId": "getBlockPMReservations",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id",
            "x-example": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Hotel Id",
            "x-example": ""
          },
          {
            "name": "postingmaster",
            "in": "query",
            "default": true,
            "required": false,
            "description": "If true, a PM reservation will be created for the block if no PM reservations exist.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The response object that contains the PM reservations belonging to a block.",
            "schema": {
              "$ref": "#/definitions/blockPMReservations"
            },
            "examples": {
              "application/json": {
                "reservations": {
                  "reservation": [
                    {
                      "hotelReservation": {
                        "reservationIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "associatedReservations": {
                          "parentReservation": {
                            "id": "string",
                            "type": "string"
                          },
                          "originalMultiRoomRes": {
                            "id": "string",
                            "type": "string"
                          }
                        },
                        "sourceOfSale": {
                          "sourceType": "string",
                          "sourceCode": "string"
                        },
                        "roomStay": {
                          "roomRates": [
                            {
                              "total": {
                                "taxes": {
                                  "tax": [
                                    {
                                      "description": "string",
                                      "type": "Inclusive",
                                      "code": "string",
                                      "amount": 0,
                                      "currencyCode": "string"
                                    }
                                  ],
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "fees": {
                                  "fee": [
                                    {
                                      "description": "string",
                                      "type": "Inclusive",
                                      "code": "string",
                                      "amount": 0,
                                      "currencyCode": "string"
                                    }
                                  ],
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "description": "string",
                                "amountBeforeTax": 0,
                                "amountAfterTax": 0,
                                "currencyCode": "string",
                                "currencySymbol": "string",
                                "decimalPlaces": 0,
                                "code": "string",
                                "rateOverride": true
                              },
                              "totalPoints": {
                                "awardsType": "string",
                                "points": 0
                              },
                              "rates": {
                                "rate": [
                                  {
                                    "base": {
                                      "taxes": {
                                        "tax": [
                                          {
                                            "description": "string",
                                            "type": "Inclusive",
                                            "code": "string",
                                            "amount": 0,
                                            "currencyCode": "string"
                                          }
                                        ],
                                        "amount": 0,
                                        "currencyCode": "string"
                                      },
                                      "fees": {
                                        "fee": [
                                          {
                                            "description": "string",
                                            "type": "Inclusive",
                                            "code": "string",
                                            "amount": 0,
                                            "currencyCode": "string"
                                          }
                                        ],
                                        "amount": 0,
                                        "currencyCode": "string"
                                      },
                                      "description": "string",
                                      "amountBeforeTax": 0,
                                      "amountAfterTax": 0,
                                      "currencyCode": "string",
                                      "currencySymbol": "string",
                                      "decimalPlaces": 0,
                                      "code": "string",
                                      "rateOverride": true
                                    },
                                    "additionalGuestAmounts": [
                                      {
                                        "amount": {
                                          "taxes": {
                                            "tax": [
                                              {
                                                "description": "string",
                                                "type": "Inclusive",
                                                "code": "string",
                                                "amount": 0,
                                                "currencyCode": "string"
                                              }
                                            ],
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "fees": {
                                            "fee": [
                                              {
                                                "description": "string",
                                                "type": "Inclusive",
                                                "code": "string",
                                                "amount": 0,
                                                "currencyCode": "string"
                                              }
                                            ],
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "description": "string",
                                          "amountBeforeTax": 0,
                                          "amountAfterTax": 0,
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0,
                                          "code": "string",
                                          "rateOverride": true
                                        },
                                        "ageQualifyingCode": "ADULT"
                                      }
                                    ],
                                    "discount": {
                                      "discountReason": "string",
                                      "percent": 0,
                                      "amount": 0,
                                      "currencyCode": "string",
                                      "discountCode": "string"
                                    },
                                    "shareRatePercentage": 0,
                                    "shareDistributionInstruction": "Full",
                                    "total": {
                                      "taxes": {
                                        "tax": [
                                          {
                                            "description": "string",
                                            "type": "Inclusive",
                                            "code": "string",
                                            "amount": 0,
                                            "currencyCode": "string"
                                          }
                                        ],
                                        "amount": 0,
                                        "currencyCode": "string"
                                      },
                                      "fees": {
                                        "fee": [
                                          {
                                            "description": "string",
                                            "type": "Inclusive",
                                            "code": "string",
                                            "amount": 0,
                                            "currencyCode": "string"
                                          }
                                        ],
                                        "amount": 0,
                                        "currencyCode": "string"
                                      },
                                      "description": "string",
                                      "amountBeforeTax": 0,
                                      "amountAfterTax": 0,
                                      "currencyCode": "string",
                                      "currencySymbol": "string",
                                      "decimalPlaces": 0,
                                      "code": "string",
                                      "rateOverride": true
                                    },
                                    "requiredPoints": {
                                      "awardsType": "string",
                                      "points": 0
                                    },
                                    "effectiveRate": {
                                      "taxes": {
                                        "tax": [
                                          {
                                            "description": "string",
                                            "type": "Inclusive",
                                            "code": "string",
                                            "amount": 0,
                                            "currencyCode": "string"
                                          }
                                        ],
                                        "amount": 0,
                                        "currencyCode": "string"
                                      },
                                      "fees": {
                                        "fee": [
                                          {
                                            "description": "string",
                                            "type": "Inclusive",
                                            "code": "string",
                                            "amount": 0,
                                            "currencyCode": "string"
                                          }
                                        ],
                                        "amount": 0,
                                        "currencyCode": "string"
                                      },
                                      "description": "string",
                                      "amountBeforeTax": 0,
                                      "amountAfterTax": 0,
                                      "currencyCode": "string",
                                      "currencySymbol": "string",
                                      "decimalPlaces": 0,
                                      "code": "string",
                                      "rateOverride": true
                                    },
                                    "start": "2020-07-13",
                                    "end": "2020-07-13"
                                  }
                                ],
                                "rateRange": [
                                  {
                                    "base": [
                                      {
                                        "taxes": {
                                          "tax": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "fees": {
                                          "fee": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "description": "string",
                                        "amountBeforeTax": 0,
                                        "amountAfterTax": 0,
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "code": "string",
                                        "rateOverride": true
                                      }
                                    ],
                                    "rateChange": true
                                  }
                                ]
                              },
                              "packages": [
                                {
                                  "amount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "allowance": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "description": [
                                    "string"
                                  ],
                                  "startDate": "2020-07-13",
                                  "endDate": "2020-07-13",
                                  "packageCode": "string",
                                  "calculationRule": "string",
                                  "postingRhythm": "string",
                                  "quantity": 0,
                                  "includedInRate": true,
                                  "addRateSeprateLine": true,
                                  "addRateCombinedLine": true,
                                  "startTime": "string",
                                  "endTime": "string",
                                  "sellSeparate": true
                                }
                              ],
                              "stayProfiles": [
                                {
                                  "profileIdList": [
                                    {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "profile": {
                                    "customer": {
                                      "personName": [
                                        {
                                          "givenName": "string",
                                          "surname": "string",
                                          "nameType": "Primary",
                                          "language": "string",
                                          "externalSystem": "string"
                                        }
                                      ],
                                      "anonymization": {
                                        "anonymizationStatus": "Requested",
                                        "anonymizationDate": "2020-07-13T15:18:00.396Z"
                                      },
                                      "businessTitle": "string",
                                      "language": "string",
                                      "privateProfile": true,
                                      "blacklist": true
                                    },
                                    "company": {
                                      "companyName": "string"
                                    },
                                    "addresses": {
                                      "addressInfo": [
                                        {
                                          "address": {
                                            "addressLine": [
                                              "string"
                                            ],
                                            "cityName": "string",
                                            "postalCode": "string",
                                            "county": "string",
                                            "state": "string",
                                            "country": {
                                              "value": "string",
                                              "code": "string"
                                            },
                                            "type": "string"
                                          },
                                          "id": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "hasMore": true,
                                      "totalResults": 0,
                                      "count": 0
                                    },
                                    "telephones": {
                                      "telephoneInfo": [
                                        {
                                          "telephone": {
                                            "phoneNumber": "string"
                                          }
                                        }
                                      ],
                                      "hasMore": true,
                                      "totalResults": 0,
                                      "count": 0
                                    },
                                    "emails": {
                                      "emailInfo": [
                                        {
                                          "email": {
                                            "emailAddress": "string",
                                            "type": "string"
                                          }
                                        }
                                      ],
                                      "hasMore": true,
                                      "totalResults": 0,
                                      "count": 0
                                    },
                                    "uRLs": {
                                      "uRLInfo": [
                                        {
                                          "url": {
                                            "value": "string",
                                            "type": "string"
                                          }
                                        }
                                      ],
                                      "hasMore": true,
                                      "totalResults": 0,
                                      "count": 0
                                    },
                                    "relationships": {
                                      "relationship": [
                                        {
                                          "relationshipProfile": {
                                            "company": {
                                              "companyName": "string"
                                            },
                                            "profileIdList": [
                                              {
                                                "id": "string",
                                                "type": "string"
                                              }
                                            ],
                                            "profileType": "Guest"
                                          },
                                          "relation": "string",
                                          "targetRelation": "string"
                                        }
                                      ],
                                      "hasMore": true,
                                      "totalResults": 0,
                                      "count": 0
                                    },
                                    "profileType": "Guest"
                                  },
                                  "reservationProfileType": "Company"
                                }
                              ],
                              "guestCounts": {
                                "childAges": [
                                  {
                                    "age": 0
                                  }
                                ],
                                "childBuckets": {
                                  "bucket1Count": 0,
                                  "bucket2Count": 0,
                                  "bucket3Count": 0,
                                  "bucket4Count": 0,
                                  "bucket5Count": 0
                                },
                                "adults": 0,
                                "children": 0
                              },
                              "taxFreeGuestCounts": {
                                "childAges": [
                                  {
                                    "age": 0
                                  }
                                ],
                                "childBuckets": {
                                  "bucket1Count": 0,
                                  "bucket2Count": 0,
                                  "bucket3Count": 0,
                                  "bucket4Count": 0,
                                  "bucket5Count": 0
                                },
                                "adults": 0,
                                "children": 0
                              },
                              "awards": {
                                "membershipNo": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "awardVouchers": {
                                  "awardVoucher": [
                                    {
                                      "awardCode": "string",
                                      "voucherNo": "string"
                                    }
                                  ]
                                },
                                "originalRoomType": "string",
                                "upgradeRoomType": "string"
                              },
                              "foreignExchange": {
                                "type": "string",
                                "effectiveDate": "2020-07-13"
                              },
                              "reservationBlock": {
                                "blockIdList": [
                                  {
                                    "id": "string",
                                    "type": "string"
                                  }
                                ],
                                "blockName": "string",
                                "hotelId": "string"
                              },
                              "roomRateInfo": "string",
                              "mealPlans": [
                                {
                                  "code": "string",
                                  "included": true,
                                  "breakfastIncluded": true,
                                  "lunchIncluded": true,
                                  "dinnerIncluded": true
                                }
                              ],
                              "roomType": "string",
                              "ratePlanCode": "string",
                              "promotionCode": "string",
                              "start": "2020-07-13",
                              "end": "2020-07-13",
                              "availability": "Available",
                              "suppressRate": true,
                              "marketCode": "string",
                              "marketCodeDescription": "string",
                              "sourceCode": "string",
                              "sourceCodeDescription": "string",
                              "numberOfUnits": 0,
                              "roomId": "string",
                              "pseudoRoom": true,
                              "roomTypeCharged": "string",
                              "commissionCode": "string",
                              "commissionable": true,
                              "houseUseOnly": true,
                              "complimentary": true,
                              "inventoryLender": "string",
                              "fixedRate": true,
                              "barRanking": 0,
                              "rateGroup": "string",
                              "discountAllowed": true,
                              "bogoDiscount": true,
                              "rateLevel": "string",
                              "commissionPercentage": 0,
                              "commissionAmount": 0,
                              "credentialsRequired": true,
                              "taxIncluded": true,
                              "rateDescription": "string"
                            }
                          ],
                          "guestCounts": {
                            "childAges": [
                              {
                                "age": 0
                              }
                            ],
                            "childBuckets": {
                              "bucket1Count": 0,
                              "bucket2Count": 0,
                              "bucket3Count": 0,
                              "bucket4Count": 0,
                              "bucket5Count": 0
                            },
                            "adults": 0,
                            "children": 0
                          },
                          "arrivalDate": "2020-07-13",
                          "departureDate": "2020-07-13",
                          "expectedTimes": {
                            "reservationExpectedArrivalTime": "2020-07-13T15:18:00.397Z",
                            "reservationExpectedDepartureTime": "2020-07-13T15:18:00.397Z"
                          },
                          "originalTimeSpan": {
                            "startDate": "2020-07-13",
                            "endDate": "2020-07-13",
                            "duration": "string"
                          },
                          "guarantee": {
                            "guaranteeCode": "string",
                            "shortDescription": "string",
                            "onHold": true
                          },
                          "promotion": {
                            "promotionCode": "string",
                            "promotionName": "string",
                            "couponCode": "string"
                          },
                          "suiteWith": "string",
                          "total": {
                            "taxes": {
                              "tax": [
                                {
                                  "description": "string",
                                  "type": "Inclusive",
                                  "code": "string",
                                  "amount": 0,
                                  "currencyCode": "string"
                                }
                              ],
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "fees": {
                              "fee": [
                                {
                                  "description": "string",
                                  "type": "Inclusive",
                                  "code": "string",
                                  "amount": 0,
                                  "currencyCode": "string"
                                }
                              ],
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "description": "string",
                            "amountBeforeTax": 0,
                            "amountAfterTax": 0,
                            "currencyCode": "string",
                            "currencySymbol": "string",
                            "decimalPlaces": 0,
                            "code": "string",
                            "rateOverride": true
                          },
                          "totalPoints": {
                            "awardsType": "string",
                            "points": 0
                          },
                          "multiValueAttrs": [
                            "string"
                          ],
                          "upsellInfo": {
                            "originalInfo": {
                              "rateCode": "string",
                              "totalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "roomType": {
                                "code": "string",
                                "description": "string"
                              },
                              "nights": 0
                            },
                            "upsellInfo": {
                              "totalUpsellCharge": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalUpsellMoneyAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "firstNightUpsellAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "firstNightUpsellCharge": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalUpsellPoints": 0,
                              "totalActualRateAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "roomType": {
                                "code": "string",
                                "description": "string"
                              },
                              "roomLongDescription": "string",
                              "ruleId": 0,
                              "ruleCode": "string",
                              "ruleDescription": "string",
                              "percentageSavings": 0,
                              "upsellDate": "2020-07-13",
                              "upsellUser": "string"
                            }
                          },
                          "mobileNotifications": {
                            "roomReady": "Pending",
                            "keyReady": "Pending",
                            "checkoutMessageReceived": true,
                            "requiresAction": true,
                            "errorMessage": "string"
                          },
                          "roomNumberLocked": true,
                          "printRate": true,
                          "primaryShareType": "Primary",
                          "remoteCheckInAllowed": true,
                          "bookingMedium": "string",
                          "bookingMediumDescription": "string"
                        },
                        "reservationGuests": [
                          {
                            "profileInfo": {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "profile": {
                                "customer": {
                                  "personName": [
                                    {
                                      "givenName": "string",
                                      "surname": "string",
                                      "nameType": "Primary",
                                      "language": "string",
                                      "externalSystem": "string"
                                    }
                                  ],
                                  "anonymization": {
                                    "anonymizationStatus": "Requested",
                                    "anonymizationDate": "2020-07-13T15:18:00.397Z"
                                  },
                                  "businessTitle": "string",
                                  "language": "string",
                                  "privateProfile": true,
                                  "blacklist": true
                                },
                                "company": {
                                  "companyName": "string"
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "string"
                                        ],
                                        "cityName": "string",
                                        "postalCode": "string",
                                        "county": "string",
                                        "state": "string",
                                        "country": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "type": "string"
                                      },
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "emails": {
                                  "emailInfo": [
                                    {
                                      "email": {
                                        "emailAddress": "string",
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "uRLs": {
                                  "uRLInfo": [
                                    {
                                      "url": {
                                        "value": "string",
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "relationships": {
                                  "relationship": [
                                    {
                                      "relationshipProfile": {
                                        "company": {
                                          "companyName": "string"
                                        },
                                        "profileIdList": [
                                          {
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "profileType": "Guest"
                                      },
                                      "relation": "string",
                                      "targetRelation": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileType": "Guest"
                              },
                              "profileCashieringDetail": {
                                "paymentMethod": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "eCommerceId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "routingInstructions": {
                                  "transactionCodes": [
                                    {
                                      "description": "string",
                                      "transactionGroup": "string",
                                      "transactionSubGroup": "string",
                                      "universalProductCode": "string",
                                      "routingInstructionsId": 0,
                                      "articles": [
                                        {
                                          "description": "string",
                                          "transactionCode": "string",
                                          "price": {
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "postIt": {
                                            "availableForPostIt": true
                                          },
                                          "universalProductCode": "string",
                                          "hotelId": "string",
                                          "articleCode": "string",
                                          "inactive": true,
                                          "orderSequence": 0
                                        }
                                      ],
                                      "transactionCode": "string",
                                      "hotelId": "string",
                                      "printTrxReceipt": true
                                    }
                                  ],
                                  "billingInstructions": [
                                    {
                                      "desc": "string",
                                      "routingInstructionsId": 0,
                                      "billingCode": "string",
                                      "hotelId": "string"
                                    }
                                  ],
                                  "autoPopulateRouting": true
                                },
                                "taxType": "string",
                                "fiscalGuestType": "string",
                                "hotelId": "string"
                              },
                              "registrationCardNo": "string"
                            },
                            "arrivalTransport": {
                              "comments": "string",
                              "type": "string",
                              "transportCode": "string",
                              "carrierCode": "string",
                              "stationCode": "string",
                              "dateTime": "2020-07-13T15:18:00.397Z",
                              "transportationReqd": true
                            },
                            "departureTransport": {
                              "comments": "string",
                              "type": "string",
                              "transportCode": "string",
                              "carrierCode": "string",
                              "stationCode": "string",
                              "dateTime": "2020-07-13T15:18:00.397Z",
                              "transportationReqd": true
                            },
                            "visaInfo": {
                              "visaIssueDate": "2020-07-13",
                              "visaExpiryDate": "2020-07-13",
                              "visaNumber": "string"
                            },
                            "reservationGuestRPH": "string",
                            "primary": true
                          }
                        ],
                        "sharedGuests": [
                          {
                            "profileId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "firstName": "string",
                            "lastName": "string",
                            "fullName": "string"
                          }
                        ],
                        "additionalGuestInfo": {
                          "portOfEntry": "string",
                          "dateOfEntry": "2020-07-13",
                          "nextDestination": "string",
                          "preferredRoomType": "string",
                          "lastStay": {
                            "lastStayDate": "2020-07-13",
                            "lastStayRoom": "string",
                            "lastStayRate": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "totalStay": 0
                          },
                          "purposeOfStay": "string",
                          "guestClassification": "string",
                          "guestStatus": "string"
                        },
                        "reservationProfiles": {
                          "reservationProfile": [
                            {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "profile": {
                                "customer": {
                                  "personName": [
                                    {
                                      "givenName": "string",
                                      "surname": "string",
                                      "nameType": "Primary",
                                      "language": "string",
                                      "externalSystem": "string"
                                    }
                                  ],
                                  "anonymization": {
                                    "anonymizationStatus": "Requested",
                                    "anonymizationDate": "2020-07-13T15:18:00.397Z"
                                  },
                                  "businessTitle": "string",
                                  "language": "string",
                                  "privateProfile": true,
                                  "blacklist": true
                                },
                                "company": {
                                  "companyName": "string"
                                },
                                "addresses": {
                                  "addressInfo": [
                                    {
                                      "address": {
                                        "addressLine": [
                                          "string"
                                        ],
                                        "cityName": "string",
                                        "postalCode": "string",
                                        "county": "string",
                                        "state": "string",
                                        "country": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "type": "string"
                                      },
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "telephones": {
                                  "telephoneInfo": [
                                    {
                                      "telephone": {
                                        "phoneNumber": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "emails": {
                                  "emailInfo": [
                                    {
                                      "email": {
                                        "emailAddress": "string",
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "uRLs": {
                                  "uRLInfo": [
                                    {
                                      "url": {
                                        "value": "string",
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "relationships": {
                                  "relationship": [
                                    {
                                      "relationshipProfile": {
                                        "company": {
                                          "companyName": "string"
                                        },
                                        "profileIdList": [
                                          {
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "profileType": "Guest"
                                      },
                                      "relation": "string",
                                      "targetRelation": "string"
                                    }
                                  ],
                                  "hasMore": true,
                                  "totalResults": 0,
                                  "count": 0
                                },
                                "profileType": "Guest"
                              },
                              "reservationProfileType": "Company"
                            }
                          ],
                          "commissionPayoutTo": "TravelAgent"
                        },
                        "reservationCommunication": {
                          "telephones": {
                            "telephoneInfo": [
                              {
                                "telephone": {
                                  "phoneNumber": "string"
                                }
                              }
                            ],
                            "hasMore": true,
                            "totalResults": 0,
                            "count": 0
                          },
                          "emails": {
                            "emailInfo": [
                              {
                                "email": {
                                  "emailAddress": "string",
                                  "type": "string"
                                }
                              }
                            ],
                            "hasMore": true,
                            "totalResults": 0,
                            "count": 0
                          }
                        },
                        "reservationAwards": [
                          {
                            "awardCode": "string",
                            "awardType": "Paper",
                            "description": "string",
                            "certificateNo": "string",
                            "masterCertificiateNo": "string",
                            "membershipNo": "string",
                            "hotelId": "string",
                            "hotelCategory": "string",
                            "externalHotelCode": "string",
                            "externalConfirmationNo": "string",
                            "categoryValid": true,
                            "reservationCertificateType": "Reward",
                            "rewardCertificateType": "Regular",
                            "status": "Available",
                            "expirationDate": "2020-07-13",
                            "gift": true,
                            "upgrade": true,
                            "package": true,
                            "instantlyRedeemable": true,
                            "paidUpgrade": true,
                            "detailedCertificate": true,
                            "nights": 0,
                            "sourceType": "string",
                            "points": 0,
                            "fBAInfo": {
                              "status": "Ordered",
                              "monetaryValue": 0,
                              "amount": 0,
                              "postedAmount": 0,
                              "reimbursedAmount": 0,
                              "postingDateTime": "2020-07-13",
                              "postingBusinessDate": "2020-07-13",
                              "settlementDateTime": "2020-07-13",
                              "settlementBusinessDate": "2020-07-13",
                              "reimbursementDateTime": "2020-07-13",
                              "reimbursementBusinessDate": "2020-07-13",
                              "fbaBillGenDate": "2020-07-13",
                              "currencyCode": "string",
                              "currencySymbol": "string",
                              "decimalPlaces": 0,
                              "flexibleBenefitAward": true,
                              "posted": true,
                              "settled": true,
                              "reimbursed": true,
                              "resettleAllowed": true,
                              "reimburseAllowed": true,
                              "orphanCertificate": true
                            },
                            "reservationId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "profileId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "quantity": 0,
                            "displaySequence": 0,
                            "createDateTime": "2020-07-13T15:18:00.397Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.397Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "trackItItems": [
                          {
                            "hotelId": "string",
                            "trackItId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "group": "Parcel",
                            "ticketNumber": "string",
                            "referenceNumber": "string",
                            "type": {
                              "type": {
                                "code": "string",
                                "description": "string"
                              },
                              "url": {
                                "value": "string",
                                "type": "string"
                              }
                            },
                            "action": {
                              "trackItAction": {
                                "code": "string",
                                "description": "string"
                              },
                              "status": "Open"
                            },
                            "location": {
                              "code": "string",
                              "description": "string"
                            },
                            "quantity": 0,
                            "followUpDate": "2020-07-13",
                            "description": "string",
                            "assignedTo": {
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "appUser": "string",
                              "lDAPUser": "string",
                              "actAs": "string",
                              "actAt": "string",
                              "userDefaultLanguage": "string",
                              "appUserId": {
                                "id": "string",
                                "type": "string"
                              },
                              "cashierId": 0,
                              "cashierTitle": "string",
                              "department": "string",
                              "departmentLocation": "string",
                              "salesRepCode": "string",
                              "expiryDate": "2020-07-13",
                              "disabledUntil": "2020-07-13",
                              "passwordChangeDate": "2020-07-13",
                              "userInfo": {
                                "personName": {
                                  "givenName": "string",
                                  "surname": "string",
                                  "nameType": "Primary",
                                  "language": "string",
                                  "externalSystem": "string"
                                },
                                "profileId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "addressInfo": {
                                  "address": {
                                    "addressLine": [
                                      "string"
                                    ],
                                    "cityName": "string",
                                    "postalCode": "string",
                                    "county": "string",
                                    "state": "string",
                                    "country": {
                                      "value": "string",
                                      "code": "string"
                                    },
                                    "type": "string"
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "emailInfo": {
                                  "email": {
                                    "emailAddress": "string",
                                    "type": "string"
                                  }
                                },
                                "phoneInfo": {
                                  "telephone": {
                                    "phoneNumber": "string"
                                  }
                                },
                                "department": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "gender": "Male",
                                "birthDate": "2020-07-13",
                                "birthDateMasked": "string"
                              },
                              "userSessionInfo": {
                                "businessDate": "2020-07-13",
                                "systemDate": "2020-07-13",
                                "terminal": "string",
                                "runningApp": "string",
                                "shareProfiles": true,
                                "hotel": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "cro": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "chain": "string",
                                "cROCountryCode": "string",
                                "sessionDefaults": {
                                  "dbDateFormat": "string",
                                  "oracleDateFormat": "string",
                                  "oracleTimeFormat": "string",
                                  "javaDateFormat": "string",
                                  "javaTimeFormat": "string",
                                  "currencyCode": "string",
                                  "currencyFormat": "string",
                                  "defaultLanguage": "string",
                                  "baseLanguage": "string"
                                },
                                "parameters": [
                                  {
                                    "parameterName": "string",
                                    "parameterValue": "string"
                                  }
                                ]
                              },
                              "attendantInfo": {
                                "attendantId": "string",
                                "hotelId": "string"
                              }
                            },
                            "reservationInfo": {
                              "reservationIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "timeSpan": {
                                "startDate": "2020-07-13",
                                "endDate": "2020-07-13",
                                "duration": "string"
                              },
                              "guestInfo": {
                                "membership": {
                                  "membershipId": 0,
                                  "programCode": "string",
                                  "bonusCode": "string",
                                  "membershipTypeDesc": "string",
                                  "membershipLevelDesc": "string",
                                  "accountId": "string",
                                  "membershipLevel": "string",
                                  "playerRanking": 0
                                },
                                "namePrefix": "string",
                                "givenName": "string",
                                "alternateGivenName": "string",
                                "middleName": "string",
                                "surnamePrefix": "string",
                                "surname": "string",
                                "alternateSurname": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "fullName": "string",
                                "alternateFullName": "string",
                                "phoneNumber": "string",
                                "email": "string",
                                "birthDate": "2020-07-13",
                                "language": "string",
                                "nationality": {
                                  "value": "string",
                                  "code": "string"
                                },
                                "vip": {
                                  "vipCode": "string",
                                  "vipDescription": "string"
                                },
                                "address": {
                                  "cityName": "string",
                                  "postalCode": "string",
                                  "state": "string",
                                  "country": {
                                    "value": "string",
                                    "code": "string"
                                  },
                                  "streetAddress": "string",
                                  "excludeNoCity": true
                                },
                                "anonymization": {
                                  "anonymizationStatus": "Requested",
                                  "anonymizationDate": "2020-07-13T15:18:00.397Z"
                                },
                                "accompanyGuests": [
                                  {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "fullName": "string",
                                    "registrationCardNo": "string",
                                    "profileIdList": [
                                      {
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                ],
                                "externalInfo": {
                                  "givenName": "string",
                                  "surname": "string"
                                },
                                "guestLastStayInfo": {
                                  "lastStayDate": "2020-07-13",
                                  "lastStayRoom": "string",
                                  "lastStayRate": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "totalStay": 0
                                },
                                "guestRestrictedCode": "string",
                                "guestRestrictedReasonDesc": "string",
                                "guestRestricted": true,
                                "registrationCardNo": "string",
                                "nameType": "Guest",
                                "id": "string",
                                "type": "string"
                              },
                              "roomType": "string",
                              "roomId": "string",
                              "roomStatus": "Clean",
                              "guarantee": {
                                "guaranteeCode": "string",
                                "shortDescription": "string",
                                "onHold": true
                              },
                              "reservationStatus": "Reserved",
                              "computedReservationStatus": "Reserved"
                            },
                            "trackItLogList": [
                              {
                                "hotelId": "string",
                                "trackItLogId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "trackItId": {
                                  "url": "string",
                                  "type": "string",
                                  "instance": "string",
                                  "idContext": "string",
                                  "id": "string",
                                  "idExtension": 0
                                },
                                "type": "string",
                                "description": "string",
                                "businessDate": "2020-07-13",
                                "logUserId": 0,
                                "logUserName": "string",
                                "logDate": "2020-07-13T15:18:00.397Z"
                              }
                            ]
                          }
                        ],
                        "shares": {
                          "reservation": [
                            null
                          ],
                          "hasMore": true,
                          "totalResults": 0,
                          "count": 0
                        },
                        "locators": [
                          {
                            "dateSpan": {
                              "start": "2020-07-13",
                              "end": "2020-07-13"
                            },
                            "timeSpan": {
                              "startDateTime": "2020-07-13T15:18:00.397Z",
                              "endDateTime": "2020-07-13T15:18:00.397Z"
                            },
                            "locatorText": "string",
                            "locatorOn": "2020-07-13T15:18:00.397Z",
                            "locatorBy": "string",
                            "locatorId": {
                              "id": "string",
                              "type": "string"
                            }
                          }
                        ],
                        "attachments": [
                          {
                            "fileName": "string",
                            "fileSize": 0,
                            "description": "string",
                            "global": true,
                            "hotelId": "string",
                            "history": {
                              "createDateTime": "2020-07-13T15:18:00.397Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-13T15:18:00.397Z",
                              "lastModifierId": "string"
                            },
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          }
                        ],
                        "webRegistrationCards": [
                          {
                            "fileName": "string",
                            "fileSize": 0,
                            "description": "string",
                            "global": true,
                            "hotelId": "string",
                            "history": {
                              "createDateTime": "2020-07-13T15:18:00.397Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-13T15:18:00.397Z",
                              "lastModifierId": "string"
                            },
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          }
                        ],
                        "serviceRequests": [
                          {
                            "serviceRequestId": {
                              "id": "string",
                              "type": "string"
                            },
                            "hotelId": "string",
                            "code": "string",
                            "status": "Open",
                            "priority": "string",
                            "department": {
                              "code": "string",
                              "description": "string"
                            },
                            "reservationIdList": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ],
                            "profileId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "guestName": "string",
                            "room": "string",
                            "openDate": "2020-07-13T15:18:00.397Z",
                            "guaranteedBy": "string",
                            "comment": "string",
                            "action": "string",
                            "guestContactMethod": "string",
                            "completionDate": "2020-07-13T15:18:00.397Z",
                            "closedDate": "2020-07-13T15:18:00.397Z",
                            "closedBy": "string",
                            "closeDescription": "string"
                          }
                        ],
                        "reservationActivities": [
                          {
                            "profileId": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ],
                            "personName": {
                              "givenName": "string",
                              "surname": "string",
                              "nameType": "Primary",
                              "language": "string",
                              "externalSystem": "string"
                            },
                            "address": {
                              "addressLine": [
                                "string"
                              ],
                              "cityName": "string",
                              "postalCode": "string",
                              "county": "string",
                              "state": "string",
                              "country": {
                                "value": "string",
                                "code": "string"
                              },
                              "type": "string"
                            },
                            "activities": [
                              {
                                "activityIds": [
                                  {
                                    "id": "string",
                                    "type": "string"
                                  }
                                ],
                                "type": "Golf",
                                "location": "string",
                                "name": [
                                  "string"
                                ],
                                "numberOfPersons": 0,
                                "timeSpan": {
                                  "startDateTime": "2020-07-13T15:18:00.397Z",
                                  "endDateTime": "2020-07-13T15:18:00.397Z"
                                },
                                "duration": {
                                  "startDateTime": "2020-07-13T15:18:00.397Z",
                                  "endDateTime": "2020-07-13T15:18:00.397Z"
                                },
                                "description": [
                                  "string"
                                ],
                                "note": [
                                  "string"
                                ],
                                "groupCode": "string",
                                "amount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "deposit": {
                                  "amount": 0,
                                  "currencyCode": "string",
                                  "collectedBy": "Vendor"
                                },
                                "inactiveDate": "2020-07-13T15:18:00.397Z",
                                "participants": {
                                  "participant": [
                                    {
                                      "givenName": "string",
                                      "surname": "string",
                                      "nameType": "Primary",
                                      "language": "string",
                                      "externalSystem": "string"
                                    }
                                  ]
                                },
                                "uRLLink": "string",
                                "extensions": {
                                  "activitySpecific": [
                                    "string"
                                  ]
                                },
                                "status": "Reserved",
                                "link": true
                              }
                            ],
                            "hotelId": "string"
                          }
                        ],
                        "scheduledActivities": [
                          {
                            "profileId": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ],
                            "personName": {
                              "givenName": "string",
                              "surname": "string",
                              "nameType": "Primary",
                              "language": "string",
                              "externalSystem": "string"
                            },
                            "address": {
                              "addressLine": [
                                "string"
                              ],
                              "cityName": "string",
                              "postalCode": "string",
                              "county": "string",
                              "state": "string",
                              "country": {
                                "value": "string",
                                "code": "string"
                              },
                              "type": "string"
                            },
                            "activities": [
                              {
                                "activityIds": [
                                  {
                                    "id": "string",
                                    "type": "string"
                                  }
                                ],
                                "type": "Golf",
                                "location": "string",
                                "name": [
                                  "string"
                                ],
                                "numberOfPersons": 0,
                                "timeSpan": {
                                  "startDateTime": "2020-07-13T15:18:00.397Z",
                                  "endDateTime": "2020-07-13T15:18:00.397Z"
                                },
                                "duration": {
                                  "startDateTime": "2020-07-13T15:18:00.397Z",
                                  "endDateTime": "2020-07-13T15:18:00.397Z"
                                },
                                "description": [
                                  "string"
                                ],
                                "note": [
                                  "string"
                                ],
                                "groupCode": "string",
                                "amount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "deposit": {
                                  "amount": 0,
                                  "currencyCode": "string",
                                  "collectedBy": "Vendor"
                                },
                                "inactiveDate": "2020-07-13T15:18:00.398Z",
                                "participants": {
                                  "participant": [
                                    {
                                      "givenName": "string",
                                      "surname": "string",
                                      "nameType": "Primary",
                                      "language": "string",
                                      "externalSystem": "string"
                                    }
                                  ]
                                },
                                "uRLLink": "string",
                                "extensions": {
                                  "activitySpecific": [
                                    "string"
                                  ]
                                },
                                "status": "Reserved",
                                "link": true
                              }
                            ],
                            "hotelId": "string"
                          }
                        ],
                        "prepaidCards": [
                          {
                            "hotelId": "string",
                            "reservationId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "name": "string",
                            "firstName": "string",
                            "profileId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "cardNo": "string",
                            "cardNumberMasked": "string",
                            "amount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "pinCode": "string",
                            "interfaceId": {
                              "id": "string",
                              "type": "string"
                            },
                            "cardDetails": {
                              "initialLoadDate": "2020-07-13",
                              "activateDate": "2020-07-13",
                              "initialCreditTotal": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "creditTotal": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "debitTotal": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "reservedTotal": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "balanceTotal": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "validUntilDate": "2020-07-13",
                              "expiredDate": "2020-07-13",
                              "transactions": [
                                {
                                  "transactionType": "Activate",
                                  "transactionDate": "2020-07-13",
                                  "transactionNo": 0,
                                  "amount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "createDateTime": "2020-07-13T15:18:00.398Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-13T15:18:00.398Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-13"
                                }
                              ]
                            },
                            "createDateTime": "2020-07-13T15:18:00.398Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.398Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13",
                            "giftCard": true
                          }
                        ],
                        "profileAwards": [
                          {
                            "awardCode": "string",
                            "awardType": "Paper",
                            "description": "string",
                            "certificateNo": "string",
                            "masterCertificiateNo": "string",
                            "membershipNo": "string",
                            "hotelId": "string",
                            "hotelCategory": "string",
                            "externalHotelCode": "string",
                            "externalConfirmationNo": "string",
                            "categoryValid": true,
                            "reservationCertificateType": "Reward",
                            "rewardCertificateType": "Regular",
                            "status": "Available",
                            "expirationDate": "2020-07-13",
                            "gift": true,
                            "upgrade": true,
                            "package": true,
                            "instantlyRedeemable": true,
                            "paidUpgrade": true,
                            "detailedCertificate": true,
                            "nights": 0,
                            "sourceType": "string",
                            "points": 0,
                            "fBAInfo": {
                              "status": "Ordered",
                              "monetaryValue": 0,
                              "amount": 0,
                              "postedAmount": 0,
                              "reimbursedAmount": 0,
                              "postingDateTime": "2020-07-13",
                              "postingBusinessDate": "2020-07-13",
                              "settlementDateTime": "2020-07-13",
                              "settlementBusinessDate": "2020-07-13",
                              "reimbursementDateTime": "2020-07-13",
                              "reimbursementBusinessDate": "2020-07-13",
                              "fbaBillGenDate": "2020-07-13",
                              "currencyCode": "string",
                              "currencySymbol": "string",
                              "decimalPlaces": 0,
                              "flexibleBenefitAward": true,
                              "posted": true,
                              "settled": true,
                              "reimbursed": true,
                              "resettleAllowed": true,
                              "reimburseAllowed": true,
                              "orphanCertificate": true
                            },
                            "reservationId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "profileId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "quantity": 0,
                            "displaySequence": 0,
                            "createDateTime": "2020-07-13T15:18:00.398Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.398Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "reservationPackages": [
                          {
                            "packageHeaderType": {
                              "primaryDetails": {
                                "description": "string"
                              }
                            },
                            "scheduleList": [
                              {
                                "consumptionDate": "2020-07-13",
                                "unitPrice": 0,
                                "computedResvPrice": 0,
                                "unitAllowance": 0,
                                "reservationDate": "2020-07-13",
                                "originalUnitPrice": 0,
                                "originalUnitAllowance": 0
                              }
                            ],
                            "newTimeSpan": {
                              "startDate": "2020-07-13",
                              "endDate": "2020-07-13",
                              "duration": "string"
                            },
                            "consumptionDetails": {
                              "defaultQuantity": 0
                            },
                            "packageCode": "string",
                            "ratePlanCode": "string",
                            "startDate": "2020-07-13",
                            "endDate": "2020-07-13",
                            "packageGroup": "string",
                            "source": "Reservation",
                            "awardCode": "string",
                            "points": 0
                          }
                        ],
                        "inventoryItems": {
                          "item": [
                            {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0,
                              "item": {
                                "description": "string",
                                "code": "string",
                                "name": "string",
                                "sellSeparate": true,
                                "requiredForBooking": true
                              },
                              "quantity": 0,
                              "timeSpan": {
                                "start": "2020-07-13",
                                "end": "2020-07-13"
                              },
                              "source": {
                                "ratePlanCode": "string",
                                "packageCode": "string",
                                "blockId": {
                                  "url": "string",
                                  "type": "string",
                                  "instance": "string",
                                  "idContext": "string",
                                  "id": "string",
                                  "idExtension": 0
                                },
                                "welcomeOffer": true
                              }
                            }
                          ],
                          "itemClassCode": "string"
                        },
                        "comments": [
                          {
                            "comment": {
                              "text": {
                                "value": "string",
                                "language": "string"
                              },
                              "image": "string",
                              "url": "string",
                              "commentTitle": "string",
                              "type": "string",
                              "internal": true,
                              "hotelId": "string"
                            }
                          }
                        ],
                        "guestComments": [
                          {
                            "comment": {
                              "text": {
                                "value": "string",
                                "language": "string"
                              },
                              "image": "string",
                              "url": "string",
                              "commentTitle": "string",
                              "type": "string",
                              "internal": true,
                              "hotelId": "string"
                            }
                          }
                        ],
                        "guestMemberships": [
                          {
                            "comment": {
                              "text": {
                                "value": "string",
                                "language": "string"
                              },
                              "image": "string",
                              "url": "string"
                            },
                            "newMembershipNumber": "string",
                            "nameOnCard": "string",
                            "programDescription": "string",
                            "membershipLevel": "string",
                            "membershipLevelDescription": "string",
                            "membershipClass": "string",
                            "earningPreference": "Points",
                            "inactive": true,
                            "benefits": [
                              {
                                "code": "string",
                                "message": "string",
                                "inactive": true
                              }
                            ],
                            "tierAdministration": "Disabled",
                            "downgrade": "Grace",
                            "reIssueNewCard": "Pending",
                            "excludeFromBatch": true,
                            "upgradeDescription": "string",
                            "downgradeDescription": "string",
                            "rating": "string",
                            "membershipEnrollmentCode": "string",
                            "memberStatus": "string",
                            "currentPoints": 0,
                            "pointsLabel": "string",
                            "enrollmentSource": "string",
                            "enrollmentResort": "string",
                            "preferredCard": true,
                            "membershipId": "string",
                            "membershipType": "string",
                            "primaryMembershipYn": "string",
                            "primaryMembership": true,
                            "membershipIdNo": 0,
                            "playerRanking": 0,
                            "centralSetup": true,
                            "signupDate": "2020-07-13",
                            "effectiveDate": "2020-07-13",
                            "expireDate": "2020-07-13",
                            "expireDateExclusiveIndicator": true,
                            "orderSequence": 0,
                            "createDateTime": "2020-07-13T15:18:00.398Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.398Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "preferenceCollection": [
                          {
                            "preference": [
                              {
                                "preferenceValue": "string",
                                "description": "string",
                                "global": true,
                                "source": "string",
                                "hotels": [
                                  "string"
                                ],
                                "preferenceCode": "string",
                                "excludedPreferencesCount": 0
                              }
                            ],
                            "preferenceType": "string",
                            "preferenceTypeDescription": "string",
                            "sequence": "string",
                            "maxQuantity": 0,
                            "availableQuantity": 0,
                            "maxResortUsedQuantity": 0,
                            "reservationPreference": true,
                            "createDateTime": "2020-07-13T15:18:00.398Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.398Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "reservationMemberships": [
                          {
                            "comment": {
                              "text": {
                                "value": "string",
                                "language": "string"
                              },
                              "image": "string",
                              "url": "string"
                            },
                            "newMembershipNumber": "string",
                            "nameOnCard": "string",
                            "programDescription": "string",
                            "membershipLevel": "string",
                            "membershipLevelDescription": "string",
                            "membershipClass": "string",
                            "earningPreference": "Points",
                            "inactive": true,
                            "benefits": [
                              {
                                "code": "string",
                                "message": "string",
                                "inactive": true
                              }
                            ],
                            "tierAdministration": "Disabled",
                            "downgrade": "Grace",
                            "reIssueNewCard": "Pending",
                            "excludeFromBatch": true,
                            "upgradeDescription": "string",
                            "downgradeDescription": "string",
                            "rating": "string",
                            "membershipEnrollmentCode": "string",
                            "memberStatus": "string",
                            "currentPoints": 0,
                            "pointsLabel": "string",
                            "enrollmentSource": "string",
                            "enrollmentResort": "string",
                            "preferredCard": true,
                            "membershipId": "string",
                            "membershipType": "string",
                            "primaryMembershipYn": "string",
                            "primaryMembership": true,
                            "membershipIdNo": 0,
                            "playerRanking": 0,
                            "centralSetup": true,
                            "signupDate": "2020-07-13",
                            "effectiveDate": "2020-07-13",
                            "expireDate": "2020-07-13",
                            "expireDateExclusiveIndicator": true,
                            "orderSequence": 0,
                            "createDateTime": "2020-07-13T15:18:00.399Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.399Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13",
                            "linkMembership": true,
                            "primary": true
                          }
                        ],
                        "reservationPaymentMethods": [
                          {
                            "paymentCard": {
                              "cardId": {
                                "id": "string",
                                "type": "string"
                              },
                              "currentAuthorizedAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "approvalAmountNeeded": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "cardType": "Ab",
                              "userDefinedCardType": "string",
                              "cardNumber": "string",
                              "cardNumberMasked": "string",
                              "cardNumberLast4Digits": "string",
                              "expirationDate": "2020-07-13",
                              "expirationDateMasked": "string",
                              "expirationDateExpired": true,
                              "cardHolderName": "string",
                              "attachCreditCardToProfile": true,
                              "processing": "Eft",
                              "swiped": true,
                              "cardOrToken": "CardNumber"
                            },
                            "balance": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "authorizationRule": {
                              "code": 0,
                              "amount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "percent": 0
                            },
                            "emailFolioInfo": {
                              "email": {
                                "emailAddress": "string",
                                "type": "string"
                              },
                              "emailFolio": true,
                              "id": "string",
                              "type": "string"
                            },
                            "paymentMethod": "string",
                            "description": "string",
                            "folioView": 0
                          }
                        ],
                        "routingInstructions": [
                          {
                            "folio": {
                              "guestInfo": {
                                "profileIdList": [
                                  {
                                    "id": "string",
                                    "type": "string"
                                  }
                                ]
                              },
                              "payeeInfo": {
                                "payeeId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "payeeName": "string",
                                "payeeAddress": {
                                  "address": {
                                    "addressLine": [
                                      "string"
                                    ],
                                    "cityName": "string",
                                    "postalCode": "string",
                                    "county": "string",
                                    "state": "string",
                                    "country": {
                                      "value": "string",
                                      "code": "string"
                                    },
                                    "type": "string"
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "payeeAddressCount": 0,
                                "payeeReferenceCurrency": "string",
                                "payeeAccountInfo": {
                                  "accountName": "string",
                                  "accountId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "accountNo": "string",
                                  "status": {
                                    "restriction": "string",
                                    "description": "string",
                                    "restricted": true
                                  }
                                },
                                "payeeTaxNumber": "string"
                              },
                              "aRNumber": "string",
                              "instructions": [
                                {
                                  "duration": {
                                    "timeSpan": {
                                      "startDate": "2020-07-13",
                                      "endDate": "2020-07-13",
                                      "duration": "string"
                                    },
                                    "sunday": true,
                                    "monday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                    "thursday": true,
                                    "friday": true,
                                    "saturday": true,
                                    "daily": true
                                  },
                                  "transactionCodes": [
                                    {
                                      "description": "string",
                                      "transactionGroup": "string",
                                      "transactionSubGroup": "string",
                                      "universalProductCode": "string",
                                      "routingInstructionsId": 0,
                                      "articles": [
                                        {
                                          "description": "string",
                                          "transactionCode": "string",
                                          "price": {
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "postIt": {
                                            "availableForPostIt": true
                                          },
                                          "universalProductCode": "string",
                                          "hotelId": "string",
                                          "articleCode": "string",
                                          "inactive": true,
                                          "orderSequence": 0
                                        }
                                      ],
                                      "transactionCode": "string",
                                      "hotelId": "string",
                                      "printTrxReceipt": true
                                    }
                                  ],
                                  "billingInstructions": [
                                    {
                                      "desc": "string",
                                      "routingInstructionsId": 0,
                                      "billingCode": "string",
                                      "hotelId": "string"
                                    }
                                  ],
                                  "creditLimit": 0,
                                  "percentageLimit": 0,
                                  "covers": 0,
                                  "limitUsed": 0,
                                  "routingLinkId": {
                                    "id": "string",
                                    "type": "string"
                                  }
                                }
                              ],
                              "folioWindowNo": 0,
                              "paymentMethod": "string"
                            },
                            "room": {
                              "roomId": "string",
                              "guestNameId": {
                                "id": "string",
                                "type": "string"
                              },
                              "guestDisplayName": "string",
                              "reservationNameId": {
                                "id": "string",
                                "type": "string"
                              },
                              "instructions": [
                                {
                                  "duration": {
                                    "timeSpan": {
                                      "startDate": "2020-07-13",
                                      "endDate": "2020-07-13",
                                      "duration": "string"
                                    },
                                    "sunday": true,
                                    "monday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                    "thursday": true,
                                    "friday": true,
                                    "saturday": true,
                                    "daily": true
                                  },
                                  "transactionCodes": [
                                    {
                                      "description": "string",
                                      "transactionGroup": "string",
                                      "transactionSubGroup": "string",
                                      "universalProductCode": "string",
                                      "routingInstructionsId": 0,
                                      "articles": [
                                        {
                                          "description": "string",
                                          "transactionCode": "string",
                                          "price": {
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "postIt": {
                                            "availableForPostIt": true
                                          },
                                          "universalProductCode": "string",
                                          "hotelId": "string",
                                          "articleCode": "string",
                                          "inactive": true,
                                          "orderSequence": 0
                                        }
                                      ],
                                      "transactionCode": "string",
                                      "hotelId": "string",
                                      "printTrxReceipt": true
                                    }
                                  ],
                                  "billingInstructions": [
                                    {
                                      "desc": "string",
                                      "routingInstructionsId": 0,
                                      "billingCode": "string",
                                      "hotelId": "string"
                                    }
                                  ],
                                  "creditLimit": 0,
                                  "percentageLimit": 0,
                                  "covers": 0,
                                  "limitUsed": 0,
                                  "routingLinkId": {
                                    "id": "string",
                                    "type": "string"
                                  }
                                }
                              ]
                            },
                            "comp": {
                              "compRequestInfo": {
                                "requestedBy": {
                                  "userId": 0,
                                  "userName": "string"
                                },
                                "comments": "string",
                                "declinedBy": {
                                  "userId": 0,
                                  "userName": "string"
                                },
                                "status": "Request"
                              },
                              "payeeInfo": {
                                "payeeId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "payeeName": "string",
                                "payeeAddress": {
                                  "address": {
                                    "addressLine": [
                                      "string"
                                    ],
                                    "cityName": "string",
                                    "postalCode": "string",
                                    "county": "string",
                                    "state": "string",
                                    "country": {
                                      "value": "string",
                                      "code": "string"
                                    },
                                    "type": "string"
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "payeeAddressCount": 0,
                                "payeeReferenceCurrency": "string",
                                "payeeAccountInfo": {
                                  "accountName": "string",
                                  "accountId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "accountNo": "string",
                                  "status": {
                                    "restriction": "string",
                                    "description": "string",
                                    "restricted": true
                                  }
                                },
                                "payeeTaxNumber": "string"
                              },
                              "instructions": [
                                {
                                  "duration": {
                                    "timeSpan": {
                                      "startDate": "2020-07-13",
                                      "endDate": "2020-07-13",
                                      "duration": "string"
                                    },
                                    "sunday": true,
                                    "monday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                    "thursday": true,
                                    "friday": true,
                                    "saturday": true,
                                    "daily": true
                                  },
                                  "transactionCodes": [
                                    {
                                      "description": "string",
                                      "transactionGroup": "string",
                                      "transactionSubGroup": "string",
                                      "universalProductCode": "string",
                                      "routingInstructionsId": 0,
                                      "articles": [
                                        {
                                          "description": "string",
                                          "transactionCode": "string",
                                          "price": {
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "postIt": {
                                            "availableForPostIt": true
                                          },
                                          "universalProductCode": "string",
                                          "hotelId": "string",
                                          "articleCode": "string",
                                          "inactive": true,
                                          "orderSequence": 0
                                        }
                                      ],
                                      "transactionCode": "string",
                                      "hotelId": "string",
                                      "printTrxReceipt": true
                                    }
                                  ],
                                  "billingInstructions": [
                                    {
                                      "desc": "string",
                                      "routingInstructionsId": 0,
                                      "billingCode": "string",
                                      "hotelId": "string"
                                    }
                                  ],
                                  "creditLimit": 0,
                                  "percentageLimit": 0,
                                  "covers": 0,
                                  "limitUsed": 0,
                                  "routingLinkId": {
                                    "id": "string",
                                    "type": "string"
                                  }
                                }
                              ],
                              "folioWindowNo": 0
                            },
                            "request": {
                              "compRequestInfo": {
                                "requestedBy": {
                                  "userId": 0,
                                  "userName": "string"
                                },
                                "comments": "string",
                                "declinedBy": {
                                  "userId": 0,
                                  "userName": "string"
                                },
                                "status": "Request"
                              },
                              "instructions": [
                                {
                                  "duration": {
                                    "timeSpan": {
                                      "startDate": "2020-07-13",
                                      "endDate": "2020-07-13",
                                      "duration": "string"
                                    },
                                    "sunday": true,
                                    "monday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                    "thursday": true,
                                    "friday": true,
                                    "saturday": true,
                                    "daily": true
                                  },
                                  "transactionCodes": [
                                    {
                                      "description": "string",
                                      "transactionGroup": "string",
                                      "transactionSubGroup": "string",
                                      "universalProductCode": "string",
                                      "routingInstructionsId": 0,
                                      "articles": [
                                        {
                                          "description": "string",
                                          "transactionCode": "string",
                                          "price": {
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "postIt": {
                                            "availableForPostIt": true
                                          },
                                          "universalProductCode": "string",
                                          "hotelId": "string",
                                          "articleCode": "string",
                                          "inactive": true,
                                          "orderSequence": 0
                                        }
                                      ],
                                      "transactionCode": "string",
                                      "hotelId": "string",
                                      "printTrxReceipt": true
                                    }
                                  ],
                                  "billingInstructions": [
                                    {
                                      "desc": "string",
                                      "routingInstructionsId": 0,
                                      "billingCode": "string",
                                      "hotelId": "string"
                                    }
                                  ],
                                  "creditLimit": 0,
                                  "percentageLimit": 0,
                                  "covers": 0,
                                  "limitUsed": 0,
                                  "routingLinkId": {
                                    "id": "string",
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "reservationPolicies": {
                          "cancellationPolicies": [
                            {
                              "revenueType": "Rooms",
                              "policy": {
                                "deadline": {
                                  "absoluteDeadline": "2020-07-13T15:18:00.399Z"
                                },
                                "amountPercent": {
                                  "basisType": "FlatAmount",
                                  "nights": 0,
                                  "percent": 0,
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "policyCode": "string",
                                "effective": true
                              },
                              "percentageDue": 0,
                              "comments": "string",
                              "policyId": {
                                "id": "string",
                                "type": "string"
                              }
                            }
                          ],
                          "depositPolicies": [
                            {
                              "revenueType": "Rooms",
                              "policy": {
                                "amountPercent": {
                                  "basisType": "FlatAmount",
                                  "nights": 0,
                                  "percent": 0,
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "deadline": {
                                  "absoluteDeadline": "2020-07-13T15:18:00.399Z"
                                },
                                "description": "string",
                                "policyCode": "string"
                              },
                              "comments": "string",
                              "amountPaid": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "amountDue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "policyId": {
                                "id": "string",
                                "type": "string"
                              }
                            }
                          ]
                        },
                        "cashiering": {
                          "revenuesAndBalances": {
                            "totalFixedCharge": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "totalPayment": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "roomRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "foodAndBevRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "otherRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "nonRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "totalRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "balance": {
                              "amount": 0,
                              "currencyCode": "string"
                            }
                          },
                          "billingPrivileges": {
                            "postingRestriction": true,
                            "preStayCharging": true,
                            "postStayCharging": true,
                            "folioCloseDate": "2020-07-13",
                            "scheduledCheckout": true,
                            "scheduledCheckoutTime": "2020-07-13",
                            "directBillAuthorized": true,
                            "videoCheckout": true,
                            "allowAutoCheckin": true,
                            "autoSettlement": true,
                            "autoSettlementType": "string",
                            "autoSettlementFreq": 0,
                            "creditLimitAutoPay": true
                          },
                          "taxType": {
                            "hotelId": "string",
                            "code": "string",
                            "description": "string",
                            "collectingAgentTax": true,
                            "printAutoAdjust": true,
                            "reportExemptDays": 0,
                            "reportTaxPercentage": 0,
                            "minimumLengthOfStay": 0,
                            "taxExemptNo": "string"
                          },
                          "bedTaxReporting": {
                            "taxRegistrationNo": 0,
                            "visaNumber": "string",
                            "visaIssueDate": "2020-07-13",
                            "visaExpiryDate": "2020-07-13",
                            "taxableDays": 0
                          },
                          "folioTexts": {
                            "folioText": [
                              {
                                "text": "string",
                                "row": 0
                              }
                            ]
                          },
                          "periodicFolio": {
                            "lastSettlementDate": "2020-07-13",
                            "lastFolioDate": "2020-07-13",
                            "frequency": 0
                          },
                          "compAccounting": {
                            "compType": "string",
                            "authorizer": "string"
                          },
                          "reservationPreConfiguredRoutingInstruction": {
                            "authorizerInfo": {
                              "authorizerId": {
                                "id": "string",
                                "type": "string"
                              },
                              "authorizerUserName": "string",
                              "authorizerName": "string",
                              "authorizerRateCode": "string",
                              "inheritAuthorizerRateCode": true
                            },
                            "ratePlanCode": "string",
                            "profileType": "Company",
                            "promotionCode": "string"
                          },
                          "financiallyResponsible": true,
                          "proratedBilling": true,
                          "lastRoomAndTaxPostedDate": "2020-07-13",
                          "reverseCheckInAllowed": true,
                          "reverseAdvanceCheckInAllowed": true,
                          "transactionsPosted": true
                        },
                        "housekeeping": {
                          "instructions": "string",
                          "facilityTaskInfo": {
                            "task": {
                              "description": "string",
                              "instructions": "string",
                              "facilityDepartureTask": true,
                              "linenChange": true,
                              "hotelId": "string",
                              "code": "string",
                              "sequence": 0
                            },
                            "supplies": [
                              {
                                "description": "string",
                                "quantity": 0,
                                "code": "string"
                              }
                            ],
                            "date": "2020-07-13"
                          },
                          "linenChange": true,
                          "turndownRequested": true,
                          "serviceTime": "2020-07-13",
                          "expectedServiceTime": "string",
                          "roomStatus": "Clean"
                        },
                        "linkedReservation": {
                          "reservationInfo": [
                            {
                              "reservationIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "timeSpan": {
                                "startDate": "2020-07-13",
                                "endDate": "2020-07-13",
                                "duration": "string"
                              },
                              "givenName": "string",
                              "surname": "string",
                              "title": "string",
                              "roomType": "string",
                              "room": "string",
                              "ratePlanCode": "string",
                              "rate": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guarantee": {
                                "guaranteeCode": "string",
                                "shortDescription": "string",
                                "onHold": true
                              },
                              "balance": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "reservationBlock": {
                                "blockIdList": [
                                  {
                                    "id": "string",
                                    "type": "string"
                                  }
                                ],
                                "blockName": "string",
                                "hotelId": "string"
                              },
                              "displayColor": "string",
                              "allowedActions": [
                                "Cancel"
                              ],
                              "reservationStatus": "Reserved",
                              "hotelId": "string",
                              "linkReservationType": "Linked",
                              "reverseCheckInAllowed": true,
                              "roomNumberLocked": true,
                              "suppressRate": true
                            }
                          ],
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "extSystemSync": true,
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "string",
                              "value": "string",
                              "alternateName": "string"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "name": "string",
                              "value": 0,
                              "alternateName": "string"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "name": "string",
                              "value": "2020-07-13",
                              "alternateName": "string"
                            }
                          ]
                        },
                        "reservationIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "waitlist": {
                          "reasonDescription": "string",
                          "priorityDescription": "string",
                          "description": "string",
                          "reasonCode": "string",
                          "priorityCode": "string",
                          "telephone": "string"
                        },
                        "cancellation": {
                          "description": "string",
                          "code": "string",
                          "cancellationNo": {
                            "id": "string",
                            "type": "string"
                          },
                          "date": "2020-07-13"
                        },
                        "catering": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "revenueType": "string"
                        },
                        "statisticalClassification": {
                          "roomType": "string",
                          "rateTier": 0
                        },
                        "alerts": [
                          {
                            "code": "string",
                            "global": true,
                            "area": "CheckIn",
                            "description": "string",
                            "screenNotification": true,
                            "printerNotification": true,
                            "printerName": "string",
                            "reportId": {
                              "id": "string",
                              "type": "string"
                            },
                            "reportName": "string",
                            "reportDescription": "string",
                            "guestInfo": {
                              "guestName": "string",
                              "membership": {
                                "comment": {
                                  "text": {
                                    "value": "string",
                                    "language": "string"
                                  },
                                  "image": "string",
                                  "url": "string"
                                },
                                "newMembershipNumber": "string",
                                "nameOnCard": "string",
                                "programDescription": "string",
                                "membershipLevel": "string",
                                "membershipLevelDescription": "string",
                                "membershipClass": "string",
                                "earningPreference": "Points",
                                "inactive": true,
                                "benefits": [
                                  {
                                    "code": "string",
                                    "message": "string",
                                    "inactive": true
                                  }
                                ],
                                "tierAdministration": "Disabled",
                                "downgrade": "Grace",
                                "reIssueNewCard": "Pending",
                                "excludeFromBatch": true,
                                "upgradeDescription": "string",
                                "downgradeDescription": "string",
                                "rating": "string",
                                "membershipEnrollmentCode": "string",
                                "memberStatus": "string",
                                "currentPoints": 0,
                                "pointsLabel": "string",
                                "enrollmentSource": "string",
                                "enrollmentResort": "string",
                                "preferredCard": true,
                                "membershipId": "string",
                                "membershipType": "string",
                                "primaryMembershipYn": "string",
                                "primaryMembership": true,
                                "membershipIdNo": 0,
                                "playerRanking": 0,
                                "centralSetup": true,
                                "signupDate": "2020-07-13",
                                "effectiveDate": "2020-07-13",
                                "expireDate": "2020-07-13",
                                "expireDateExclusiveIndicator": true,
                                "orderSequence": 0,
                                "createDateTime": "2020-07-13T15:18:00.400Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-13T15:18:00.400Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-13"
                              },
                              "vipStatus": {
                                "value": "string",
                                "code": "string"
                              },
                              "lastHotelCode": "string",
                              "lastStayDate": "2020-07-13",
                              "totalStay": 0,
                              "comments": "string",
                              "preference": "string",
                              "preference2": "string",
                              "guestPreferredLanguage": "string",
                              "totalBrandStay": 0,
                              "birthDate": "2020-07-13",
                              "birthDateMasked": "string"
                            },
                            "userDefinedFields": {
                              "characterUDFs": [
                                {
                                  "name": "string",
                                  "value": "string",
                                  "alternateName": "string"
                                }
                              ],
                              "numericUDFs": [
                                {
                                  "name": "string",
                                  "value": 0,
                                  "alternateName": "string"
                                }
                              ],
                              "dateUDFs": [
                                {
                                  "name": "string",
                                  "value": "2020-07-13",
                                  "alternateName": "string"
                                }
                              ]
                            },
                            "welcomeOffer": {
                              "status": "string",
                              "type": "BonusPoints"
                            },
                            "stopCheckInCheckOut": true,
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0,
                            "createDateTime": "2020-07-13T15:18:00.400Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.400Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "traces": [
                          {
                            "timeInfo": {
                              "dateTimeSpan": {
                                "startDateTime": "2020-07-13T15:18:00.400Z",
                                "endDateTime": "2020-07-13T15:18:00.400Z"
                              },
                              "traceOn": "2020-07-13T15:18:00.400Z",
                              "traceTime": "string",
                              "enteredBy": "string"
                            },
                            "reservationId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "departmentId": "string",
                            "traceText": "string",
                            "resolveInfo": {
                              "resolvedOn": "2020-07-13",
                              "resolvedBy": "string"
                            },
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0,
                            "createDateTime": "2020-07-13T15:18:00.400Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.400Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "confirmationLetters": [
                          {
                            "recipientInfo": {
                              "profileId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "formerName": {
                                "name": "string",
                                "fullName": "string",
                                "namePrefix": "string",
                                "givenName": "string",
                                "middleName": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameType": "Primary"
                              },
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "cityName": "string",
                                  "postalCode": "string",
                                  "county": "string",
                                  "state": "string",
                                  "country": {
                                    "value": "string",
                                    "code": "string"
                                  },
                                  "type": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "emailAddress": "string",
                                  "type": "string"
                                }
                              },
                              "faxInfo": {
                                "telephone": {
                                  "phoneNumber": "string"
                                }
                              },
                              "telephoneInfo": {
                                "telephone": {
                                  "phoneNumber": "string"
                                }
                              },
                              "recipientType": "Guest"
                            },
                            "deliveryInfo": [
                              {
                                "communicationType": "Print",
                                "lastStatus": "Pending",
                                "lastAttempted": "2020-07-13T15:18:00.400Z",
                                "successfulTries": 0
                              }
                            ],
                            "confirmationStyleInfo": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0,
                              "style": "string"
                            },
                            "fromEmail": "string",
                            "sendTextMessage": true,
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          }
                        ],
                        "callHistory": [
                          {
                            "dateTimeSpan": {
                              "startDateTime": "2020-07-13T15:18:00.400Z",
                              "endDateTime": "2020-07-13T15:18:00.400Z"
                            },
                            "caller": {
                              "givenName": "string",
                              "surname": "string",
                              "phone": "string",
                              "email": "string",
                              "fax": "string",
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "reservation": {
                              "reservationIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ],
                              "hotelId": "string"
                            },
                            "turnawayCode": "string",
                            "comments": "string",
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          }
                        ],
                        "fixedCharges": [
                          {
                            "schedule": {
                              "start": "2020-07-13",
                              "end": "2020-07-13",
                              "frequency": "O",
                              "dayToExecute": "string",
                              "dateToExecute": "2020-07-13"
                            },
                            "charge": {
                              "transaction": {
                                "code": "string",
                                "description": "string"
                              },
                              "quantity": 0,
                              "chargeAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "percent": 0,
                              "supplement": "string",
                              "article": {
                                "code": "string",
                                "description": "string"
                              },
                              "roomNights": 0
                            },
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          }
                        ],
                        "guestMessages": [
                          {
                            "message": {
                              "messageText": "string",
                              "messageDate": "2020-07-13T15:18:00.400Z",
                              "typeOfMessage": "Tm",
                              "recipient": "string",
                              "operator": "string"
                            },
                            "delivery": {
                              "deliveryStatus": "Mr",
                              "deliveryDate": "2020-07-13T15:18:00.400Z",
                              "deliveredBy": "string",
                              "printDate": "2020-07-13T15:18:00.400Z",
                              "textMessageSentDate": "2020-07-13T15:18:00.400Z",
                              "textMessageSentBy": "string",
                              "textMessageSentById": 0,
                              "textMessageRecipientNo": "string"
                            },
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0,
                            "createDateTime": "2020-07-13T15:18:00.400Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:18:00.400Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "lockHandle": 0,
                        "overrideInstructions": [
                          {
                            "description": "string",
                            "date": "2020-07-13",
                            "type": "string",
                            "userId": "string"
                          }
                        ],
                        "queue": {
                          "timeSpan": {
                            "startDate": "2020-07-13",
                            "endDate": "2020-07-13",
                            "duration": "string",
                            "durationInSeconds": 0
                          },
                          "guestTextInfo": {
                            "sentTime": "2020-07-13T15:18:00.400Z",
                            "sentBy": "string"
                          },
                          "priority": 0,
                          "averageQueueTimeToCheckIn": 0,
                          "averageQueueTimeCurrentReservations": 0,
                          "queueDate": "2020-07-13"
                        },
                        "allowedActions": [
                          "Cancel"
                        ],
                        "eCoupons": [
                          {
                            "eCouponId": {
                              "id": "string",
                              "type": "string"
                            },
                            "code": "string",
                            "description": "string",
                            "autoAttached": true,
                            "issuedQuantity": 0,
                            "usedQuantity": 0,
                            "reason": "string",
                            "ratePlanCode": "string",
                            "welcomeOffer": true
                          }
                        ],
                        "transactionDiversions": {
                          "transactionDiversions": [
                            [
                              {
                                "vipCode": "string",
                                "membership": {
                                  "type": "string",
                                  "level": "string"
                                },
                                "targetRoom": "string",
                                "transactionCodes": {
                                  "transactionCode": [
                                    {
                                      "code": "string",
                                      "description": "string"
                                    }
                                  ]
                                },
                                "description": "string",
                                "level": "Property",
                                "thresholds": {
                                  "entity": "ThresholdCount",
                                  "scope": "PerDay",
                                  "minRequired": 0,
                                  "complimentary": 0,
                                  "isEditable": true
                                },
                                "type": "Vip",
                                "hotelId": "string",
                                "code": "string",
                                "displaySequence": 0,
                                "inactive": true,
                                "notes": {
                                  "comment": {
                                    "text": {
                                      "value": "string",
                                      "language": "string"
                                    },
                                    "image": "string",
                                    "url": "string",
                                    "commentTitle": "string",
                                    "type": "string",
                                    "internal": true,
                                    "hotelId": "string"
                                  }
                                },
                                "posted": 0,
                                "diverted": 0,
                                "dailyDetails": [
                                  {
                                    "posted": 0,
                                    "diverted": 0,
                                    "date": "2020-07-13"
                                  }
                                ]
                              }
                            ]
                          ],
                          "actionType": "string"
                        },
                        "advanceCheckIn": {
                          "advanceCheckedIn": true,
                          "expectedReturnTime": "2020-07-13T15:18:00.400Z",
                          "eTRComments": "string"
                        },
                        "tickets": [
                          {
                            "ticketId": {
                              "id": "string",
                              "type": "string"
                            },
                            "packageCode": "string",
                            "reservationProductId": {
                              "id": "string",
                              "type": "string"
                            },
                            "ticketNumber": {
                              "id": "string",
                              "type": "string"
                            },
                            "description": "string",
                            "issueDate": "2020-07-13",
                            "price": 0,
                            "consumptionDate": "2020-07-13",
                            "rateCode": "string",
                            "quantity": 0,
                            "reference": "string",
                            "status": "string",
                            "statusDescription": "string"
                          }
                        ],
                        "accessRestrictionMessage": "string",
                        "eCertificates": [
                          {
                            "eCertificateNo": "string",
                            "actionType": "Create",
                            "eCertificateType": "Promotion"
                          }
                        ],
                        "customNameValueDetail": {
                          "nameValues": [
                            {
                              "name": "string",
                              "value": "string",
                              "formatString": "string",
                              "dataType": "String",
                              "origin": {
                                "originName": "Reservation",
                                "destination": "string",
                                "id": "string",
                                "type": "string"
                              }
                            }
                          ]
                        },
                        "customChargeExemptionDetails": [
                          {
                            "customChargesExemption": {
                              "code": "string",
                              "description": "string"
                            },
                            "customChargeQuantity": {
                              "quantity": 0,
                              "available": true
                            },
                            "customChargeDates": [
                              {
                                "date": "2020-07-13",
                                "quantity": 0
                              }
                            ],
                            "excludedDates": [
                              {
                                "date": "2020-07-13",
                                "reason": "NotConfigured"
                              }
                            ]
                          }
                        ],
                        "autoBorrowFromHouse": true,
                        "overrideExternalChecks": true,
                        "hotelId": "string",
                        "roomStayReservation": true,
                        "reservationStatus": "Reserved",
                        "computedReservationStatus": "Reserved",
                        "walkIn": true,
                        "printRate": true,
                        "createDateTime": "2020-07-13T15:18:00.400Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:18:00.400Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13",
                        "createBusinessDate": "2020-07-13",
                        "reinstateDate": "2020-07-13",
                        "party": "string",
                        "primaryEnrollmentResort": "string",
                        "primaryEnrollmentChain": "string",
                        "customReference": "string",
                        "displayColor": "string",
                        "markAsRecentlyAccessed": true,
                        "overrideInventoryCheck": true,
                        "accessRestriction": "Change",
                        "preRegistered": true,
                        "upgradeEligible": true,
                        "overrideBlockRestriction": true,
                        "allowAutoCheckin": true,
                        "hasOpenFolio": true,
                        "allowMobileCheckout": true,
                        "allowMobileViewFolio": true,
                        "allowPreRegistration": true,
                        "optedForCommunication": true,
                        "chargeCardNumber": "string"
                      },
                      "routingInstructions": [
                        {
                          "folio": {
                            "guestInfo": {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ]
                            },
                            "payeeInfo": {
                              "payeeId": {
                                "id": "string",
                                "type": "string"
                              },
                              "payeeName": "string",
                              "payeeAddress": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "cityName": "string",
                                  "postalCode": "string",
                                  "county": "string",
                                  "state": "string",
                                  "country": {
                                    "value": "string",
                                    "code": "string"
                                  },
                                  "type": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "payeeAddressCount": 0,
                              "payeeReferenceCurrency": "string",
                              "payeeAccountInfo": {
                                "accountName": "string",
                                "accountId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "accountNo": "string",
                                "status": {
                                  "restriction": "string",
                                  "description": "string",
                                  "restricted": true
                                }
                              },
                              "payeeTaxNumber": "string"
                            },
                            "aRNumber": "string",
                            "instructions": [
                              {
                                "duration": {
                                  "timeSpan": {
                                    "startDate": "2020-07-13",
                                    "endDate": "2020-07-13",
                                    "duration": "string"
                                  },
                                  "sunday": true,
                                  "monday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                  "thursday": true,
                                  "friday": true,
                                  "saturday": true,
                                  "daily": true
                                },
                                "transactionCodes": [
                                  {
                                    "description": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string",
                                    "routingInstructionsId": 0,
                                    "articles": [
                                      {
                                        "description": "string",
                                        "transactionCode": "string",
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "postIt": {
                                          "availableForPostIt": true
                                        },
                                        "universalProductCode": "string",
                                        "hotelId": "string",
                                        "articleCode": "string",
                                        "inactive": true,
                                        "orderSequence": 0
                                      }
                                    ],
                                    "transactionCode": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true
                                  }
                                ],
                                "billingInstructions": [
                                  {
                                    "desc": "string",
                                    "routingInstructionsId": 0,
                                    "billingCode": "string",
                                    "hotelId": "string"
                                  }
                                ],
                                "creditLimit": 0,
                                "percentageLimit": 0,
                                "covers": 0,
                                "limitUsed": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              }
                            ],
                            "folioWindowNo": 0,
                            "paymentMethod": "string"
                          },
                          "room": {
                            "roomId": "string",
                            "guestNameId": {
                              "id": "string",
                              "type": "string"
                            },
                            "guestDisplayName": "string",
                            "reservationNameId": {
                              "id": "string",
                              "type": "string"
                            },
                            "instructions": [
                              {
                                "duration": {
                                  "timeSpan": {
                                    "startDate": "2020-07-13",
                                    "endDate": "2020-07-13",
                                    "duration": "string"
                                  },
                                  "sunday": true,
                                  "monday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                  "thursday": true,
                                  "friday": true,
                                  "saturday": true,
                                  "daily": true
                                },
                                "transactionCodes": [
                                  {
                                    "description": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string",
                                    "routingInstructionsId": 0,
                                    "articles": [
                                      {
                                        "description": "string",
                                        "transactionCode": "string",
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "postIt": {
                                          "availableForPostIt": true
                                        },
                                        "universalProductCode": "string",
                                        "hotelId": "string",
                                        "articleCode": "string",
                                        "inactive": true,
                                        "orderSequence": 0
                                      }
                                    ],
                                    "transactionCode": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true
                                  }
                                ],
                                "billingInstructions": [
                                  {
                                    "desc": "string",
                                    "routingInstructionsId": 0,
                                    "billingCode": "string",
                                    "hotelId": "string"
                                  }
                                ],
                                "creditLimit": 0,
                                "percentageLimit": 0,
                                "covers": 0,
                                "limitUsed": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              }
                            ]
                          },
                          "comp": {
                            "compRequestInfo": {
                              "requestedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "comments": "string",
                              "declinedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "status": "Request"
                            },
                            "payeeInfo": {
                              "payeeId": {
                                "id": "string",
                                "type": "string"
                              },
                              "payeeName": "string",
                              "payeeAddress": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "cityName": "string",
                                  "postalCode": "string",
                                  "county": "string",
                                  "state": "string",
                                  "country": {
                                    "value": "string",
                                    "code": "string"
                                  },
                                  "type": "string"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "payeeAddressCount": 0,
                              "payeeReferenceCurrency": "string",
                              "payeeAccountInfo": {
                                "accountName": "string",
                                "accountId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "accountNo": "string",
                                "status": {
                                  "restriction": "string",
                                  "description": "string",
                                  "restricted": true
                                }
                              },
                              "payeeTaxNumber": "string"
                            },
                            "instructions": [
                              {
                                "duration": {
                                  "timeSpan": {
                                    "startDate": "2020-07-13",
                                    "endDate": "2020-07-13",
                                    "duration": "string"
                                  },
                                  "sunday": true,
                                  "monday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                  "thursday": true,
                                  "friday": true,
                                  "saturday": true,
                                  "daily": true
                                },
                                "transactionCodes": [
                                  {
                                    "description": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string",
                                    "routingInstructionsId": 0,
                                    "articles": [
                                      {
                                        "description": "string",
                                        "transactionCode": "string",
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "postIt": {
                                          "availableForPostIt": true
                                        },
                                        "universalProductCode": "string",
                                        "hotelId": "string",
                                        "articleCode": "string",
                                        "inactive": true,
                                        "orderSequence": 0
                                      }
                                    ],
                                    "transactionCode": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true
                                  }
                                ],
                                "billingInstructions": [
                                  {
                                    "desc": "string",
                                    "routingInstructionsId": 0,
                                    "billingCode": "string",
                                    "hotelId": "string"
                                  }
                                ],
                                "creditLimit": 0,
                                "percentageLimit": 0,
                                "covers": 0,
                                "limitUsed": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              }
                            ],
                            "folioWindowNo": 0
                          },
                          "request": {
                            "compRequestInfo": {
                              "requestedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "comments": "string",
                              "declinedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "status": "Request"
                            },
                            "instructions": [
                              {
                                "duration": {
                                  "timeSpan": {
                                    "startDate": "2020-07-13",
                                    "endDate": "2020-07-13",
                                    "duration": "string"
                                  },
                                  "sunday": true,
                                  "monday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                  "thursday": true,
                                  "friday": true,
                                  "saturday": true,
                                  "daily": true
                                },
                                "transactionCodes": [
                                  {
                                    "description": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string",
                                    "routingInstructionsId": 0,
                                    "articles": [
                                      {
                                        "description": "string",
                                        "transactionCode": "string",
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "postIt": {
                                          "availableForPostIt": true
                                        },
                                        "universalProductCode": "string",
                                        "hotelId": "string",
                                        "articleCode": "string",
                                        "inactive": true,
                                        "orderSequence": 0
                                      }
                                    ],
                                    "transactionCode": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true
                                  }
                                ],
                                "billingInstructions": [
                                  {
                                    "desc": "string",
                                    "routingInstructionsId": 0,
                                    "billingCode": "string",
                                    "hotelId": "string"
                                  }
                                ],
                                "creditLimit": 0,
                                "percentageLimit": 0,
                                "covers": 0,
                                "limitUsed": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "hasMore": true,
                  "totalResults": 0,
                  "count": 0
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "BlockPMReservations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Block"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "externalReferencesType": {
      "type": "array",
      "description": "This type contains unique information of external reference.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType": {
      "type": "object",
      "description": "This type contains unique information of external reference.",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "blockDetailsType": {
      "type": "object",
      "description": "Information about the Block Details",
      "properties": {
        "blockCode": {
          "description": "Block code for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockName": {
          "description": "Name of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockAliases": {
          "description": "Alias name(s) that can be used to search for the block.",
          "$ref": "#/definitions/blockAliasesType"
        },
        "timeSpan": {
          "description": "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "shoulderDates": {
          "description": "The Shoulder Dates (Arrival, Departure) which covers the Block Shoulder Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "shoulderRatePlanCode": {
          "description": "The shoulder rate plans which cover the block shoulder start and end dates.",
          "type": "object",
          "properties": {
            "shoulderStart": {
              "description": "The Rate Plan(s) for the days between the shoulder start date and the actual block start date.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/blockRatePlanInfoType"
              }
            },
            "shoulderEnd": {
              "description": "The Rate Plan(s) for the days between the actual block end date and the shoulder end date.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/blockRatePlanInfoType"
              }
            }
          }
        },
        "blockStatus": {
          "description": "Current status of the block.",
          "$ref": "#/definitions/bookingStatusDetailType"
        },
        "blockNextStatusList": {
          "description": "List of possible next booking statuses of the business block.",
          "$ref": "#/definitions/blockNextStatusListType"
        },
        "blockStatusChangeHistory": {
          "description": "List of booking status changes.",
          "$ref": "#/definitions/blockStatusChangeHistoryType"
        },
        "reservationType": {
          "description": "Reservation Type info of the block.",
          "$ref": "#/definitions/reservationTypeInfoType"
        },
        "marketCode": {
          "description": "Market code info of the block.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of block. Identifies the entity/channel who made the block reservation.",
          "$ref": "#/definitions/blockSourceOfSaleType"
        },
        "reservationMethod": {
          "description": "Reservation Method of the block. Indicates how the individual reservations will be handled (Individual Call In, Rooming List, etc).",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "bookingType": {
          "description": "Business Block Type field on the Business Block",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "description": "Internal status for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockType": {
          "description": "Internal type of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockOrigin": {
          "description": "Origin information of the block PMS/ORS/SC/SFA",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Indicate which method of payment will be used for the block’s charges.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "commissionPercent": {
          "description": "Indicate what percentage of this block is eligible for commission.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "conversionCode": {
          "description": "Indicates the likelihood description of the block moving to the next active block status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "conversionCodeDescription": {
          "description": "Indicates the likelihood of the block moving to the next active block status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rateProtectionDetails": {
          "description": "Indicates the Rate Protection details for the block.",
          "$ref": "#/definitions/blockRateProtectionType"
        },
        "nonCompeteDetails": {
          "description": "Indicates the non-competing industry details.",
          "$ref": "#/definitions/blockNonCompeteType"
        },
        "rankingCode": {
          "description": "Indicates the ranking of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rankingCodeDescription": {
          "description": "Indicates the ranking description of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "currencyCode": {
          "description": "Currency Code attached to the business block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cancellationDetails": {
          "description": "Information on the canceled block.",
          "$ref": "#/definitions/cancellationDetailsType"
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "tourCode": {
          "description": "The tour code that this block belongs to, if the block is a part of a tour series.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelUse": {
          "description": "Indicates whether the block can be updated only by the Hotel to which it belongs.",
          "$ref": "#/definitions/hotelUseType"
        },
        "rateOverrideReason": {
          "description": "Indicates the reason for overriding the rate amounts on a block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "blockClassification": {
          "description": "Indicate Block Classification.",
          "$ref": "#/definitions/blockClassificationType"
        },
        "synchronized": {
          "description": "Indicate if Master/Sub Blocks are Synchronized.",
          "type": "boolean"
        },
        "subBlockIdList": {
          "description": "Sub Block code will be populated, when master block creation is in progress.",
          "$ref": "#/definitions/subBlockIdList"
        },
        "primaryOwners": {
          "description": "Primary owners for the block.",
          "type": "object",
          "properties": {
            "blockOwner": {
              "description": "Primary Block Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "roomsOwner": {
              "description": "Primary Rooms Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "cateringOwner": {
              "description": "Primary Catering Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "blockOwnerCount": {
              "description": "Total number of Block Owners.",
              "type": "number"
            },
            "roomsOwnerCount": {
              "description": "Total number of Rooms Owners.",
              "type": "number"
            },
            "cateringOwnerCount": {
              "description": "Total number of Catering Owners.",
              "type": "number"
            }
          }
        },
        "primaryProfiles": {
          "description": "Primary account and contact for the block.",
          "type": "object",
          "properties": {
            "account": {
              "description": "Primary Account",
              "$ref": "#/definitions/blockProfilesType"
            },
            "contact": {
              "description": "Primary Contact",
              "$ref": "#/definitions/blockProfilesType"
            },
            "image": {
              "description": "The primary profile image. If primary contact exists, Contact Image, otherwise primary Account Image",
              "$ref": "#/definitions/imageSetType"
            }
          }
        },
        "primaryRatePlanCodes": {
          "description": "Primary rates for the block.",
          "type": "object",
          "properties": {
            "blockRatePlanCode": {
              "description": "Primary Block Rate",
              "$ref": "#/definitions/blockRatePlanInfoType"
            },
            "shoulderStartRatePlanCode": {
              "description": "Primary Shoulder Start Rate",
              "$ref": "#/definitions/blockRatePlanInfoType"
            },
            "shoulderEndRatePlanCode": {
              "description": "Primary Shoulder End Rate",
              "$ref": "#/definitions/blockRatePlanInfoType"
            },
            "blockRatePlanCodeCount": {
              "description": "Total number of Block Rates.",
              "type": "number"
            },
            "shoulderStartRatePlanCodeCount": {
              "description": "Total number of Shoulder Start Rates.",
              "type": "number"
            },
            "shoulderEndRatePlanCodeCount": {
              "description": "Total number of Shoulder End Rates.",
              "type": "number"
            }
          }
        },
        "cateringOnlyBlock": {
          "description": "Indicates if this is a catering only block.",
          "type": "boolean"
        },
        "flexibleDates": {
          "description": "Indicates if alternate dates are allowed for the booking.",
          "type": "boolean"
        },
        "externalLocked": {
          "description": "Indicates if the block is locked by an external system.",
          "type": "boolean"
        },
        "autoloadContractGrid": {
          "description": "Indicates if contract grid will be auto loaded from original grid.",
          "type": "boolean"
        },
        "allowRateOverride": {
          "description": "Indicates whether rates of a block can be overridden. Applicable only for blocks with a Rate Code.",
          "type": "boolean"
        },
        "manualCutOff": {
          "description": "Indicates whether Block was cutoff manually.",
          "type": "boolean"
        },
        "wholesaleBlock": {
          "description": "Indicates whether the business block should be considered as a wholesale block for revenue management block materialization forecasting",
          "type": "boolean"
        },
        "controlBlockLocally": {
          "description": "Determines whether or not the block can be managed at the CRS level.",
          "type": "boolean"
        },
        "businessDateArrivalsExist": {
          "description": "Indicate whether arrivals exists on current business date.",
          "type": "boolean"
        }
      }
    },
    "blockAliasesType": {
      "type": "array",
      "description": "List of Block Aliases.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 40
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "blockRatePlanInfoType": {
      "type": "object",
      "description": "Rate Plan info type extension for block.",
      "properties": {
        "shortInfo": {
          "description": "Brief Information of the Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "longInfo": {
          "description": "Detail Information of the Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "webPage": {
          "description": "URL providing more information about the Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description of the Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "currencyCode": {
          "description": "Currency Code of the rate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanLevel": {
          "description": "All rate codes are associated with rate plan level ( or rate category )for Channels. So if rate plans are given in the request, get all rate codes associated with the rate plan level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guarantee": {
          "description": "Guarantee details for rate plan code.",
          "$ref": "#/definitions/guaranteeType"
        },
        "cancelPenalty": {
          "description": "Cancellation details for rate plan code.",
          "$ref": "#/definitions/cancelPenaltyType"
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCategory": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxInclusive": {
          "description": "Indicates if tax is included in the rate code amount.",
          "type": "boolean"
        },
        "serviceFeeInclusive": {
          "description": "Indicates if service fee is included in the rate code amount.",
          "type": "boolean"
        },
        "primary": {
          "description": "Is it a primary rate plan?",
          "type": "boolean"
        },
        "showRateAmount": {
          "description": "Is the rate amount to be shown?",
          "type": "boolean"
        },
        "marketCode": {
          "description": "Market Code associated with the RatePlanCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCode": {
          "description": "Source Code associated with the RatePlanCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "negotiated": {
          "description": "Indicates if the rate code is a negotiated rate code",
          "type": "boolean"
        }
      }
    },
    "guaranteeType": {
      "type": "object",
      "description": "Specifies Guarantee Code attributes.",
      "properties": {
        "description": {
          "description": "Description of the Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "requirements": {
          "description": "Specifies various requirements for the guarantee code.",
          "$ref": "#/definitions/guaranteeRequirementsType"
        },
        "shortDescription": {
          "description": "Brief description of the Guarantee Code.",
          "$ref": "#/definitions/translationTextType80"
        },
        "paymentTypes": {
          "description": "Specifies various payment types for the guarantee code.",
          "$ref": "#/definitions/paymentTypesType"
        },
        "guaranteeCode": {
          "description": "Code assigned to the Guarantee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "onHold": {
          "description": "If true indicates this Guarantee Code is used only to hold the inventory during reservation process.",
          "type": "boolean"
        },
        "reserveInventory": {
          "description": "If true indicates inventory will be reserved/deducted when reservation uses this Guarantee Code.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "lateArrival": {
          "description": "Represents the late arrival time.",
          "type": "string"
        }
      }
    },
    "guaranteeRequirementsType": {
      "type": "object",
      "description": "Specifies various requirement for the guarantee code.",
      "properties": {
        "requirementCode": {
          "description": "Requirement Code.",
          "type": "string"
        },
        "cancellation": {
          "description": "When true indicates cancellation on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "When true indicates phone number on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "address": {
          "description": "When true indicates address on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "creditCard": {
          "description": "When true indicates Credit Card on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "arrivalTime": {
          "description": "When true indicates arrival Time on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "deposit": {
          "description": "When true indicates deposit is required for this guarantee code.",
          "type": "boolean"
        }
      }
    },
    "translationTextType80": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 80.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "paymentTypesType": {
      "type": "array",
      "description": "Payment card code like AX,VI etc.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "cancelPenaltyType": {
      "type": "object",
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "properties": {
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        }
      }
    },
    "policyDeadlineType": {
      "type": "object",
      "description": "Cancellation deadline, absolute or relative.",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "type": "object",
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "properties": {
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "policyBasisTypeType": {
      "type": "string",
      "description": "Full Amount.",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "offsetUnitType": {
      "type": "string",
      "description": "Indicates deadline offset unit type.",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "mealPlansType": {
      "type": "array",
      "description": "Meal plan codes associated with the rate codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "mealPlanCodeType": {
      "type": "object",
      "description": "Meal plan codes associated with the rate codes.",
      "properties": {
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        }
      }
    },
    "bookingStatusDetailType": {
      "type": "object",
      "description": "Booking Status details of the business block.",
      "properties": {
        "bookingStatus": {
          "description": "Booking Status of the business block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "parentBookingStatus": {
          "description": "Parent status of the booking status, if one exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deductInventory": {
          "description": "Indicates if blocked rooms are deducted from inventory.",
          "type": "boolean"
        },
        "catDeductInventory": {
          "description": "Indicates if catering event's spaces are deducted from inventory",
          "type": "boolean"
        },
        "allowPickup": {
          "description": "Indicates if business blocks with this status will be allowed for pickup or not.",
          "type": "boolean"
        },
        "returnToInventory": {
          "description": "Indicates if blocked rooms will be returned to availability or not.",
          "type": "boolean"
        },
        "defaultReservationType": {
          "description": "Default reservation type for the booking status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cancellationType": {
          "description": "Cancellation reason type of the booking status. Populates only when the booking status is of return to inventory type.",
          "$ref": "#/definitions/blockCancellationTypeType"
        },
        "statusType": {
          "description": "Indicates status type Inquiry, Actual, Cancel, etc.",
          "$ref": "#/definitions/blockStatusTypeType"
        },
        "catStatusType": {
          "description": "Indicates status type Inquiry, Actual, Cancel, etc.",
          "$ref": "#/definitions/blockStatusTypeType"
        }
      }
    },
    "bookingStatusType": {
      "type": "object",
      "description": "Booking status code, description and configured color of the status. This will be used for block and event statuses.",
      "properties": {
        "status": {
          "description": "Status code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "color": {
          "description": "Color from status configuration.",
          "$ref": "#/definitions/statusColorType"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "statusColorType": {
      "type": "string",
      "description": "Status code color configuration type.",
      "enum": [
        "White",
        "Red",
        "Blue",
        "Cyan",
        "Magenta",
        "Green",
        "Brown",
        "Black",
        "Yellow",
        "Gray"
      ]
    },
    "blockCancellationTypeType": {
      "type": "string",
      "description": "Simple type for cancellation reasons which helps to decide type of cancellation.",
      "enum": [
        "Lost",
        "Cancel",
        "Refused"
      ]
    },
    "blockStatusTypeType": {
      "type": "string",
      "description": "Simple type for specifying the block status type.",
      "enum": [
        "Inquiry",
        "Actual",
        "Waitlist",
        "Cancel",
        "Referral"
      ]
    },
    "blockNextStatusListType": {
      "type": "array",
      "description": "Next booking status of the business block.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusDetailType"
      }
    },
    "blockStatusChangeHistoryType": {
      "type": "array",
      "description": "Collection of block status history.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusHistoryType"
      }
    },
    "bookingStatusHistoryType": {
      "type": "object",
      "properties": {
        "sequence": {
          "description": "Number indicating the sequence of status change.",
          "type": "integer"
        },
        "bookingStatus": {
          "description": "Booking status of the business block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "modifyDateTime": {
          "description": "Date and time of the status change.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "modifierId": {
          "description": "User who modified the status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "reservationTypeInfoType": {
      "type": "object",
      "properties": {
        "reservationType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "marketCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "blockSourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of Block. Identifies the entity/channel who made the block reservation.",
      "properties": {
        "sourceCode": {
          "description": "Identifies how this block came into the property.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "sourceType": {
          "description": "The of entity/channel where this business block originated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceTypeDescription": {
          "description": "The of entity/channel where this business block originated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "sourceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "blockRateProtectionType": {
      "type": "object",
      "description": "Block Rate Protection code information.",
      "properties": {
        "criteria": {
          "description": "Indicates the type of rate protection. 'All' means all dates are rate protected. 'None' specifies no rate protection. 'Selected' specifies few dates are rate protected.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "protectedDates": {
          "description": "Specifies all the Rate protected dates in the selected range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "rateProtectionType": {
      "type": "string",
      "description": "Simple type for specifying the block protection type.",
      "enum": [
        "All",
        "Selected",
        "None"
      ]
    },
    "datesType": {
      "type": "array",
      "description": "Specifies a single date.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "format": "date",
        "maxLength": 8
      }
    },
    "blockNonCompeteType": {
      "type": "object",
      "description": "Block Non Compete code information.",
      "properties": {
        "industry": {
          "description": "Specifies the Non-Compete Industry.>",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "industryDescription": {
          "description": "Specifies the Non-Compete Industry description.>",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "criteria": {
          "description": "Indicates the type of Non-Compete. 'All' means all dates are Non-Compete. 'None' specifies Non-Compete is disabled. 'Selected' specifies few dates are Non-Compete.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "protectedDates": {
          "description": "Specifies all the Non-Compete dates in the selected date range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "cancellationDetailsType": {
      "type": "object",
      "description": "This type holds information regarding booking status change to Cancel/ Lost.",
      "properties": {
        "cancellationNumber": {
          "description": "Cancellation number of the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cancellationCode": {
          "description": "Code and description for cancellation reason.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cancellationDate": {
          "description": "Date on which block was canceled.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cancellationInfo": {
          "description": "Cancellation information provided by the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "destination": {
          "description": "Alternate destination where the business is being taken.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lostToProperty": {
          "description": "Holds the name of the property or competitor brand business was lost to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "hotelUseType": {
      "type": "object",
      "properties": {
        "hotelUseReason": {
          "description": "Explains the reason why the business block can be updated only by the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "accessRestrictions": {
          "description": "List of block access exclusion/restriction types. The field HotelUseOnly and Modify under this will behave the same. User can pass either of them. For new development use this field.",
          "$ref": "#/definitions/accessRestrictionsType"
        },
        "hotelUseOnly": {
          "description": "Indicates whether this business block can be updated only by the Hotel to which it belongs. This is used to communicate to CRO that the business block can be only updated by the Hotel.",
          "type": "boolean"
        }
      }
    },
    "accessRestrictionsType": {
      "type": "array",
      "description": "Block access exclusion/restriction type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockAccessRestrictionType"
      }
    },
    "blockAccessRestrictionType": {
      "type": "string",
      "description": "Simple type for block access exclusion/restriction types.",
      "enum": [
        "Availability",
        "Create",
        "Modify",
        "Cancel"
      ]
    },
    "blockClassificationType": {
      "type": "string",
      "description": "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are MASTER_BLOCK, MASTER_TOUR, FIT_MASTER, MASTER_ALLOCATION, MASTER_ITINERARY, LEAD_MASTER, REGULAR_BOOKING, SUB_BLOCK, SUB_TOUR, FIT_CONTRACT, SUB_ALLOCATION, SUB_ITINERARY, LEAD.",
      "enum": [
        "MasterBlock",
        "MasterTour",
        "MasterAllocation",
        "MasterItinerary",
        "LeadMaster",
        "RegularBooking",
        "SubBlock",
        "SubTour",
        "FitContract",
        "SubAllocation",
        "SubItinerary",
        "Lead",
        "FitMaster",
        "Opportunity"
      ]
    },
    "subBlockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "blockOwnerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "ownership": {
          "description": "Specifies the business block ownership type.",
          "$ref": "#/definitions/blockOwnershipType"
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "blockOwnershipType": {
      "type": "string",
      "description": "Specifies the type of the owner associated with the business block(Block/Rooms/Catering).",
      "enum": [
        "Block",
        "Rooms",
        "Catering"
      ]
    },
    "blockProfilesType": {
      "type": "object",
      "description": "A collection of Profile objects or Unique IDs of Profiles.",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "primary": {
          "description": "Is this profile attached to block is primary?",
          "type": "boolean"
        },
        "blockProfileType": {
          "description": "Determines the type of the block profile.",
          "$ref": "#/definitions/blockProfileTypeType"
        },
        "defaultPrint": {
          "description": "Indicates if profile is printable to customer reports by default.",
          "type": "boolean"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationHistoryFutureInfoType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        }
      }
    },
    "customerType": {
      "type": "object",
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties": {
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "identificationInfoType": {
      "type": "object",
      "description": "Information on the identification of the customer.",
      "properties": {
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "identificationType": {
      "type": "object",
      "description": "Identification information of the customer.",
      "properties": {
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "companyInfoType": {
      "type": "object",
      "description": "Company Information of the Profile.",
      "properties": {
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageSetType": {
      "type": "object",
      "description": "Represents on image set record.",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageStyleType": {
      "type": "string",
      "description": "An enumeration of image styles.",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "uRLInfoType": {
      "type": "object",
      "description": "Web site address.",
      "properties": {
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "uRLType": {
      "type": "object",
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "profileDeliveryMethod": {
      "type": "object",
      "description": "Delivery Information type to the profile.",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "profileDeliveryModuleType": {
      "type": "string",
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "enum": [
        "EfolioExport"
      ]
    },
    "profileMembershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "preferenceTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "preferenceType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "preferenceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        }
      }
    },
    "relationshipInfoType": {
      "type": "object",
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "ownerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        }
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "relationshipInfoSummaryType": {
      "type": "object",
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType": {
      "type": "object",
      "description": "Provides address information for a Relationship.",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        }
      }
    },
    "historyListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the ‘true’ or ‘false’ values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 40
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "idContext": {
              "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "warnings": {
              "$ref": "#/definitions/warningsType"
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "futureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        }
      }
    },
    "stayHistoryListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "stayReservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "stayFutureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "lastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details for the profile",
      "properties": {
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "privacyInfoType": {
      "type": "object",
      "description": "Defines Privacy related information for the profile.",
      "properties": {
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringType": {
      "type": "object",
      "description": "Contains cashiering related details for the profile",
      "properties": {
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "directBillingType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileCommissionType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "commissionPaymentMethods": {
      "type": "string",
      "description": "Check",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "profileTaxInfoType": {
      "type": "object",
      "description": "Profile information related to tax.",
      "properties": {
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        }
      }
    },
    "eCertificatesType": {
      "type": "array",
      "description": "List of e-certificates for the profile.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "eCertificateType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        }
      }
    },
    "eCertificateInfoType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "eCertificateScopeType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateUsageCriteriaType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        },
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        }
      }
    },
    "eCertificateConsumptionType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "eCertificateConsumeSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateStatusType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "awardId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "eCertificateIssueSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateIssueType": {
      "type": "string",
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateGenerationType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomOwnershipType": {
      "type": "object",
      "description": "Define the search criteria for retrieving room ownership records",
      "properties": {
        "contractId": {
          "description": "Contract ID of the room ownership record.",
          "type": "integer"
        },
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "unit": {
          "description": "Unit for room owner.",
          "type": "string"
        },
        "roomCategory": {
          "description": "Room Category of the room ownership record.",
          "type": "string"
        },
        "roomType": {
          "description": "Room Type of the room ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the room ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "Status of the room ownership record.",
          "type": "string"
        }
      }
    },
    "blockProfileTypeType": {
      "type": "string",
      "description": "Simple type for block profile types.",
      "enum": [
        "Company",
        "Group",
        "Agent",
        "Source",
        "CompanyContact",
        "AgentContact",
        "SourceContact"
      ]
    },
    "blockOwnersType": {
      "type": "object",
      "description": "Contains a list of block owners.",
      "properties": {
        "owner": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockOwnerType"
          }
        },
        "lockBlockOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing block owners for the current block.",
          "type": "boolean"
        },
        "lockRoomsOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing room owners for the current block.",
          "type": "boolean"
        },
        "lockCateringOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing catering owners for the current block.",
          "type": "boolean"
        }
      }
    },
    "masterBlockInfoType": {
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers.",
          "$ref": "#/definitions/blockIdList"
        },
        "hotelId": {
          "description": "Master/Sub Block's Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockType": {
          "description": "Indicate Block Classification.",
          "$ref": "#/definitions/blockClassificationType"
        },
        "timeSpan": {
          "description": "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "blockName": {
          "description": "Block description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockStatus": {
          "description": "Current status of the block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "cateringStatus": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "roomNights": {
          "description": "Pertain value for blocked rooms for a block.",
          "type": "integer"
        },
        "roomNightsPickedup": {
          "description": "Pertain value for reserved rooms for a block.",
          "type": "integer"
        },
        "syncBlockDates": {
          "description": "Indicates to check if Block Dates to be in sync.",
          "type": "boolean"
        },
        "syncOtherBlockDetails": {
          "description": "Indicates whether other BlockDetails to be in Sync.",
          "type": "boolean"
        },
        "syncBlockStatusDetails": {
          "description": "Indicates if Block Status Details to be in sync.",
          "type": "boolean"
        },
        "syncPackages": {
          "description": "Indicates if packages to be in Sync.",
          "type": "boolean"
        },
        "subBlockInfo": {
          "description": "Basic information pertaining to the sub block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/masterSubBlockBaseInfoType"
          }
        },
        "masterSubHotels": {
          "description": "Pertains valid hotel code list for logged in user against Master/Sub header record.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelCodeListType"
          }
        }
      },
      "description": "Basic information pertaining to the master block."
    },
    "masterSubBlockBaseInfoType": {
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers.",
          "$ref": "#/definitions/blockIdList"
        },
        "hotelId": {
          "description": "Master/Sub Block's Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockType": {
          "description": "Indicate Block Classification.",
          "$ref": "#/definitions/blockClassificationType"
        },
        "timeSpan": {
          "description": "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "blockName": {
          "description": "Block description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockStatus": {
          "description": "Current status of the block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "cateringStatus": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "roomNights": {
          "description": "Pertain value for blocked rooms for a block.",
          "type": "integer"
        },
        "roomNightsPickedup": {
          "description": "Pertain value for reserved rooms for a block.",
          "type": "integer"
        },
        "syncBlockDates": {
          "description": "Indicates to check if Block Dates to be in sync.",
          "type": "boolean"
        },
        "syncOtherBlockDetails": {
          "description": "Indicates whether other BlockDetails to be in Sync.",
          "type": "boolean"
        },
        "syncBlockStatusDetails": {
          "description": "Indicates if Block Status Details to be in sync.",
          "type": "boolean"
        },
        "syncPackages": {
          "description": "Indicates if packages to be in Sync.",
          "type": "boolean"
        }
      }
    },
    "hotelCodeListType": {
      "type": "array",
      "description": "Hotel code.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "reservationPoliciesType": {
      "type": "object",
      "description": "A collection of reservation deposit and cancellation policies.",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        }
      }
    },
    "resCancellationPoliciesType": {
      "type": "array",
      "description": "A list of reservation cancellation policies.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "type": "object",
      "description": "A cancellation policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositCancelRevenueType": {
      "type": "string",
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "resCancelPenaltyType": {
      "type": "object",
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "properties": {
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        }
      }
    },
    "resDepositPoliciesType": {
      "type": "array",
      "description": "A list of deposit policies attached with the reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "type": "object",
      "description": "A deposit policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositPolicyType": {
      "type": "object",
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        }
      }
    },
    "blockReservationDetailsType": {
      "type": "object",
      "description": "Contains reservation related information for the block.",
      "properties": {
        "ratePlanCode": {
          "description": "Rate Plan for the block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockRatePlanInfoType"
          }
        },
        "arrivalTime": {
          "description": "Indicates the approximate check in time for the reservations made for the block.",
          "type": "string",
          "format": "date-time"
        },
        "departureTime": {
          "description": "Indicates the approximate check out time for the reservations made for the block.",
          "type": "string",
          "format": "date-time"
        },
        "traceCode": {
          "description": "Trace code for the block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "breakfast": {
          "description": "Indicates the breakfast information for the block room rates.",
          "$ref": "#/definitions/breakfastType"
        },
        "porterage": {
          "description": "Indicates the Porterage information for the block room rates.",
          "$ref": "#/definitions/porterageType"
        },
        "taRecordLocator": {
          "description": "Free format field to store information from Wholesaler for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "cutOffDate": {
          "description": "Cut off date of the block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cutOffDays": {
          "description": "Cut off days of the block.",
          "type": "number"
        },
        "updateGridOnCutoffChange": {
          "description": "Determines whether the CutOffDate or CutOffDays has changed for the block header. If CutOffDate or CutOffDays is changed then apply the changed cutoff date/ days as the new cutoff date/ days to all the room types in the Grid.",
          "type": "boolean"
        },
        "followupDate": {
          "description": "This element informs about the systematic follow up on this business block. A Group Reservations Agent or Reservations Manager can use this date to identify when to followup with the customer.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "decisionDate": {
          "description": "Contains information about the date by which the group must make a decision on the block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomingListDueDate": {
          "description": "Due date for the rooming list for the block. This is the date by which the guest list should be provided by the customer.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "elastic": {
          "description": "Elasticity of the block.",
          "type": "number"
        },
        "suppressRate": {
          "description": "Are Rate amounts suppressed for the block.",
          "type": "boolean"
        },
        "printRate": {
          "description": "Determines if the rate amounts are to be printed on the reservations picked up from the block. This becomes the default Print Rate setting for all reservations picked up from the block.",
          "type": "boolean"
        },
        "rateGuarantee": {
          "description": "If this is true, then when a reservation is picked up for the block, the rate for that reservation is taken from the rate grid belonging to the block. If this is false, the rate amounts on the room grid are updated every time the Refresh Rates process is applied.",
          "type": "boolean"
        },
        "inventoryControl": {
          "description": "Indicates whether the block is non elastic, elastic or sell limit block.",
          "$ref": "#/definitions/blockInventoryControlType"
        },
        "personsPerRoom": {
          "description": "Indicates the expected number of guests per sleeping room when Occupancy Split Per Room Type parameter is N.",
          "type": "number"
        },
        "activePostingMasterReservations": {
          "description": "Whether any active posting master reservations exist for the business block.",
          "type": "boolean"
        },
        "housing": {
          "description": "Determines whether or not the block can be managed at the CRS level.",
          "type": "boolean"
        },
        "guaranteeRequired": {
          "description": "Determines whether the CRS guarantee is required or not for the block.",
          "type": "boolean"
        },
        "controlBlockLocally": {
          "description": "Determines whether or not the block can be managed at the CRS level.",
          "type": "boolean"
        },
        "transactionCode": {
          "description": "Transaction Code for the block",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "breakfastType": {
      "type": "object",
      "description": "Information about breakfast charges.",
      "properties": {
        "breakfastIncluded": {
          "description": "Indicates if the room rate quoted includes the breakfast cost.",
          "type": "boolean"
        },
        "price": {
          "description": "The additional charges per person for breakfast, if breakfast is not included in the rate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "description": "The exact breakfast method for this business block that is included or offered as an extra.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "porterageType": {
      "type": "object",
      "description": "Information about porterage charges.",
      "properties": {
        "porterageIncluded": {
          "description": "Indicates if the room rate quoted includes any porterage cost.",
          "type": "boolean"
        },
        "price": {
          "description": "The additional charges per person for porterage service, if porterage is not included in the rate.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "blockInventoryControlType": {
      "type": "string",
      "description": "Simple type for block inventory control values. This determines if it is a Non Elastic, Elastic or Sell Limits block.",
      "enum": [
        "NonElastic",
        "Elastic",
        "SellLimit"
      ]
    },
    "cateringType": {
      "type": "object",
      "description": "Contains catering related information for the block.",
      "properties": {
        "cateringStatus": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/bookingStatusDetailType"
        },
        "cateringInternalStatus": {
          "description": "Internal status for the catering.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cateringNextStatusList": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/cateringNextStatusListType"
        },
        "cateringStatusChangeHistory": {
          "description": "List of catering status changes.",
          "$ref": "#/definitions/cateringStatusChangeHistoryType"
        },
        "cateringOwner": {
          "description": "Catering Owner of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventAttendees": {
          "description": "The catering attendees information for events associated with the block.",
          "$ref": "#/definitions/eventAttendeesType"
        },
        "boardInfo": {
          "description": "The name by which the group wishes to be identified in the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onSiteName": {
          "description": "The name of the customer's in-house representative or contact on the day of the catering event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "contractNumber": {
          "description": "Catering contract number for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "functionInfo": {
          "description": "This provides more detail the type of function for which the event is held. For example, Trade Show, Meeting, or Annual Convention.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "trackChanges": {
          "description": "Indicates whether the catering change logging for the booking is active or not. Any change made to catering events and resources will be logged when this is true.",
          "type": "boolean"
        },
        "eventOrder": {
          "description": "Indicates if the Banquet Event Orders have been distributed.",
          "$ref": "#/definitions/eventOrderType"
        },
        "cateringRevenue": {
          "description": "Information about catering revenue.",
          "$ref": "#/definitions/cateringRevenueType"
        },
        "followUpDate": {
          "description": "Date used by catering manager or coordinator to follow up on the event.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "decisionDate": {
          "description": "Date by which event group must make a decision on the booking.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "pkgsTmplt": {
          "description": "Indicates whether event packages or templates can be applied to the block.",
          "type": "boolean"
        },
        "cancellationDetails": {
          "description": "Information on the catering cancellation.",
          "$ref": "#/definitions/cancellationDetailsType"
        },
        "resourceDiscountPercentage": {
          "description": "Indicates the resource discount percentage to be applied to resource items associated with the catering event.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "hasPackageEvents": {
          "description": "Indicates if the block has any package events.",
          "type": "boolean"
        },
        "applyBoardInfoToAllEvents": {
          "description": "Indicates whether BoardInfo changes can be applied to all events of the block.",
          "type": "boolean"
        },
        "overrideEventsProcessingWarnings": {
          "description": "Indicates whether to ignore any warning during applying the changes to the events associated with the current block.",
          "type": "boolean"
        },
        "applyEventsGuaranteeToAllEvents": {
          "description": "Indicates whether Guarantee changes can be applied to all events of the block.",
          "type": "boolean"
        },
        "applyEventAttendeesChangesToEvents": {
          "description": "Indicates to which the events of the block can the attendees changes be applied.",
          "$ref": "#/definitions/applyEventAttendeesChangesToEventsType"
        },
        "resourceDiscountType": {
          "description": "Attibute that indicates to which type of resource the discount should be applied to.",
          "$ref": "#/definitions/resourceDiscountTypeType"
        }
      }
    },
    "cateringNextStatusListType": {
      "type": "array",
      "description": "Next catering status of the business block.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusDetailType"
      }
    },
    "cateringStatusChangeHistoryType": {
      "type": "array",
      "description": "Collection of catering status history.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusHistoryType"
      }
    },
    "eventAttendeesType": {
      "type": "object",
      "description": "Event attendees information.",
      "properties": {
        "noOfAttendees": {
          "description": "The maximum number of attendees for Catering events associated with the block.",
          "type": "integer"
        },
        "attendeesGuaranteed": {
          "description": "This denotes that the number of Attendees are the minimum guaranteed by the customer.",
          "type": "boolean"
        }
      }
    },
    "eventOrderType": {
      "type": "object",
      "description": "Event order distribution information.",
      "properties": {
        "distributed": {
          "description": "Indicates if the Banquet Event Orders have been distributed.",
          "type": "boolean"
        },
        "distributedDate": {
          "description": "This indicates which exchange rate date will be used for blocks when printing Banquet Event Orders. When the Distributed attribute is true this contains the date stamp of when the Distributed attribute was updated. When Distributed attribute is false, this is left blank. This date can also be taken into consideration as the 'Exchange Rate Date' when, for instance, converting catering revenue to base currency.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "distributedDateTime": {
          "description": "This indicates which exchange rate date will be used for blocks when printing Banquet Event Orders. When the Distributed attribute is true this contains the date/time stamp of when the Distributed attribute was updated. When Distributed attribute is false, this is left blank. This date can also be taken into consideration as the 'Exchange Rate Date' when, for instance, converting catering revenue to base currency.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "cateringRevenueType": {
      "type": "object",
      "description": "Information about Catering Revenue.",
      "properties": {
        "serviceCharge": {
          "description": "The service charge for the Catering Events that will be added to the business block.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxAmount": {
          "description": "The tax amount for the Catering Events that will be added to the business block.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "itemDiscount": {
          "description": "Item discount for the block.",
          "type": "number"
        },
        "itemDiscountPercentage": {
          "description": "The discount percentage to be applied to resource items associated with catering events.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "applyEventAttendeesChangesToEventsType": {
      "type": "string",
      "description": "Non-Pkg Events on the same date.",
      "enum": [
        "All",
        "None",
        "Same",
        "NonPackage",
        "MatchingNonPackage",
        "Package",
        "Date"
      ]
    },
    "resourceDiscountTypeType": {
      "type": "string",
      "description": "Indicates the option to select resources that will be discounted with the Resource Discount Percentage.",
      "enum": [
        "AllDiscountableResources",
        "ResourcesWithSameDiscountPercentage",
        "AllDiscountableItems",
        "ItemsWithSameDiscountPercentage",
        "AllDiscountableMenusAndMenuItems",
        "MenusAndMenuItemsWithSameDiscountPercentage",
        "AllDiscountableSpaces",
        "SpacesWithSameDiscountPercentage",
        "None"
      ]
    },
    "blockPackageType": {
      "type": "object",
      "description": "This contains the full information and schedule of the block package.",
      "properties": {
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required element and part of the key to fetch the correct package record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "startDate": {
          "description": "Required value when changing a package. If the original start date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Required value when changing a package. If the original end date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required element and is part of the key to fetch the correct package record .",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "usageDetails": {
          "description": "Package code usage information.",
          "$ref": "#/definitions/configPackageUsageDetailType"
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "type": "object",
      "description": "A Config Package Info type.",
      "properties": {
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "Indicates the end sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "configPackageTransactionType": {
      "type": "object",
      "description": "A HotelPackageTransaction type.",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "packagePostingRules": {
          "description": "The package posting rule details.",
          "$ref": "#/definitions/packagePostingRulesType"
        }
      }
    },
    "packagePostingRulesType": {
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "The Transaction code used to post the package price.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "overageCode": {
          "description": "The overage code to record over consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "profitCode": {
          "description": "The transaction code to record package profit, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "lossCode": {
          "description": "The transaction code to record package Loss, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "alternateCodesList": {
          "description": "The alternate transaction code that can be consumed by the guest in place of the transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageTransactionCodeType"
          }
        }
      }
    },
    "packageTransactionCodeType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Posting / transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Code is inclusive or exclusive of other chanrges such as taxes.",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "amountDeterminationType": {
      "type": "string",
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "configPostingAttributesType": {
      "type": "object",
      "description": "A config Package posting attributes type.",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the room rate.",
          "type": "boolean"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "deliveryTimeRequired": {
          "description": "Indicates whether a delivery time is required for the package.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Can package be sold via Web channel.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionName": {
          "description": "The custom formula function name used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionArguments": {
          "description": "The function argument name-value combination accepted by the custom formula used for this package.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        }
      }
    },
    "functionArgumentsType": {
      "type": "array",
      "description": "Collection of function arguments and their corresponding values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionArgumentType": {
      "type": "object",
      "description": "This type provided details of a function argument and the value it holds.",
      "properties": {
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "packagePostingRhythmType": {
      "type": "object",
      "description": "Package Posting rhythm type.",
      "properties": {
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            },
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            }
          }
        },
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The start and end of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the start date for the period. The End Date specified on the reservation when the package was attached is the end date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "postingRhythmType": {
      "type": "string",
      "description": "Simple type for posting Rhythm types.",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "packageCalculationRuleType": {
      "type": "string",
      "description": "Simple type for package caluculation rules.",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        }
      }
    },
    "configPackageUsageDetailType": {
      "type": "object",
      "description": "A Config Package Usage Detail type.",
      "properties": {
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation.",
          "$ref": "#/definitions/productSourceType"
        },
        "usedInReservations": {
          "description": "Indicates if the package is used in, reserved or prospect reservations.",
          "type": "boolean"
        },
        "usedInRates": {
          "description": "Indicates if the package is used in any rate code.",
          "type": "boolean"
        },
        "usedInHouseReservations": {
          "description": "Indicates if any checked in reservations are using this product.",
          "type": "boolean"
        }
      }
    },
    "productSourceType": {
      "type": "string",
      "description": "Sources of Products",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "packageConsumptionType": {
      "type": "object",
      "description": "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc.",
      "properties": {
        "defaultQuantity": {
          "description": "The default quantity attached in the package.",
          "type": "integer"
        },
        "excludedQuantity": {
          "description": "The quantity which has been excluded in the package.",
          "type": "integer"
        },
        "totalQuantity": {
          "description": "The total quantity of the package, calculated based on the calculation rule as defined in the PackageHeaderType.",
          "type": "integer"
        },
        "allowanceConsumed": {
          "description": "Indicates if Allowance(for POS packages) has been consumed/posted for today.",
          "type": "boolean"
        }
      }
    },
    "blockInventoryItemsType": {
      "type": "array",
      "description": "Inventory item attached to a block.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockInventoryItemType"
      }
    },
    "blockInventoryItemType": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setup on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "timeSpan": {
          "description": "Begin and end date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "source": {
          "description": "If exists specifies whether the item is setup due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/blockInventoryItemSourceType"
        }
      }
    },
    "itemInfoType": {
      "type": "object",
      "description": "Basic information regarding an Item.",
      "properties": {
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "timeSpan": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        }
      }
    },
    "timeWindowType": {
      "type": "object",
      "description": "Defines a Time period with start time and an end time.",
      "properties": {
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        },
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockInventoryItemSourceType": {
      "type": "object",
      "description": "Defines whether the item is setup due to a Rate Plan, Package or a Block.",
      "properties": {
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setup due to a Rate Plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setup due to a Package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setup due to a Block.",
          "$ref": "#/definitions/blockId"
        }
      }
    },
    "blockId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "blockStatisticsType": {
      "type": "object",
      "properties": {
        "allocatedRoomStatistics": {
          "description": "Indicates the room statistics for allocated rooms.",
          "$ref": "#/definitions/roomStatisticsType"
        },
        "actualRoomStatistics": {
          "description": "Indicates the room statistics for actualized rooms.",
          "$ref": "#/definitions/roomStatisticsType"
        },
        "cateringRevenueOnBooks": {
          "description": "Indicates the catering revenue on the books.",
          "type": "number"
        },
        "actualCateringRevenue": {
          "description": "Indicates actualized catering revenue.",
          "type": "number"
        }
      }
    },
    "roomStatisticsType": {
      "type": "object",
      "properties": {
        "roomCount": {
          "description": "The total number of rooms.",
          "type": "number"
        },
        "roomRevenue": {
          "description": "The total revenue for the rooms.",
          "type": "number"
        },
        "averageRate": {
          "description": "The average rate per room.",
          "type": "number"
        }
      }
    },
    "roomAllocationTypeType": {
      "type": "object",
      "description": "A collection of Allocation objects for a block, such as Current Rooms, Original Rooms, Rate Amounts, etc.",
      "properties": {
        "roomAllocationInfo": {
          "description": "Allocation objects for a block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomAllocationInfoType"
          }
        },
        "allocation": {
          "description": "Indicates the type of the Allocation objects.",
          "$ref": "#/definitions/allocationType"
        }
      }
    },
    "roomAllocationInfoType": {
      "type": "object",
      "description": "A collection of Allocation objects for a block that indicate room inventory or rate amounts.",
      "properties": {
        "roomGridDetails": {
          "description": "Indicates the values of room inventory or rate amounts.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomGridDetailsType"
          }
        },
        "roomGridInvSummary": {
          "description": "Indicates the values of room inventory's summary.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockGridInvType"
          }
        },
        "availableRoomGridInvSummary": {
          "description": "Indicates the values of room available room grid inventory's summary.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockGridInvType"
          }
        },
        "stayDate": {
          "description": "Indicates the date of the room allocation or rate amount.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extendedStay": {
          "description": "Indicates if the current date will require automatic block extension.",
          "type": "boolean"
        }
      }
    },
    "roomGridDetailsType": {
      "type": "object",
      "description": "Indicates the values of room inventory or rate amount per room type.",
      "properties": {
        "inventory": {
          "description": "Indicates the room inventory values per person occupancy.",
          "$ref": "#/definitions/blockGridInvType"
        },
        "rate": {
          "description": "Indicates the rate amount values per person occupancy.",
          "$ref": "#/definitions/blockGridRatesType"
        },
        "roomType": {
          "description": "Indicates the room type for which the inventory or rate values are applicable.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "genericRoomType": {
          "description": "Indicates the Generic Room Type (Room Pool) the Room Type belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockGridInvType": {
      "type": "object",
      "description": "Indicates the inventory values ( occupancy or availability ) per person occupancy.",
      "properties": {
        "onePerson": {
          "description": "Indicates the one person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "twoPerson": {
          "description": "Indicates the two person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "threePerson": {
          "description": "Indicates the three person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "fourPerson": {
          "description": "Indicates the four person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "sellLimit": {
          "description": "Indicates the sell limit",
          "type": "integer"
        },
        "cutoffDate": {
          "description": "Indicates the cutoff date.Date when inventory left in the block will be cut-off.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockGridRatesType": {
      "type": "object",
      "description": "Indicates the rate amount values per person occupancy.",
      "properties": {
        "onePerson": {
          "description": "Indicates the one person occupancy rate amount.",
          "type": "number"
        },
        "twoPerson": {
          "description": "Indicates the two person occupancy rate amount.",
          "type": "number"
        },
        "threePerson": {
          "description": "Indicates the three person occupancy rate amount.",
          "type": "number"
        },
        "fourPerson": {
          "description": "Indicates the four person occupancy rate amount.",
          "type": "number"
        },
        "extraPerson": {
          "description": "Indicates the extra person occupancy rate amount.",
          "type": "number"
        }
      }
    },
    "allocationType": {
      "type": "string",
      "description": "Simple type for block allocation used in room rate grid.",
      "enum": [
        "Initial",
        "Actual",
        "Rates",
        "Pickup",
        "Contract",
        "Available",
        "Pickupperc",
        "Changes",
        "Released",
        "Houseavailability",
        "SellLimit",
        "AvailableSellLimit",
        "MasterAllocInitial",
        "Allocated",
        "SubAllocResv",
        "CutoffDate"
      ]
    },
    "roomAllocationMasterInfoType": {
      "type": "object",
      "properties": {
        "roomTypes": {
          "description": "Detailed information about Room Type in the Hotel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/allocationRoomTypeInfoType"
          }
        },
        "genericRoomTypes": {
          "description": "Detailed information about Room Type in the Hotel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/allocationRoomTypeInfoType"
          }
        }
      }
    },
    "allocationRoomTypeInfoType": {
      "type": "object",
      "description": "The information about the room types contained in the block room allocation.",
      "properties": {
        "longDescription": {
          "description": "Detail description of the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "webName": {
          "description": "Name corresponding to a RoomType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "webPage": {
          "description": "URL providing more information about the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomFeatures": {
          "description": "Collection of room features.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomTypeAttributes": {
          "description": "Room type attributes.",
          "$ref": "#/definitions/roomTypeAttributesType"
        },
        "bookingChannelMappings": {
          "description": "Booking Channels mapping for the Room Type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelMappingType"
          }
        },
        "bedTypeCodes": {
          "description": "Bed type code associated with room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "boolean"
        },
        "component": {
          "description": "Indicates room type is a Component Room.",
          "type": "boolean"
        },
        "invBlockCode": {
          "description": "Block code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "promotionCode": {
          "description": "Represents the promotional code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierCode": {
          "description": "Represents the room qualifier code like Deluxe,Economy,Suite etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierMatchIndicator": {
          "description": "Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "available": {
          "description": "Used to specify an availability status for the room type.",
          "type": "boolean"
        }
      }
    },
    "roomFeaturesType": {
      "type": "array",
      "description": "A recurring element that identifies the room features.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomFeatureType"
      }
    },
    "roomFeatureType": {
      "type": "object",
      "description": "Room Feature Information.",
      "properties": {
        "code": {
          "description": "A code representing a room feature.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "A code representing a room feature.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "quantity": {
          "description": "Indicates quantity.",
          "type": "integer"
        }
      }
    },
    "roomTypeAttributesType": {
      "type": "object",
      "description": "Attributes of property room type.",
      "properties": {
        "defaultOccupancy": {
          "description": "Default occupancy of property room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Max occupancy of property room type.",
          "type": "integer"
        },
        "noOfPhysicalRooms": {
          "description": "Number of physical rooms of property room type.",
          "type": "integer"
        }
      }
    },
    "bookingChannelMappingType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "blockTracesType": {
      "type": "array",
      "description": "List of Block traces.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockTraceType"
      }
    },
    "blockTraceType": {
      "type": "object",
      "description": "Extended Trace object to hold information for a block.",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        }
      }
    },
    "dateTimeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        }
      }
    },
    "blockStatisticsSummaryType": {
      "type": "object",
      "description": "Type to store summary detail like rooms sold, average room rate and revenue for a statistic type.",
      "properties": {
        "roomsSold": {
          "description": "Total Number of Rooms Picked Up.",
          "type": "integer"
        },
        "revenueSummary": {
          "$ref": "#/definitions/revenueSummaryType"
        },
        "avgRoomRate": {
          "type": "number"
        },
        "statisticType": {
          "$ref": "#/definitions/statisticsSummaryType"
        }
      }
    },
    "revenueSummaryType": {
      "type": "object",
      "description": "Summary information pertaining to revenue like Room, Food and Beverage, Catering, Other, Catering Other and Total Revenue.",
      "properties": {
        "roomRevenue": {
          "type": "number"
        },
        "foodAndBeverageRevenue": {
          "type": "number"
        },
        "otherRevenue": {
          "type": "number"
        },
        "cateringRevenue": {
          "type": "number"
        },
        "cateringOtherRevenue": {
          "type": "number"
        },
        "totalRevenue": {
          "type": "number"
        },
        "nonRevenue": {
          "type": "number"
        }
      }
    },
    "statisticsSummaryType": {
      "type": "string",
      "description": "Type of statistic for which summary information is populated.",
      "enum": [
        "Potential",
        "Actual",
        "Variance"
      ]
    },
    "rateProgramType": {
      "type": "object",
      "description": "Rate Programs for the Block.",
      "properties": {
        "roomPool": {
          "description": "Room Pool Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rates": {
          "description": "Block Rate Program Rates.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateProgramRateType"
          }
        }
      }
    },
    "rateProgramRateType": {
      "type": "object",
      "description": "Room Pool Rate Program.",
      "properties": {
        "rateCode": {
          "description": "Rate Program Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateMarketCode": {
          "description": "RateMarketCode is a rate attribute required for external system in order to create a rate program. Only available if configured in OPERA Cloud.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "rateAmounts": {
          "description": "Rate Program Amounts.",
          "$ref": "#/definitions/blockGridRatesType"
        },
        "roomTypes": {
          "description": "Rate Program Room Types.",
          "$ref": "#/definitions/rateProgramRoomType"
        },
        "startDate": {
          "description": "Start date of the Room Pool Rate Program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date of the Room Pool Rate Program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "commissionable": {
          "description": "Rate Program Commissionable Indicator.",
          "type": "boolean"
        },
        "mobileCheckout": {
          "description": "Rate Program Mobile Checkout Allowed Indicator.",
          "type": "boolean"
        },
        "primary": {
          "description": "Rate Program Primary Rate Code Indicator.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Sequence Number of the Rate Program.",
          "type": "integer"
        }
      }
    },
    "rateProgramRoomType": {
      "type": "array",
      "description": "Room type for which Rate Program Rate Applies.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "eventTypeType": {
      "type": "string",
      "description": "Contract type.",
      "enum": [
        "Convention",
        "Contract"
      ]
    },
    "blockAlternateDateType": {
      "type": "object",
      "description": "Information for Alternate date types",
      "properties": {
        "alternateBeginDate": {
          "description": "Alternate Begin date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "blockRates": {
          "description": "Rate details for Alternate Dates.",
          "$ref": "#/definitions/blockGridRatesType"
        },
        "roomCategory": {
          "description": "The Room Category Label",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priority": {
          "description": "The Priority given to these alternate dates.",
          "type": "integer"
        }
      }
    },
    "sellMessageConfigsType": {
      "type": "object",
      "description": "The SellMessageConfigsType is the list of sell messages, each comprising of all the sell message attributes and other details.",
      "properties": {
        "sellMessageConfig": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageConfigType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "sellMessageConfigType": {
      "type": "object",
      "description": "Only one of the following can hold a value: HotelCode, CROCode or ChainCode",
      "properties": {
        "message": {
          "description": "Sell message text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockId": {
          "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref": "#/definitions/blockId"
        },
        "blockCode": {
          "description": "Block Code to which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "timespan": {
          "description": "Begin and End date for the sell message.",
          "$ref": "#/definitions/timeSpanType"
        },
        "hotelId": {
          "description": "Hotel Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "croCode": {
          "description": "CRO Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "Chain Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate Plan Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "languageCode": {
          "description": "Language in which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stickyFlag": {
          "description": "Sticky flag is used to define if the sell message should display on the block screen by default.",
          "type": "boolean"
        },
        "sellSequence": {
          "description": "This number indicates the display order of the sell message.",
          "type": "number"
        },
        "usedInModule": {
          "description": "This represents the moduleType where we want to display this SellMessage.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/usedInModuleType"
          }
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "usedInModuleType": {
      "type": "string",
      "description": "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "enum": [
        "Blocks",
        "Reservations",
        "FunctionDiary",
        "LookToBookSales",
        "GroupRoomsControl"
      ]
    },
    "attachmentsType": {
      "type": "array",
      "description": "Attachment List.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attachmentType"
      }
    },
    "attachmentType": {
      "type": "object",
      "description": "Attached files.",
      "properties": {
        "fileName": {
          "description": "Name of the file.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fileSize": {
          "description": "Size of the file.",
          "type": "integer"
        },
        "description": {
          "description": "Description for the file.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "global": {
          "description": "Flag to say if attachment is available across properties.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "history": {
          "description": "History data associated with Attachment.",
          "$ref": "#/definitions/dateTimeStampGroupType"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "dateTimeStampGroupType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockWashSchedulesType": {
      "type": "array",
      "description": "Wash Schedule attached to the block, which allows to release inventory based on selected wash schedule type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockWashScheduleType"
      }
    },
    "blockWashScheduleType": {
      "type": "object",
      "description": "Allows to select type of wash schedule: by number of rooms or by percentage.",
      "properties": {
        "washDate": {
          "description": "Date on which the block wash operation will be performed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomTypes": {
          "description": "A single room type on which wash operation should be performed.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "washByRooms": {
          "description": "Wash by rooms contains the occupany details and sell values for a specific block wash schedule.",
          "$ref": "#/definitions/blockGridInvType"
        },
        "washByPercent": {
          "description": "When using the Wash by % option, indicate a wash percentage that will be applied it to the whole block.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "blockRestrictionsType": {
      "type": "object",
      "description": "List of restrictions belonging to a block.",
      "properties": {
        "blockId": {
          "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref": "#/definitions/blockId"
        },
        "blockRestriction": {
          "description": "Block restriction details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockRestrictionType"
          }
        },
        "hotelId": {
          "description": "Hotel to which the block belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockRestrictionType": {
      "type": "object",
      "description": "Restriction details for a block.",
      "properties": {
        "restrictionDate": {
          "description": "Date for which the restriction applies.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "roomType": {
          "description": "Room Type selected for the block restriction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockRestrictionStatus": {
          "description": "Indicates the type of restriction along with parameters for restriction, if any.",
          "$ref": "#/definitions/restrictionStatusType"
        },
        "actualTimeSpan": {
          "description": "Actual time span of the restriction.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "restrictionStatusType": {
      "type": "object",
      "description": "The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group.",
      "properties": {
        "code": {
          "description": "Identifies the type of restriction. I.E. Closed, ClosedForArrival, etc.",
          "$ref": "#/definitions/restrictionStatusesType"
        },
        "unit": {
          "description": "Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking.",
          "type": "integer"
        }
      }
    },
    "restrictionStatusesType": {
      "type": "string",
      "enum": [
        "Closed",
        "ClosedForArrival",
        "ClosedForDeparture",
        "MinimumStayThrough",
        "MaximumStayThrough",
        "MinimumLengthOfStay",
        "MaximumLengthOfStay",
        "LOSNotAvailable",
        "MinimumAdvanceBooking",
        "MaximumAdvanceBooking",
        "Open",
        "OpenForArrival",
        "OpenForDeparture"
      ]
    },
    "blockAccessExclusionsType": {
      "type": "object",
      "description": "Access Exclusion information indicating the actions allowed under a HUB or hotel for which the access exclusion is set.",
      "properties": {
        "blockAccessExclusion": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockAccessExclusionType"
          }
        },
        "accessExclusionMessage": {
          "description": "Exclusion message for the block.",
          "$ref": "#/definitions/blockAccessExclusionMessageType"
        },
        "hotelId": {
          "description": "Hotel code to which the block belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "blockAccessExclusionType": {
      "type": "object",
      "description": "Access Exclusion information indicating the actions allowed under a HUB or Hotel for which the access exclusion is set.",
      "properties": {
        "sourceType": {
          "description": "The type of source (CRO or Hotel code) for which the rate access exclusion is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceValue": {
          "description": "CRO or Hotel code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "allowModifyReservation": {
          "description": "Allow to modify a reservation under this access exclusion.",
          "type": "boolean"
        },
        "allowCancelReservation": {
          "description": "Allow to cancel a reservation under this access exclusion.",
          "type": "boolean"
        },
        "allowCreateReservation": {
          "description": "Allow to create a reservation under this access exclusion.",
          "type": "boolean"
        },
        "inactive": {
          "description": "The rate access exclusion is inactive",
          "type": "boolean"
        },
        "excludeFromAvailability": {
          "description": "Exclude a specific rate from availability",
          "type": "boolean"
        }
      }
    },
    "blockAccessExclusionMessageType": {
      "type": "object",
      "description": "Access exclusion message.",
      "properties": {
        "exclusionMessage": {
          "description": "Access Exclusion message for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "blockDetailInstructionType": {
      "type": "string",
      "description": "Type for block instructions that can be used in requests for partial operations.",
      "enum": [
        "AccessExclusions",
        "Aliases",
        "AlternateDates",
        "Attachments",
        "Block",
        "BlockNextStatuses",
        "BlockStatusHistory",
        "CatNextStatuses",
        "CatStatusHistory",
        "Comments",
        "DateProtect",
        "ExternalReferences",
        "GenericRateGrid",
        "Header",
        "Indicators",
        "InventoryItems",
        "Owners",
        "Packages",
        "Policies",
        "PrimaryOwners",
        "PrimaryProfiles",
        "PrimaryRates",
        "Profiles",
        "RateGrid",
        "RateProgram",
        "Rates",
        "Restrictions",
        "SellMessages",
        "Statistics",
        "SummaryStatistics",
        "Traces",
        "WashSchedules"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "blockSummaries": {
      "type": "object",
      "description": "It also contains Success,Warnings and Errors related to this operation.",
      "properties": {
        "blockSummaries": {
          "description": "Type contains the summary information for a block.",
          "$ref": "#/definitions/blockSummariesType"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockSummariesType": {
      "type": "object",
      "description": "Summary information returned during block search.",
      "properties": {
        "blockInfo": {
          "description": "A collection of Blocks or Unique IDs of Blocks.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "blockIdList": {
                "description": "Collection of unique block identifiers.",
                "$ref": "#/definitions/blockIdList"
              },
              "block": {
                "description": "Provides summary information regarding a block.",
                "$ref": "#/definitions/blockSummaryType"
              }
            }
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "blockSummaryType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel code for this block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockCode": {
          "description": "Block code for this block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockName": {
          "description": "Block name for this block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockStatus": {
          "description": "Status code and description for this block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "status": {
          "description": "Internal status for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate code assigned to block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cateringStatus": {
          "description": "Catering Status Code and Description for the block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "cateringAttendees": {
          "description": "Number of Attendees for Catering Event",
          "type": "integer"
        },
        "cateringOnlyBlock": {
          "description": "Indicates if this is a catering only block.",
          "type": "boolean"
        },
        "startDate": {
          "description": "Start date for this block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date for this block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "shoulderStartDate": {
          "description": "Shoulder begin date for this block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "shoulderEndDate": {
          "description": "Shoulder end date for this block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inventoryControl": {
          "description": "Indicates whether the block is elastic. Stores 0 for non-elastic, 1 for elastic and 2 for sell limit block.",
          "$ref": "#/definitions/blockInventoryControlType"
        },
        "hotelUse": {
          "description": "Indicates whether the block can be updated only by the Hotel to which it belongs.",
          "$ref": "#/definitions/hotelUseType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "blockIndicators": {
          "description": "Indicators of additional information attached to the block",
          "$ref": "#/definitions/indicatorsType"
        },
        "tourCode": {
          "description": "The tour code that this block belongs to, if the block is a part of a tour series.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rooms": {
          "description": "Inventory held for the business block.",
          "type": "integer"
        },
        "primaryOwners": {
          "description": "Primary Owners for the the business block.",
          "$ref": "#/definitions/blockOwnersType"
        },
        "blockClassification": {
          "description": "Indicate Master/Sub Block.",
          "$ref": "#/definitions/blockClassificationType"
        },
        "synchronized": {
          "description": "Indicate if Master/Sub Blocks are Synchronized.",
          "type": "boolean"
        },
        "groupName": {
          "description": "Group name for this block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "tentativeBlock": {
          "description": "If tentative block, block inventory is not deducted from hotel inventory else block inventory is deducted.",
          "type": "boolean"
        },
        "customFields": {
          "description": "Specifies custom extension fields for a Block Summary Type",
          "$ref": "#/definitions/customFieldsType"
        },
        "actualRooms": {
          "description": "Inventory held for the block's reservations.",
          "type": "integer"
        },
        "cutoffDate": {
          "description": "Date after which unused block rooms should be returned to house.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationType": {
          "description": "Reservation type of the business block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "flexibleDates": {
          "description": "Indicates if alternate dates are allowed for the booking.",
          "type": "boolean"
        },
        "deductInventory": {
          "description": "Indicates if blocked rooms are deducted from inventory.",
          "type": "boolean"
        },
        "cateringDeductInventory": {
          "description": "Indicates if blocked catering events are deducted from inventory.",
          "type": "boolean"
        },
        "decisionDate": {
          "description": "Contains information about the date by which the group must make a decision on the block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "followupDate": {
          "description": "Contains information to follow up on the block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "customFieldsType": {
      "type": "object",
      "description": "A common type used to hold custom user defined fields(UDFs). This type should be used to handle custom UDFs on RReservation, Profiles, tc.",
      "properties": {
        "customCharUDFs": {
          "description": "Collection of custom user defined fields of Character/String Type.",
          "$ref": "#/definitions/customCharUDFsType"
        },
        "customNumericUDFs": {
          "description": "Collection of custom user defined fields of Numeric Type.",
          "$ref": "#/definitions/customNumericUDFsType"
        },
        "customDateUDFs": {
          "description": "Collection of custom user defined fields of Date Type.",
          "$ref": "#/definitions/customDateUDFsType"
        }
      }
    },
    "customCharUDFsType": {
      "type": "array",
      "description": "Used to hold collection of custom user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "customNumericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of custom user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "customDateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of custom user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "description": "",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addtionalCodeInfoType": {
      "type": "array",
      "description": "Holds name of additional code information",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "blocksType": {
      "type": "object",
      "description": "A collection of Block objects or Unique IDs of Blocks.",
      "properties": {
        "blockInfo": {
          "description": "A collection of Blocks or Unique IDs of Blocks.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "block": {
                "description": "Provides detailed information regarding a block.",
                "$ref": "#/definitions/blockType"
              }
            }
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "blockType": {
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers.",
          "$ref": "#/definitions/blockIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "blockDetails": {
          "description": "Detailed Block information for this block.",
          "$ref": "#/definitions/blockDetailsType"
        },
        "blockOwners": {
          "description": "Criteria to assign the owners of a business block.",
          "$ref": "#/definitions/blockOwnersType"
        },
        "masterBlockInfo": {
          "description": "Basic information of master and sub blocks structure in tree manner, this element only used while retrieving Block Type.",
          "$ref": "#/definitions/masterBlockInfoType"
        },
        "reservationPolicies": {
          "description": "A list of reservation policies.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPoliciesType"
          }
        },
        "reservationDetails": {
          "description": "Details of room Information for the Block.",
          "$ref": "#/definitions/blockReservationDetailsType"
        },
        "catering": {
          "description": "Details of catering Information for the Block.",
          "$ref": "#/definitions/cateringType"
        },
        "blockProfiles": {
          "description": "A collection of all the profiles associated to this block. Please note that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the profiles that should be associated to the block should be provided during a change operation. Any profiles not provided will be detached from this block. By default the full overlay is considered false if this tag is left blank. If values are provided for profiles, only the full overlay functionality is provided at this time.",
          "type": "object",
          "properties": {
            "blockProfile": {
              "description": "The list of profiles associated with the block.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/blockProfilesType"
              }
            },
            "fullOverlay": {
              "description": "Indicates whether to perform a full overlay for the profiles. Currently only the Fulloverlay functionality is provided.",
              "type": "boolean"
            }
          }
        },
        "blockPackages": {
          "description": "A Block Package represents a non-room product provided to guests. Block Pacakges may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockPackageType"
          }
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a block.",
          "$ref": "#/definitions/blockInventoryItemsType"
        },
        "blockStatistics": {
          "description": "Indicates the room and revenue statistics of the block.",
          "$ref": "#/definitions/blockStatisticsType"
        },
        "comments": {
          "description": "List of notes for the Block.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "roomAllocations": {
          "description": "Room Allocations for the Block.",
          "type": "object",
          "properties": {
            "roomAllocationType": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomAllocationTypeType"
              }
            },
            "masterInfo": {
              "description": "Room Allocations Master Information contains all the room types in the property.",
              "$ref": "#/definitions/roomAllocationMasterInfoType"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "numberOfDays": {
              "type": "number"
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "blockIndicators": {
          "description": "Indicators of additional information attached to the block",
          "$ref": "#/definitions/indicatorsType"
        },
        "traces": {
          "description": "List of block traces.",
          "$ref": "#/definitions/blockTracesType"
        },
        "statistics": {
          "description": "Statistics summary information including Rooms Sold, Room Revenue, Food and Beverage Revenue, Average Room Rate,etc.",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/blockStatisticsSummaryType"
          }
        },
        "blockSecurity": {
          "description": "Block security information used for an external system. Only available if configured in OPERA Cloud.",
          "type": "object",
          "properties": {
            "securedFromDIdisplayYn": {
              "description": "Secured from DI Display.",
              "type": "boolean"
            },
            "allDescriptionDDSecured": {
              "description": "All Description DD Secured.",
              "type": "boolean"
            },
            "ratesSecuredfromGNR": {
              "description": "Rates Secured from GNR.",
              "type": "boolean"
            },
            "ratesSecuredfromAllDisplays": {
              "description": "Rates Secured from All Displays.",
              "type": "boolean"
            },
            "housingInformationSecured": {
              "description": "Housing Information Secured.",
              "type": "boolean"
            },
            "daysDepositRequired": {
              "description": "Number of Days Deposit due to guarantee the guest booking.",
              "type": "number"
            },
            "advanceCancelDays": {
              "description": "Number of days before the arrival date a reservation can be canceled without losing the deposit.",
              "type": "number"
            },
            "returnOneDayAtTimeYn": {
              "description": "Return One Day at a time.",
              "type": "boolean"
            },
            "commissionableYn": {
              "description": "Determines if Travel Agent commission will be paid on reservations booked through the HOLIDEX Plus TACP program.",
              "type": "boolean"
            }
          }
        },
        "ratePrograms": {
          "description": "Rate Program contains rate information required for block creation, like room pool, rate amount, market code, etc. Only available if configured in OPERA Cloud.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateProgramType"
          }
        },
        "externalAttributes": {
          "description": "Block attributes used for external systems. Only available if configured in OPERA Cloud.",
          "type": "object",
          "properties": {
            "housingProtected": {
              "description": "Only available if configured in OPERA Cloud.",
              "type": "boolean"
            },
            "eventType": {
              "description": "Contract type of a block, which is used for external system. Only available if configured in OPERA Cloud.",
              "$ref": "#/definitions/eventTypeType"
            },
            "gIId": {
              "description": "Group IATA number validated by an external system and block can't be saved unless confirmed that GIID is valid. Only available if configured in OPERA Cloud.",
              "type": "string"
            },
            "rollEndDate": {
              "description": "When this flag is set it will be used to roll Block End Date and Block Rate Program End Date in the night audit process. Only available if configured in OPERA Cloud.",
              "type": "boolean"
            }
          }
        },
        "genericRoomAllocations": {
          "description": "Generic Room Type Allocations for the Block.",
          "type": "object",
          "properties": {
            "roomAllocationType": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomAllocationTypeType"
              }
            },
            "masterInfo": {
              "description": "Generic Room Allocations Master Information contains all the room types in the property.",
              "$ref": "#/definitions/roomAllocationMasterInfoType"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "numberOfDays": {
              "type": "number"
            }
          }
        },
        "alternateDates": {
          "description": "Alternate Date information for the Block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockAlternateDateType"
          }
        },
        "sellMessages": {
          "description": "List of sell messages for the Block.",
          "$ref": "#/definitions/sellMessageConfigsType"
        },
        "attachments": {
          "description": "List of attachments for the Block.",
          "$ref": "#/definitions/attachmentsType"
        },
        "washSchedules": {
          "description": "List of wash schedules for the Block.",
          "$ref": "#/definitions/blockWashSchedulesType"
        },
        "restrictions": {
          "description": "List of restrictions for the Block.",
          "$ref": "#/definitions/blockRestrictionsType"
        },
        "accessExclusions": {
          "description": "List of access exclusions for the block.",
          "$ref": "#/definitions/blockAccessExclusionsType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this block as recently accessed.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "blockDailyStatistics": {
      "type": "object",
      "description": "Response Object of Fetch Block Daily Statistics.",
      "properties": {
        "blockDailyStatistics": {
          "description": "Collection of Block Daily Statistics for selected Block.",
          "$ref": "#/definitions/blocksDailyStatisticsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blocksDailyStatisticsType": {
      "type": "array",
      "description": "A collection of Blocks.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "blockIdList": {
            "description": "Collection of unique block identifiers.",
            "$ref": "#/definitions/blockIdList"
          },
          "blockCode": {
            "description": "Block code for the block.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "blockName": {
            "description": "Name of the block.",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          },
          "timeSpan": {
            "description": "TimeSpan reflects the Arrival, Departure of the block.",
            "$ref": "#/definitions/timeSpanType"
          },
          "stayDates": {
            "description": "Collection of daily statistics per allotment date.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "$ref": "#/definitions/blockDailyStatisticsDatesType"
            }
          },
          "hotelId": {
            "description": "The Hotel Code the block belongs to.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        }
      }
    },
    "blockDailyStatisticsDatesType": {
      "type": "array",
      "description": "Collection of statistics detail for every allotment date.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockDailyStatisticsDateType"
      }
    },
    "blockDailyStatisticsDateType": {
      "type": "object",
      "description": "Holds the room type or generic room type(Room Pool) level statistics for an allotment date.",
      "properties": {
        "roomTypeStatisticsList": {
          "description": "Collection of room type level statistics.",
          "$ref": "#/definitions/blockDailyRoomStatisticsListType"
        },
        "genericRoomTypeStatisticsList": {
          "description": "Collection of generic room type(Room Pool) level statistics.",
          "$ref": "#/definitions/blockDailyRoomStatisticsListType"
        },
        "date": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockDailyRoomStatisticsListType": {
      "type": "array",
      "description": "Collection of room type level statistics.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockDailyRoomStatisticsType"
      }
    },
    "blockDailyRoomStatisticsType": {
      "type": "object",
      "description": "Statistics information for the room type.",
      "properties": {
        "statisticsInfo": {
          "$ref": "#/definitions/blockDailyStatisticsInfoType"
        },
        "roomType": {
          "description": "Pertain value for room type or generic room type (Room Pool) code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockDailyStatisticsInfoType": {
      "type": "object",
      "description": "Information about Block daily statistics.",
      "properties": {
        "available": {
          "description": "Pertain value for available rooms for a block.",
          "type": "integer"
        },
        "allocated": {
          "description": "Pertain value for blocked rooms for a block.",
          "type": "integer"
        },
        "pickup": {
          "description": "Pertain value for reserved rooms for a block.",
          "type": "integer"
        }
      }
    },
    "reservationSnapshotType": {
      "type": "object",
      "description": "This is used when changing block reservations in bulk.",
      "properties": {
        "hotelReservation": {
          "description": "Contains detailed information about the snapshot reservation",
          "$ref": "#/definitions/hotelReservationType"
        },
        "routingInstructions": {
          "description": "Contains the routing instructions of the reservation.",
          "$ref": "#/definitions/routingInfoListType"
        }
      }
    },
    "hotelReservationType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "associatedReservations": {
          "description": "Information regarding associated reservations.",
          "$ref": "#/definitions/associatedResType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            },
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            }
          }
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationAwards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "reservationActivities": {
          "description": "Collection of Reservation Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "scheduledActivities": {
          "description": "Collection of Scheduled Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "reservationPackages": {
          "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "statisticalClassification": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/resStatClassificationType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "confirmationLetters": {
          "description": "List of reservation confirmation letters.",
          "$ref": "#/definitions/confirmationsType"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            },
            "actionType": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "displayColor": {
          "description": "The color to display this reservation on room grid displays.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "associatedResType": {
      "type": "object",
      "description": "Information regarding associated reservations to the reservation.",
      "properties": {
        "parentReservation": {
          "description": "Stores Unique ID of the parent reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalMultiRoomRes": {
          "description": "Stores Unique ID of the original multi room reservation from which this reservation is split off.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King room, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        }
      }
    },
    "currentRoomInfoType": {
      "type": "object",
      "description": "Room information of the reservation for the current day.",
      "properties": {
        "roomType": {
          "description": "Current room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Current room number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "suggestedRoomNumbers": {
          "description": "Suggested room numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "roomDescription": {
          "description": "Current room description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "stayProfiles": {
          "description": "Profile associated with the room Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the room rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the room rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "availability": {
          "description": "Used to specify an availability status for the room rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "suppressRate": {
          "type": "boolean"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the room type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the element provides the rate group for the rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "totalType": {
      "type": "object",
      "description": "The total amount charged for the service including additional amounts and fees.",
      "properties": {
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        }
      }
    },
    "taxesType": {
      "type": "object",
      "description": "A collection of taxes.",
      "properties": {
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "taxType": {
      "type": "object",
      "description": "Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "feesType": {
      "type": "object",
      "description": "A collection of fees or service charges.",
      "properties": {
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "feeType": {
      "type": "object",
      "description": "Applicable service charges or fees.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "ratesType": {
      "type": "object",
      "description": "Individual rate amount.",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "amountType": {
      "type": "object",
      "description": "Base charge and additional charges related to a room that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/totalType"
        },
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        }
      }
    },
    "discountType": {
      "type": "object",
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "properties": {
        "discountReason": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "shareDistributionInstructionType": {
      "type": "string",
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "rateRangeType": {
      "type": "object",
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "type": "string"
        },
        "calculationRule": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "sellSeparate": {
          "type": "boolean"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "guestCountsType": {
      "type": "object",
      "description": "A collection of GuestCount by age group.",
      "properties": {
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "type": "array",
      "description": "Age of a child in years.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childAgeType": {
      "type": "object",
      "description": "Defines Child's Age.",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childBucketsType": {
      "type": "object",
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "resAwardsType": {
      "type": "object",
      "description": "Membership Awards code applied on the reservation.",
      "properties": {
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "awardVouchersType": {
      "type": "array",
      "description": "This stores the Membership Awards code applied on the reservation.",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        }
      }
    },
    "foreignExchangeType": {
      "type": "object",
      "description": "Foreign Exchange info.",
      "properties": {
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "roomRateAvailReasonType": {
      "type": "string",
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "upsellInfoType": {
      "type": "object",
      "description": "Information regarding upsell for a reservation.",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "rateCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        }
      }
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "compAuthorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "resGuestType": {
      "type": "object",
      "description": "A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which room is determined by each RoomStays ResGuestRPHs collection.",
      "properties": {
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "object",
          "properties": {
            "profileIdList": {
              "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
              "$ref": "#/definitions/profileIdList"
            },
            "profile": {
              "description": "Provides detailed information regarding either a company or a customer profile.",
              "$ref": "#/definitions/profileType"
            },
            "profileCashieringDetail": {
              "description": "Cashiering details for the profile.",
              "$ref": "#/definitions/profileCashieringDetailType"
            },
            "registrationCardNo": {
              "description": "Unique identifier of the police registration card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "arrivalTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "visaInfo": {
          "$ref": "#/definitions/visaInfoType"
        },
        "reservationGuestRPH": {
          "description": "This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that room stay or service.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        },
        "primary": {
          "description": "When true indicates this is the primary guest.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringDetailType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "eCommerceId": {
          "description": "E-Commerce ID of the Profile",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileRoutingInstructionsType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "billingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingInstructionType": {
      "type": "object",
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "properties": {
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transportInfoType": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transportCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "carrierCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "transportationReqd": {
          "type": "boolean"
        }
      }
    },
    "visaInfoType": {
      "type": "object",
      "properties": {
        "visaIssueDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resGuestAdditionalInfoType": {
      "type": "object",
      "properties": {
        "portOfEntry": {
          "description": "Entry point into the country. (Croatian Requirements).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "dateOfEntry": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "nextDestination": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string"
        },
        "preferredRoomType": {
          "description": "Preferred Room Type of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStay": {
          "description": "Last Stay information of the guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "purposeOfStay": {
          "description": "Purpose of stay.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestClassification": {
          "description": "Guest Classification for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "guestStatus": {
          "description": "Guest Status for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "awardsType": {
      "type": "array",
      "description": "List of awards.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "awardType": {
      "type": "object",
      "description": "Detailed information of the awards.",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "masterCertificiateNo": {
          "description": "Master Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "fBAInfo": {
          "description": "FBA related fields.",
          "$ref": "#/definitions/fBAInfoType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "awardKindType": {
      "type": "string",
      "description": "Indicates that this is electronic certificate.",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "reservationCertificateType": {
      "type": "string",
      "description": "Certificate is incentive.",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "rewardCertificateType": {
      "type": "string",
      "description": "Point Saver reward.",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "awardStatusType": {
      "type": "string",
      "description": "Indicates that certificate is in use.",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "fBAInfoType": {
      "type": "object",
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "properties": {
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        }
      }
    },
    "fBAStatusType": {
      "type": "string",
      "description": "Flexible benefit award has been reimbursed.",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "trackItItemsType": {
      "type": "array",
      "description": "",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItItemType"
      }
    },
    "trackItItemType": {
      "type": "object",
      "description": "Detailed information of a Track It item.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "group": {
          "$ref": "#/definitions/trackItGroup"
        },
        "ticketNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "referenceNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "$ref": "#/definitions/trackItType"
        },
        "action": {
          "$ref": "#/definitions/trackItActionType"
        },
        "location": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "type": "integer"
        },
        "followUpDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "assignedTo": {
          "$ref": "#/definitions/applicationUserType"
        },
        "reservationInfo": {
          "$ref": "#/definitions/trackItReservationInfoType"
        },
        "trackItLogList": {
          "$ref": "#/definitions/trackItLogListType"
        }
      }
    },
    "trackItId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "trackItGroup": {
      "type": "string",
      "description": "Group to which the Track It items belong.",
      "enum": [
        "Parcel",
        "Valet",
        "Baggage",
        "Lost"
      ]
    },
    "trackItType": {
      "type": "object",
      "description": "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed vehicles or services.",
      "properties": {
        "type": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "trackItActionType": {
      "type": "object",
      "description": "Identifies the response expected from staff or other parties relative to a Track It ticket.",
      "properties": {
        "trackItAction": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "$ref": "#/definitions/actionStatusType"
        }
      }
    },
    "actionStatusType": {
      "type": "string",
      "description": "Action status of the Track It item(Open, Closed).",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "appUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "lDAPUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "actAs": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actAt": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "userDefaultLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "department": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "departmentLocation": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "salesRepCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        },
        "runningApp": {
          "type": "string"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chain": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cROCountryCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "dbDateFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencyFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "baseLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "parametersType": {
      "type": "array",
      "description": "Collection of generic Name-Value-Pair parameters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parameterType": {
      "type": "object",
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "trackItReservationInfoType": {
      "type": "object",
      "description": "Reservation info associated with a Track It item.",
      "properties": {
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "guestInfo": {
          "$ref": "#/definitions/resGuestInfoType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "reservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "trackItLogListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLogType"
      }
    },
    "trackItLogType": {
      "type": "object",
      "description": "Individual activity log related to the Track It ticket.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItLogId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "hotelReservationsType": {
      "type": "object",
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "properties": {
        "reservation": {
          "description": "A collection of Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationLocatorsType": {
      "type": "array",
      "description": "Holds the Locator Information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationLocatorType"
      }
    },
    "reservationLocatorType": {
      "type": "object",
      "description": "Holds the information for a Reservation Guest Locator",
      "properties": {
        "dateSpan": {
          "description": "Begin and End date range of the Guest Locator.",
          "$ref": "#/definitions/dateRangeType"
        },
        "timeSpan": {
          "description": "Time span for the Guest Locator.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "locatorText": {
          "description": "The Locator Text for the guest.",
          "type": "string"
        },
        "locatorOn": {
          "description": "Date and time of the Guest Locator.",
          "type": "string",
          "format": "date-time"
        },
        "locatorBy": {
          "description": "User that entered this Guest Locator.",
          "type": "string"
        },
        "locatorId": {
          "description": "Unique Id of the Guest Locator ( Locator Id )",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "serviceRequests": {
      "type": "array",
      "description": "Service request.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/serviceRequest"
      }
    },
    "serviceRequest": {
      "type": "object",
      "description": "Service request.",
      "properties": {
        "serviceRequestId": {
          "description": "Unique identifier of the service request.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Service request code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the service request.",
          "$ref": "#/definitions/serviceRequestStatusType"
        },
        "priority": {
          "description": "The priority level of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "The department that is associated with the service request code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "reservationIdList": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "profileId": {
          "description": "Unique identifier of the guest.",
          "$ref": "#/definitions/profileId"
        },
        "guestName": {
          "description": "The guest name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "room": {
          "description": "The room number in which the service request was created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "openDate": {
          "description": "The date-time in which the service request was opened.",
          "type": "string",
          "format": "date-time"
        },
        "guaranteedBy": {
          "description": "The user who guaranteed the completion of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "comment": {
          "description": "Description of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "action": {
          "description": "Description of the action taken to complete the request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "guestContactMethod": {
          "description": "Communication method picked from guest profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "completionDate": {
          "description": "The date-time in which the service request was completed.",
          "type": "string",
          "format": "date-time"
        },
        "closedDate": {
          "description": "The date-time in which the service request was closed.",
          "type": "string",
          "format": "date-time"
        },
        "closedBy": {
          "description": "The user who closed the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "closeDescription": {
          "description": "The follow up description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "serviceRequestStatusType": {
      "type": "string",
      "enum": [
        "Open",
        "PendingFollowUp",
        "Closed",
        "DoNotDisturb",
        "MakeUpRoom"
      ]
    },
    "activityLookUpList": {
      "type": "array",
      "description": "Criteria for fetching Activity Bookings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fetchActivityBookingsType"
      }
    },
    "fetchActivityBookingsType": {
      "type": "object",
      "description": "Used in the request message to describe the \"filtering Criteria\" when executing an activity lookup.",
      "properties": {
        "profileId": {
          "description": "ProfileID associated with the Activity under lookup.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "$ref": "#/definitions/personNameType"
        },
        "address": {
          "description": "Detailed Address information for the customer.",
          "$ref": "#/definitions/addressType"
        },
        "activities": {
          "description": "The specific acitvity information to be used for filtering the Look-up.",
          "$ref": "#/definitions/activityList"
        },
        "hotelId": {
          "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "activityList": {
      "type": "array",
      "description": "A collection of Activity objects.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "activityIds": {
            "description": "A collection of reference ID values that identify this uniquely scheduled activity instance. May contain one ID per external system plus an internal identifier.",
            "$ref": "#/definitions/uniqueIDListType"
          },
          "type": {
            "description": "The Type of the activity. Eg: SPA, Golf etc.",
            "type": "string"
          },
          "location": {
            "description": "The Location where the activity takes place. Eg: Salon",
            "type": "string"
          },
          "name": {
            "description": "Name of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            }
          },
          "numberOfPersons": {
            "description": "The total number of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "integer"
          },
          "timeSpan": {
            "description": "The time with-in which an activity falls (Starts/Ends/Spans)",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "duration": {
            "description": "The time span of the activity falls",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "description": {
            "description": "Description of the activity",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          },
          "note": {
            "description": "Any additional notes or comments regarding the scheduled activity.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          },
          "groupCode": {
            "description": "Any Block code associated with the activity if its a Group booking.",
            "type": "string"
          },
          "amount": {
            "description": "The amount charged for the activity.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "deposit": {
            "description": "A monetary value expressed with a currency code.",
            "type": "object",
            "properties": {
              "amount": {
                "description": "A monetary amount.",
                "type": "number"
              },
              "currencyCode": {
                "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3
              },
              "collectedBy": {
                "type": "string",
                "enum": [
                  "Vendor",
                  "Agent",
                  "Other"
                ]
              }
            }
          },
          "inactiveDate": {
            "description": "The Date by which the activity is deemed Cancelled/Deleted.",
            "type": "string",
            "format": "date-time"
          },
          "participants": {
            "description": "The names of the participants.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "$ref": "#/definitions/personNameType"
            }
          },
          "uRLLink": {
            "description": "The URL link to launch the Activity Reservation System to view or edit full details of this activity.",
            "type": "string"
          },
          "extensions": {
            "description": "Vendor extensions to the activity record.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          "status": {
            "description": "Activity reservation status. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "statusDescription": {
            "description": "Activity reservation status description. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "link": {
            "description": "When true indicates that activity link only needs to be inserted or deleted for this record.",
            "type": "boolean"
          }
        },
        "description": "Represents a single instance of a scheduled activity."
      }
    },
    "prepaidCardsType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "prepaidCardType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardDetailsType": {
      "type": "object",
      "description": "Prepaid Card Details.",
      "properties": {
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        }
      }
    },
    "prepaidCardTransactionType": {
      "type": "object",
      "description": "Prepaid Card transaction.",
      "properties": {
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardTrxTypeType": {
      "type": "string",
      "description": "Reload transaction.",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "reservationPackageType": {
      "type": "object",
      "description": "A ReservationPackageType class.",
      "properties": {
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "scheduleList": {
          "description": "A HotelPackageSchedule type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageScheduleType"
          }
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalID": {
          "description": "Reservation Package Opera Internal Unique Id. This is the unique Id used for this reservation package.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required element and part of the key to fetch the correct package record on the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "startDate": {
          "description": "Required value when changing a reservation package. If the original start date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Required value when changing a reservation package. If the original end date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required element and is part of the key to fetch the correct package record .",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation. For new development this field is to be used for passing the product scource",
          "$ref": "#/definitions/productSourceType"
        },
        "awardCode": {
          "description": "This is the Award code used to redeem the package if the package is a redemption package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "points": {
          "description": "Indicates the points used to redeem the redemption package.",
          "type": "integer"
        }
      }
    },
    "reservationPackageScheduleType": {
      "type": "object",
      "description": "A HotelPackageSchedule type.",
      "properties": {
        "consumptionDate": {
          "description": "The date the package was used or can be used.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        },
        "totalQuantity": {
          "description": "The total quantity of the package for this date, calculated based on the calculation rule as defined in the PackageHeaderType",
          "type": "integer"
        },
        "computedResvPrice": {
          "description": "Computed Reservation Price of the package. Calculation Will Be Performed Based On Other Parameters.",
          "type": "number"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "reservationDate": {
          "description": "The date of the Reservation when this package is applicable. This can be different from the date the package will be consumed. Example are next day packages. Reservation date is when the package is applied to the guest and Consumption date is when the guest can consume the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalUnitPrice": {
          "description": "The original price per unit of the package if it has been changed.",
          "type": "number"
        },
        "originalUnitAllowance": {
          "description": "The original allowance per unit of the package if it has been changed.",
          "type": "number"
        }
      }
    },
    "resInventoryItemsType": {
      "type": "object",
      "description": "Defines a collection of inventory items attached to a reservation.",
      "properties": {
        "item": {
          "description": "Inventory item attached to a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resInventoryItemType"
          }
        },
        "itemClassCode": {
          "description": "The Item Class ID which the item belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resInventoryItemType": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setup on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "timeSpan": {
          "description": "Begin and end date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "source": {
          "description": "If exists specifies whether the item is setup due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/resInventoryItemSourceType"
        }
      }
    },
    "resInventoryItemSourceType": {
      "type": "object",
      "description": "Defines whether the item is setup due to a Rate Plan, Package or a Block.",
      "properties": {
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setup due to a Rate Plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setup due to a Package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setup due to a Block.",
          "$ref": "#/definitions/blockId"
        },
        "welcomeOffer": {
          "description": "If true, it implies that the item has been attached to the reservation as part of a Welcome Offer",
          "type": "boolean"
        },
        "packageInternalID": {
          "description": "Source Reservation Package Opera Internal Unique Id. This is the unique Id used for the reservation package associated with this item.",
          "type": "number"
        }
      }
    },
    "membershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationMembershipType": {
      "type": "object",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "linkMembership": {
          "type": "boolean"
        },
        "primary": {
          "type": "boolean"
        }
      },
      "description": "Detailed information of the memberships."
    },
    "reservationPaymentMethodsType": {
      "type": "array",
      "description": "Defines reservation payment methods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationPaymentMethodType"
      }
    },
    "routingInfoListType": {
      "type": "array",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            }
          }
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        }
      }
    },
    "routingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "properties": {
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            }
          }
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "compRoutingRequestType": {
      "type": "object",
      "description": "Type for the details of a Comp Routing Request",
      "properties": {
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "userInfoType": {
      "type": "object",
      "description": "Opera User Information",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "compRoutingStatusType": {
      "type": "string",
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "linkedReservationsInfoType": {
      "type": "object",
      "description": "Linked Reservations.",
      "properties": {
        "reservationInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedReservationInfoType"
          }
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "linkedReservationInfoType": {
      "type": "object",
      "properties": {
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "givenName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "room": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservationBlock": {
          "description": "Key information about the block for the linked reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "displayColor": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the linked reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkReservationType": {
          "$ref": "#/definitions/linkedReservationType"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "This attribute is to verify if room number is locked for the reservation. When true the room number cannot be changed",
          "type": "boolean"
        },
        "suppressRate": {
          "description": "This attribute checks if rate is suppressed or not in order to properly show strike through.",
          "type": "boolean"
        }
      }
    },
    "linkedReservationType": {
      "type": "string",
      "description": "Enumeration of the different Linked Reservation Types.",
      "enum": [
        "Linked",
        "Shared",
        "Default"
      ]
    },
    "cateringResInfoType": {
      "type": "object",
      "description": "Information regarding catering event and catering revenue type associated to the reservation.",
      "properties": {
        "eventId": {
          "description": "Unique ID on a catering event associated to the reservation.",
          "$ref": "#/definitions/eventId"
        },
        "revenueType": {
          "description": "Catering revenue type associated to the reservation.",
          "type": "string"
        }
      }
    },
    "eventId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "resStatClassificationType": {
      "type": "object",
      "description": "Statistical Classification information for the reservation.",
      "properties": {
        "roomType": {
          "description": "Room Type used to calculate statistics for export(DRS).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateTier": {
          "description": "Rate Tier used calculate statistics for export(DRS).",
          "type": "integer"
        }
      }
    },
    "alertsType": {
      "type": "array",
      "description": "List of alerts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "vIPStatusType": {
      "type": "object",
      "description": "VIP status of the customer.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 2000.",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "languageType": {
      "type": "string",
      "minLength": 0,
      "maxLength": 40
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    },
    "welcomeOfferOptionsType": {
      "type": "string",
      "description": "None of the Welcome Offer option is selected.",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "hotelReservationTracesType": {
      "type": "array",
      "description": "List of Reservation Traces.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelReservationTraceType"
      }
    },
    "hotelReservationTraceType": {
      "type": "object",
      "description": "Extended Trace object to hold information for a reservation.",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "confirmationsType": {
      "type": "array",
      "description": "List of confirmation letters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/confirmationType"
      }
    },
    "confirmationType": {
      "type": "object",
      "properties": {
        "recipientInfo": {
          "description": "Receipient's information.",
          "$ref": "#/definitions/confRecipientInfoType"
        },
        "deliveryInfo": {
          "description": "The status of the confirmation letter sent via the specified CommunicationType.",
          "$ref": "#/definitions/confDeliveryInfoTypes"
        },
        "confirmationStyleInfo": {
          "description": "Confirmation style.",
          "$ref": "#/definitions/confirmationStyle"
        },
        "fromEmail": {
          "description": "Senders Email address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sendTextMessage": {
          "description": "Flag to indicate sending confirmation letter as text message.",
          "type": "boolean"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "confRecipientInfoType": {
      "type": "object",
      "properties": {
        "profileId": {
          "description": "name id of the recipient.",
          "$ref": "#/definitions/profileId"
        },
        "formerName": {
          "description": "Last Name of recipient.",
          "$ref": "#/definitions/profileNameType"
        },
        "addressInfo": {
          "description": "id of the address where to send confirmation letter.",
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "description": "id of the Email where to send confirmation letter.",
          "$ref": "#/definitions/emailInfoType"
        },
        "faxInfo": {
          "description": "id of the Fax where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "telephoneInfo": {
          "description": "id of the Mobile where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "recipientType": {
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "profileNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "confDeliveryInfoTypes": {
      "type": "array",
      "description": "List of confirmation letter delivery methods and their status",
      "maxItems": 4,
      "items": {
        "$ref": "#/definitions/confDeliveryInfoType"
      }
    },
    "confDeliveryInfoType": {
      "type": "object",
      "properties": {
        "communicationType": {
          "description": "CommunicationType through which the confirmation letter was sent.",
          "$ref": "#/definitions/confDeliveryMethod"
        },
        "lastStatus": {
          "description": "Status of last sent confirmation.",
          "$ref": "#/definitions/sentConfirmationStatus"
        },
        "lastAttempted": {
          "description": "Date of last attempt to send confirmation letter.",
          "type": "string",
          "format": "date-time"
        },
        "successfulTries": {
          "description": "Number of success letter sent.",
          "type": "integer"
        }
      }
    },
    "confDeliveryMethod": {
      "type": "string",
      "enum": [
        "Print",
        "Email",
        "Fax",
        "Text",
        "NotConfigured"
      ]
    },
    "sentConfirmationStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Succeeded",
        "Failed"
      ]
    },
    "confirmationStyle": {
      "type": "object",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "style": {
          "description": "Name of the confirmation letter style.",
          "type": "string"
        }
      }
    },
    "callHistoryType": {
      "type": "array",
      "description": "Holds call information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/callType"
      }
    },
    "callType": {
      "type": "object",
      "description": "Holds call information.",
      "properties": {
        "dateTimeSpan": {
          "description": "Call Time Span. Start Date and End Date is used for the Call duration.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "caller": {
          "description": "Holds caller information.",
          "$ref": "#/definitions/callerType"
        },
        "reservation": {
          "description": "Holds Reservation Id and Hotel Code.",
          "type": "object",
          "properties": {
            "reservationIdList": {
              "description": "Holds Reservation related Ids.",
              "$ref": "#/definitions/reservationIdList"
            },
            "hotelId": {
              "description": "Holds Hotel Code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "turnawayCode": {
          "description": "Call turn away code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "comments": {
          "description": "Call comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "callerType": {
      "type": "object",
      "description": "Holds caller information.",
      "properties": {
        "givenName": {
          "description": "Caller First Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 280
        },
        "surname": {
          "description": "Caller Last Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "phone": {
          "description": "Caller Phone Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "email": {
          "description": "Caller Email.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "fax": {
          "description": "Caller Fax Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargesType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "fixedChargeType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargeScheduleType": {
      "type": "object",
      "description": "Holds schedule of fixed charge.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeFrequencyType": {
      "type": "string",
      "description": "Yearly.",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeDetailType": {
      "type": "object",
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "properties": {
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        }
      }
    },
    "guestMessagesType": {
      "type": "array",
      "description": "Holds the Message Information",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guestMessageType"
      }
    },
    "guestMessageType": {
      "type": "object",
      "description": "Holds the Message information for a Reservation",
      "properties": {
        "message": {
          "description": "Holds the Message Information",
          "$ref": "#/definitions/messageType"
        },
        "delivery": {
          "description": "Holds the Delivery Method Information",
          "$ref": "#/definitions/messageDeliveryType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "messageType": {
      "type": "object",
      "description": "Holds the Message Information",
      "properties": {
        "messageText": {
          "description": "Message Content",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "messageDate": {
          "description": "Date the message was created",
          "type": "string",
          "format": "date-time"
        },
        "typeOfMessage": {
          "description": "Type of message (Voice/Text)",
          "$ref": "#/definitions/typeOfMessageType"
        },
        "recipient": {
          "description": "Recipient of the Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "operator": {
          "description": "User who created the Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "typeOfMessageType": {
      "type": "string",
      "description": "The type of Message for Guest Messages.",
      "enum": [
        "Tm",
        "Vm"
      ]
    },
    "messageDeliveryType": {
      "type": "object",
      "description": "Holds the Delivery Information of the Message",
      "properties": {
        "deliveryStatus": {
          "description": "Status of the Message (Received or Not Received)",
          "$ref": "#/definitions/messageStatusType"
        },
        "deliveryDate": {
          "description": "Date the message has been delivered (marked as received)",
          "type": "string",
          "format": "date-time"
        },
        "deliveredBy": {
          "description": "User who delivered the message (who marked message as received)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "printDate": {
          "description": "Date when message has been printed",
          "type": "string",
          "format": "date-time"
        },
        "textMessageSentDate": {
          "description": "Date when message has been sent via SMS",
          "type": "string",
          "format": "date-time"
        },
        "textMessageSentBy": {
          "description": "User who sent the message",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "textMessageSentById": {
          "description": "User Id of who sent the message",
          "type": "integer"
        },
        "textMessageRecipientNo": {
          "description": "Number in which the message is to be sent.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "messageStatusType": {
      "type": "string",
      "description": "Status of the Message.",
      "enum": [
        "Mr",
        "Nr"
      ]
    },
    "overrideInstructionsType": {
      "type": "array",
      "description": "List of override actions done.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/overrideInstructionType"
      }
    },
    "overrideInstructionType": {
      "type": "object",
      "description": "Type for Overrides. Contains information for the override action performed while booking a reservation.",
      "properties": {
        "description": {
          "description": "The description of the restriction for which the override was done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "The date when the override was done.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "The type of override done. If done for Availability, then it will be AVAILABILITY.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "userId": {
          "description": "Login ID of the user who performed the override.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "eCouponsType": {
      "type": "array",
      "description": "Collection of ECouponType object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCouponType"
      }
    },
    "eCouponType": {
      "type": "object",
      "description": "Reservation eCoupon Type Information.",
      "properties": {
        "eCouponId": {
          "description": "ECouponID to attach the eCoupon to Reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "code": {
          "description": "Code to attach the eCoupon to Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the eCoupon attached to the Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoAttached": {
          "description": "Determines whether the eCoupon is attached through the Rate Code or not.",
          "type": "boolean"
        },
        "issuedQuantity": {
          "description": "Assigned Quantity for the eCoupon when attached to Reservation.",
          "type": "integer"
        },
        "usedQuantity": {
          "description": "Used Quantity of the eCoupon for the Reservation.",
          "type": "integer"
        },
        "reason": {
          "description": "Reason for attaching/modifing eCoupon.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "ratePlanCode": {
          "description": "Rate plan of the attached eCoupon to Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "welcomeOffer": {
          "description": "Determines whether this eCoupon is eligible for welcome offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationTransactionDiversionsType": {
      "type": "array",
      "description": "List of Transaction Diversion rules.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationTransactionDiversionType"
      }
    },
    "reservationTransactionDiversionType": {
      "type": "object",
      "description": "A Transaction Diversion Rule Type",
      "properties": {
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "notes": {
          "description": "The Note details related to the Transaction Diversion Rule.",
          "$ref": "#/definitions/commentInfoType"
        },
        "posted": {
          "description": "Transaction diversions that are posted.",
          "type": "integer"
        },
        "diverted": {
          "description": "Transaction diversions that are diverted .",
          "type": "integer"
        },
        "dailyDetails": {
          "description": "Collection of daily details of a Transaction diversion rule for a particular reservation.",
          "$ref": "#/definitions/transactionDiversionDailyDetailsType"
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transactionDiversionRuleLevelType": {
      "type": "string",
      "description": "Reservation level.",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "thresholdDetailsType": {
      "type": "object",
      "description": "Type for the threshold elements.",
      "properties": {
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        }
      }
    },
    "entityType": {
      "type": "string",
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "scopeType": {
      "type": "string",
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "transactionDiversionRuleTypeType": {
      "type": "string",
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "transactionDiversionDailyDetailsType": {
      "type": "array",
      "description": "List of daily details for Transaction Diversion rule.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionDailyDetailType"
      }
    },
    "transactionDiversionDailyDetailType": {
      "type": "object",
      "description": "List of daily details for Transaction Diversion rule.",
      "properties": {
        "posted": {
          "description": "Transaction diversion rules that are posted.",
          "type": "integer"
        },
        "diverted": {
          "description": "Transaction diversion rules that are diverted .",
          "type": "integer"
        },
        "date": {
          "description": "Daily details Date about when the rules are posted or diverted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "ticketsType": {
      "type": "array",
      "description": "Collection of TicketType objects.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ticketType"
      }
    },
    "ticketType": {
      "type": "object",
      "description": "Reservation Ticket Type Information.",
      "properties": {
        "ticketId": {
          "description": "Internal Unique ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "packageCode": {
          "description": "Package Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationProductId": {
          "description": "Reference to the reservation product.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ticketNumber": {
          "description": "Ticket number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "description": {
          "description": "Package description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "issueDate": {
          "description": "Tickets issue date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Tickets price.",
          "type": "number"
        },
        "consumptionDate": {
          "description": "Tickets comsumption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rateCode": {
          "description": "The Rate Code to which tickets belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "quantity": {
          "description": "Number of tickets used to create multiple tickets.",
          "type": "integer"
        },
        "reference": {
          "description": "Free text field for reference information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "status": {
          "description": "The Status Code for outbound WS call.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "statusDescription": {
          "description": "The Status Description for outbound WS call.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservationECertificatesType": {
      "type": "array",
      "description": "Collection of ECertificateType object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationECertificateType"
      }
    },
    "reservationECertificateType": {
      "type": "object",
      "description": "Reservation ECertificate Type Information.",
      "properties": {
        "eCertificateNo": {
          "description": "ECertificate Number for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "actionType": {
          "description": "ECertificate status for the reservation.",
          "$ref": "#/definitions/requestActionType"
        },
        "eCertificateType": {
          "description": "ECertificate Type where value can be PROMOTION,AWARD,BENEFIT and OTHER",
          "$ref": "#/definitions/eCertificateClassficationType"
        }
      }
    },
    "requestActionType": {
      "type": "string",
      "enum": [
        "Create",
        "Remove",
        "Query"
      ]
    },
    "eCertificateClassficationType": {
      "type": "string",
      "description": "Enumeration of the different type of Ecertificate.",
      "enum": [
        "Promotion",
        "Award",
        "Benefit",
        "Other"
      ]
    },
    "nameValueDetailType": {
      "type": "object",
      "description": "Detailed information returned during name value search.",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValuesType": {
      "type": "array",
      "description": "List of name value pairs.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "nameValueType": {
      "type": "object",
      "description": "Contains name value pair.",
      "properties": {
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueOriginType": {
      "type": "object",
      "description": "Contains origin details.",
      "properties": {
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "customChargeExemptionsType": {
      "type": "array",
      "description": "List of Custom Charge Exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeExemptionType": {
      "type": "object",
      "description": "Contains custom charges exemption information.",
      "properties": {
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeQuantityType": {
      "type": "object",
      "description": "Contains quantity of custom charge exemptions.",
      "properties": {
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        },
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionDatesType": {
      "type": "array",
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionDateType": {
      "type": "object",
      "description": "Contains Custom Charge Exemption information for a day.",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "excludedDatesType": {
      "type": "array",
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "excludedDateType": {
      "type": "object",
      "description": "Specifies all the enabled dates.",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "exclusionReasonType": {
      "type": "string",
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "blockRevenueChanges": {
      "type": "object",
      "description": "Response Object of details fetched of revenue log changes of selected block",
      "properties": {
        "blockRevenueChanges": {
          "description": "Collection of Block Revenue Changes for selected Block",
          "$ref": "#/definitions/blockRevenueChangesDetailsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockRevenueChangesDetailsType": {
      "type": "array",
      "description": "Block Revenue Changes Details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockRevenueChangesDetailType"
      }
    },
    "blockRevenueChangesDetailType": {
      "type": "object",
      "properties": {
        "changeDate": {
          "description": "Change date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "stayDate": {
          "description": "Date of stay.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "nights": {
          "description": "Number of nights room is occupied.",
          "type": "integer"
        },
        "roomRevenue": {
          "description": "Room revenue details.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomStatus": {
          "description": "Unique Code to identify room status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockOwner": {
          "description": "Unique Code to identify the owner.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockOwnersType"
          }
        },
        "userDetails": {
          "description": "Log time and detiails of the user who made changes .",
          "$ref": "#/definitions/logUserInfoType"
        }
      }
    },
    "logUserInfoType": {
      "type": "object",
      "properties": {
        "userInfo": {
          "description": "User details for Log changes",
          "$ref": "#/definitions/userInfoType"
        },
        "logDateTime": {
          "description": "User Log Changes Time Stamp details",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "blockStatistics": {
      "type": "object",
      "description": "The response object that returns Block Statistics information.",
      "properties": {
        "statisticsDetails": {
          "description": "Information on room sold, room revenue and room rate.",
          "$ref": "#/definitions/blockStatisticsDetailsType"
        },
        "masterInfo": {
          "description": "List of room types with an allotment.",
          "$ref": "#/definitions/blockStatisticsAllotedRoomsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockStatisticsDetailsType": {
      "type": "object",
      "description": "Collection of statistics details for every statistic type.",
      "properties": {
        "statisticsDetail": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockStatisticsDetailType"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "numberOfDays": {
          "type": "integer"
        }
      }
    },
    "blockStatisticsDetailType": {
      "type": "object",
      "description": "Statistics Detail for a statistic type.",
      "properties": {
        "statisticsDates": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockStatisticsDatesType"
          }
        },
        "statisticType": {
          "$ref": "#/definitions/statisticsType"
        }
      }
    },
    "blockStatisticsDatesType": {
      "type": "array",
      "description": "Collection of statistics detail for every allotment date.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockStatisticsDateType"
      }
    },
    "blockStatisticsDateType": {
      "type": "object",
      "description": "Holds the room type level statistics and total statistics for an allotment date.",
      "properties": {
        "total": {
          "type": "integer"
        },
        "roomStatisticsList": {
          "$ref": "#/definitions/blockRoomStatisticsListType"
        },
        "date": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockRoomStatisticsListType": {
      "type": "array",
      "description": "Collection of room type level statistics.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockRoomStatisticsType"
      }
    },
    "blockRoomStatisticsType": {
      "type": "object",
      "description": "Statistics information for the room type.",
      "properties": {
        "statisticsInfo": {
          "$ref": "#/definitions/blockStatisticsInfoType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockStatisticsInfoType": {
      "type": "object",
      "description": "Information about availability, rate and allotment statistics.",
      "properties": {
        "inventory": {
          "type": "integer"
        },
        "rate": {
          "type": "object",
          "properties": {
            "onePerson": {
              "type": "number"
            },
            "twoPerson": {
              "type": "number"
            },
            "threePerson": {
              "type": "number"
            },
            "fourPerson": {
              "type": "number"
            }
          }
        },
        "persons": {
          "type": "integer"
        },
        "revenue": {
          "type": "number"
        },
        "averageRate": {
          "type": "number"
        }
      }
    },
    "statisticsType": {
      "type": "string",
      "description": "Type of statistic for which its statistics information by date and room type will be populated.",
      "enum": [
        "Contract",
        "Initial",
        "Actual",
        "Pickup",
        "Available",
        "Change",
        "Rates",
        "Totalavailable",
        "Tentativereservations",
        "Pickuppersons",
        "Roomrevenue",
        "Totalrevenue",
        "Avgroomrate"
      ]
    },
    "blockStatisticsAllotedRoomsType": {
      "type": "object",
      "description": "List of all room types with alloted rooms.",
      "properties": {
        "roomTypes": {
          "type": "array",
          "maxItems": 7,
          "items": {
            "$ref": "#/definitions/statisticsRoomTypeInfoType"
          }
        }
      }
    },
    "statisticsRoomTypeInfoType": {
      "type": "object",
      "description": "Extended room type to store room category.",
      "properties": {
        "longDescription": {
          "description": "Detail description of the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "webName": {
          "description": "Name corresponding to a RoomType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "webPage": {
          "description": "URL providing more information about the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomFeatures": {
          "description": "Collection of room features.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomTypeAttributes": {
          "description": "Room type attributes.",
          "$ref": "#/definitions/roomTypeAttributesType"
        },
        "bookingChannelMappings": {
          "description": "Booking Channels mapping for the Room Type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelMappingType"
          }
        },
        "bedTypeCodes": {
          "description": "Bed type code associated with room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "boolean"
        },
        "component": {
          "description": "Indicates room type is a Component Room.",
          "type": "boolean"
        },
        "invBlockCode": {
          "description": "Block code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "promotionCode": {
          "description": "Represents the promotional code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierCode": {
          "description": "Represents the room qualifier code like Deluxe,Economy,Suite etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierMatchIndicator": {
          "description": "Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomCategory": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "cateringEventsProcessedInfoList": {
      "type": "array",
      "description": "Status/Info of the processed events.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "cateringEventsProcessedInfoType": {
      "type": "object",
      "description": "Status/Info of the processed events.",
      "properties": {
        "hotelId": {
          "description": "Hotel code where event will be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "BlockID of the event.",
          "$ref": "#/definitions/blockId"
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventDate": {
          "description": "Date of the event",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "room": {
          "description": "The function space room where the event takes place .",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "description": "Status of the processed event. e.g Completed, Not Processed.",
          "type": "string"
        },
        "reason": {
          "description": "Reason for not processing the event.",
          "type": "string"
        },
        "processingInfoType": {
          "description": "Flag to indicate the warning messages from the API",
          "type": "string"
        },
        "processingInfoCode": {
          "description": "Erorr/Warning code for not processing th event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "block": {
      "type": "object",
      "description": "Request object for creation of blocks. This object contains block details with unique identifiers for each block. The standard optional Opera Context element is also included.",
      "properties": {
        "blocks": {
          "description": "Contains the detailed information regarding the block.",
          "$ref": "#/definitions/blocksType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockToBeChanged": {
      "type": "object",
      "description": "Request object for change/modification of block details. This object contains modified block details with unique identifiers for each block. The standard optional Opera Context element is also included.",
      "properties": {
        "blocks": {
          "description": "Provides detailed information of the block to be changed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/blockInstructionType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockInstructionType": {
      "type": "object",
      "description": "Extended Block object to hold additional instructions along with the block. This should be used during create/update operations on a block.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers.",
          "$ref": "#/definitions/blockIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "blockDetails": {
          "description": "Detailed Block information for this block.",
          "$ref": "#/definitions/blockDetailsType"
        },
        "blockOwners": {
          "description": "Criteria to assign the owners of a business block.",
          "$ref": "#/definitions/blockOwnersType"
        },
        "masterBlockInfo": {
          "description": "Basic information of master and sub blocks structure in tree manner, this element only used while retrieving Block Type.",
          "$ref": "#/definitions/masterBlockInfoType"
        },
        "reservationPolicies": {
          "description": "A list of reservation policies.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPoliciesType"
          }
        },
        "reservationDetails": {
          "description": "Details of room Information for the Block.",
          "$ref": "#/definitions/blockReservationDetailsType"
        },
        "catering": {
          "description": "Details of catering Information for the Block.",
          "$ref": "#/definitions/cateringType"
        },
        "blockProfiles": {
          "description": "A collection of all the profiles associated to this block. Please note that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the profiles that should be associated to the block should be provided during a change operation. Any profiles not provided will be detached from this block. By default the full overlay is considered false if this tag is left blank. If values are provided for profiles, only the full overlay functionality is provided at this time.",
          "type": "object",
          "properties": {
            "blockProfile": {
              "description": "The list of profiles associated with the block.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/blockProfilesType"
              }
            },
            "fullOverlay": {
              "description": "Indicates whether to perform a full overlay for the profiles. Currently only the Fulloverlay functionality is provided.",
              "type": "boolean"
            }
          }
        },
        "blockPackages": {
          "description": "A Block Package represents a non-room product provided to guests. Block Pacakges may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockPackageType"
          }
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a block.",
          "$ref": "#/definitions/blockInventoryItemsType"
        },
        "blockStatistics": {
          "description": "Indicates the room and revenue statistics of the block.",
          "$ref": "#/definitions/blockStatisticsType"
        },
        "comments": {
          "description": "List of notes for the Block.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "roomAllocations": {
          "description": "Room Allocations for the Block.",
          "type": "object",
          "properties": {
            "roomAllocationType": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomAllocationTypeType"
              }
            },
            "masterInfo": {
              "description": "Room Allocations Master Information contains all the room types in the property.",
              "$ref": "#/definitions/roomAllocationMasterInfoType"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "numberOfDays": {
              "type": "number"
            }
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "blockIndicators": {
          "description": "Indicators of additional information attached to the block",
          "$ref": "#/definitions/indicatorsType"
        },
        "traces": {
          "description": "List of block traces.",
          "$ref": "#/definitions/blockTracesType"
        },
        "statistics": {
          "description": "Statistics summary information including Rooms Sold, Room Revenue, Food and Beverage Revenue, Average Room Rate,etc.",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/blockStatisticsSummaryType"
          }
        },
        "blockSecurity": {
          "description": "Block security information used for an external system. Only available if configured in OPERA Cloud.",
          "type": "object",
          "properties": {
            "securedFromDIdisplayYn": {
              "description": "Secured from DI Display.",
              "type": "boolean"
            },
            "allDescriptionDDSecured": {
              "description": "All Description DD Secured.",
              "type": "boolean"
            },
            "ratesSecuredfromGNR": {
              "description": "Rates Secured from GNR.",
              "type": "boolean"
            },
            "ratesSecuredfromAllDisplays": {
              "description": "Rates Secured from All Displays.",
              "type": "boolean"
            },
            "housingInformationSecured": {
              "description": "Housing Information Secured.",
              "type": "boolean"
            },
            "daysDepositRequired": {
              "description": "Number of Days Deposit due to guarantee the guest booking.",
              "type": "number"
            },
            "advanceCancelDays": {
              "description": "Number of days before the arrival date a reservation can be canceled without losing the deposit.",
              "type": "number"
            },
            "returnOneDayAtTimeYn": {
              "description": "Return One Day at a time.",
              "type": "boolean"
            },
            "commissionableYn": {
              "description": "Determines if Travel Agent commission will be paid on reservations booked through the HOLIDEX Plus TACP program.",
              "type": "boolean"
            }
          }
        },
        "ratePrograms": {
          "description": "Rate Program contains rate information required for block creation, like room pool, rate amount, market code, etc. Only available if configured in OPERA Cloud.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateProgramType"
          }
        },
        "externalAttributes": {
          "description": "Block attributes used for external systems. Only available if configured in OPERA Cloud.",
          "type": "object",
          "properties": {
            "housingProtected": {
              "description": "Only available if configured in OPERA Cloud.",
              "type": "boolean"
            },
            "eventType": {
              "description": "Contract type of a block, which is used for external system. Only available if configured in OPERA Cloud.",
              "$ref": "#/definitions/eventTypeType"
            },
            "gIId": {
              "description": "Group IATA number validated by an external system and block can't be saved unless confirmed that GIID is valid. Only available if configured in OPERA Cloud.",
              "type": "string"
            },
            "rollEndDate": {
              "description": "When this flag is set it will be used to roll Block End Date and Block Rate Program End Date in the night audit process. Only available if configured in OPERA Cloud.",
              "type": "boolean"
            }
          }
        },
        "genericRoomAllocations": {
          "description": "Generic Room Type Allocations for the Block.",
          "type": "object",
          "properties": {
            "roomAllocationType": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomAllocationTypeType"
              }
            },
            "masterInfo": {
              "description": "Generic Room Allocations Master Information contains all the room types in the property.",
              "$ref": "#/definitions/roomAllocationMasterInfoType"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "numberOfDays": {
              "type": "number"
            }
          }
        },
        "alternateDates": {
          "description": "Alternate Date information for the Block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockAlternateDateType"
          }
        },
        "sellMessages": {
          "description": "List of sell messages for the Block.",
          "$ref": "#/definitions/sellMessageConfigsType"
        },
        "attachments": {
          "description": "List of attachments for the Block.",
          "$ref": "#/definitions/attachmentsType"
        },
        "washSchedules": {
          "description": "List of wash schedules for the Block.",
          "$ref": "#/definitions/blockWashSchedulesType"
        },
        "restrictions": {
          "description": "List of restrictions for the Block.",
          "$ref": "#/definitions/blockRestrictionsType"
        },
        "accessExclusions": {
          "description": "List of access exclusions for the block.",
          "$ref": "#/definitions/blockAccessExclusionsType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this block as recently accessed.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "responseInstructions": {
          "description": "Collection of instructions to be returned as a set of block information.",
          "type": "object",
          "properties": {
            "responseInstruction": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/blockDetailInstructionType"
              }
            },
            "confirmationOnly": {
              "description": "If this value is set to TRUE, then the operation will only return for a Success or Failed flag.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "blockChanged": {
      "type": "object",
      "description": "Response object for change/modification of block details. This object contains the block details with unique identifiers for each block. Also Success,Warnings and Errors related to this operation.",
      "properties": {
        "blocks": {
          "description": "Provides detailed information regarding the changed blocks.",
          "$ref": "#/definitions/blocksType"
        },
        "cateringEventsProcessedInfo": {
          "description": "Status/Info of the processed events.",
          "$ref": "#/definitions/cateringEventsProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "allocation": {
      "type": "object",
      "description": "A Request message that sets the room allocations as a collection of room types and dates.",
      "properties": {
        "criteria": {
          "description": "This element contains the block allocations as a collection of room types and dates.",
          "$ref": "#/definitions/allocationGridByRoomTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "allocationGridByRoomTypesType": {
      "type": "object",
      "description": "A collection of Allocation objects for a block defined by room type.",
      "properties": {
        "hotelId": {
          "description": "Opera Hotel code for the Set Allocation Grid request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Unique block identifier of the block for which the allocations need to be set.",
          "$ref": "#/definitions/blockId"
        },
        "allocationRoomTypes": {
          "description": "Allocation objects of a block grouped by room types.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/allocationGridByRoomTypeType"
          }
        },
        "genericRoomType": {
          "description": "Indicates if the Allocation objects refer to Generic Room Types (Room Pools).",
          "type": "boolean"
        }
      }
    },
    "allocationGridByRoomTypeType": {
      "type": "object",
      "description": "A collection of Allocation objects for a block defined by room type.",
      "properties": {
        "allocationGridDates": {
          "description": "Allocation objects for a block by date ranges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/allocationGridByDateRangesType"
          }
        },
        "sellLimitGridDates": {
          "description": "Sell limits for a block by date ranges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellLimitGridByDateRangeType"
          }
        },
        "roomType": {
          "description": "Indicates the room type of the Allocation objects.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "allocationGridByDateRangesType": {
      "type": "object",
      "description": "A collection of Allocation objects for a block, such as Current Rooms, Original Rooms, Rate Amounts, etc.",
      "properties": {
        "roomAllocationInfo": {
          "description": "Allocation objects for a block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/allocationGridByDateRangeType"
          }
        },
        "allocation": {
          "description": "Indicates the type of the Allocation objects.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "allocationGridByDateRangeType": {
      "type": "object",
      "description": "Indicates the block allocations for a date range. This can be rooms or rate amounts.",
      "properties": {
        "inventory": {
          "description": "Indicates the room inventory values per person occupancy.",
          "$ref": "#/definitions/setBlockGridInvType"
        },
        "rate": {
          "description": "Indicates the rate amount values per person occupancy.",
          "$ref": "#/definitions/blockGridRatesType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "setBlockGridInvType": {
      "type": "object",
      "description": "Indicates the inventory values ( occupancy or availability ) per person occupancy.",
      "properties": {
        "onePerson": {
          "description": "Indicates the one person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "twoPerson": {
          "description": "Indicates the two person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "threePerson": {
          "description": "Indicates the three person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "fourPerson": {
          "description": "Indicates the four person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "sellLimit": {
          "description": "Indicates the sell limit",
          "type": "integer"
        },
        "cutoffDate": {
          "description": "Indicates the cutoff date.Date when inventory left in the block will be cut-off.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "forceOverbook": {
          "description": "Indicates whether to overbook the rooms in case there are not enough rooms at the house or room type level.",
          "type": "boolean"
        }
      }
    },
    "sellLimitGridByDateRangeType": {
      "type": "object",
      "description": "Indicates the sell limits for a date range. This will be rooms.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "sellLimit": {
          "description": "Indicates the sell limit for the date range.",
          "type": "integer"
        }
      }
    },
    "blockAvailability": {
      "type": "object",
      "description": "Response for FetchBlockAvailability operation.",
      "properties": {
        "blockAvailability": {
          "description": "Block Availability details.",
          "$ref": "#/definitions/blockAvailabilityType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockAvailabilityType": {
      "type": "object",
      "description": "Holds block availability information.",
      "properties": {
        "blockAvailabilityMasterInfo": {
          "description": "Master info for the block availability.",
          "$ref": "#/definitions/blockAvailabilityMasterInfoType"
        },
        "blockHeaderInfo": {
          "description": "Block header information.",
          "$ref": "#/definitions/blockHeaderInfoType"
        },
        "blockAvailability": {
          "description": "Provides room allocation/availability information for a stay date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockAvailabilityInfoType"
          }
        }
      }
    },
    "blockAvailabilityMasterInfoType": {
      "type": "object",
      "description": "Holds master information for block availability.",
      "properties": {
        "masterRoomTypes": {
          "description": "All room types available within the hotel.",
          "$ref": "#/definitions/codeListType"
        },
        "fetchedRoomTypes": {
          "description": "Details pertaining to a room type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockAvailabilityRoomTypeInfo"
          }
        },
        "ratePlans": {
          "description": "Rate plan code details for the block.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockAvailabilityRatePlanInfo"
          }
        },
        "currencyExchangeRates": {
          "description": "Currency exchange rate information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currencyExchangeRateType"
          }
        }
      }
    },
    "blockAvailabilityRoomTypeInfo": {
      "type": "object",
      "description": "Room type information including packages and basic room type details.",
      "properties": {
        "packages": {
          "description": "Package information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "roomTypeInfo": {
          "description": "Holds complete room type information.",
          "$ref": "#/definitions/roomTypeInfoType"
        },
        "available": {
          "description": "Indicates whether the room type is defined in the rate code for which availability is fetched.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type for which the details can be found in this node.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomTypeInfoType": {
      "type": "object",
      "properties": {
        "longDescription": {
          "description": "Detail description of the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "webName": {
          "description": "Name corresponding to a RoomType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "webPage": {
          "description": "URL providing more information about the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomFeatures": {
          "description": "Collection of room features.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomTypeAttributes": {
          "description": "Room type attributes.",
          "$ref": "#/definitions/roomTypeAttributesType"
        },
        "bookingChannelMappings": {
          "description": "Booking Channels mapping for the Room Type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelMappingType"
          }
        },
        "bedTypeCodes": {
          "description": "Bed type code associated with room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "boolean"
        },
        "component": {
          "description": "Indicates room type is a Component Room.",
          "type": "boolean"
        },
        "invBlockCode": {
          "description": "Block code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "promotionCode": {
          "description": "Represents the promotional code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierCode": {
          "description": "Represents the room qualifier code like Deluxe,Economy,Suite etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierMatchIndicator": {
          "description": "Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockAvailabilityRatePlanInfo": {
      "type": "object",
      "description": "Rate plan information including package details.",
      "properties": {
        "ratePlanInfo": {
          "description": "Rate Plan details.",
          "type": "object",
          "properties": {
            "shortInfo": {
              "description": "Brief Information of the Rate Code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "longInfo": {
              "description": "Detail Information of the Rate Code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "webPage": {
              "description": "URL providing more information about the Rate Code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "description": {
              "description": "Description of the Rate Code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "ratePlanChannelInfo": {
              "description": "To populate RatePlanLevel, RatePlanWebName, and RatePlanID according to the setup made under channel.",
              "$ref": "#/definitions/ratePlanChannelInfoType"
            },
            "currencyCode": {
              "description": "Currency Code of the rate code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "bookingChannelMappings": {
              "description": "Booking Channel mapping for the Rate Plan Code.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/bookingChannelMappingType"
              }
            },
            "ratePlanLevel": {
              "description": "All rate codes are associated with rate plan level ( or rate category )for Channels. So if rate plans are given in the request, get all rate codes associated with the rate plan level.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guarantee": {
              "description": "Guarantee details for rate plan code.",
              "$ref": "#/definitions/guaranteeType"
            },
            "cancelPenalty": {
              "description": "Cancellation details for rate plan code.",
              "$ref": "#/definitions/cancelPenaltyType"
            },
            "mealPlans": {
              "description": "Meal plan codes for rate plan code.",
              "$ref": "#/definitions/mealPlansType"
            },
            "ratePlanCode": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "hotelId": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "ratePlanCategory": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "taxInclusive": {
              "description": "Indicates if tax is included in the rate code amount.",
              "type": "boolean"
            },
            "serviceFeeInclusive": {
              "description": "Indicates if service fee is included in the rate code amount.",
              "type": "boolean"
            },
            "rateCommission": {
              "description": "Commission details for Rate plan code.",
              "$ref": "#/definitions/ratePlanCommissionType"
            },
            "negotiatedBy": {
              "description": "If Rate plan is negotiated by Guest or any attached profiles, this indicates how negotiated it. Applicable values are Guest, Company, Agent and Source.",
              "$ref": "#/definitions/profileTypeType"
            }
          }
        }
      }
    },
    "ratePlanChannelInfoType": {
      "type": "object",
      "properties": {
        "ratePlanLevel": {
          "description": "All rate codes are associated with rate plan level ( or rate category )for Channels. So if rate plans are given in the request, get all rate codes associated with the rate plan level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanId": {
          "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
          "type": "object",
          "properties": {
            "url": {
              "description": "URL that identifies the location associated with the record identified by the UniqueID.",
              "type": "string"
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instance": {
              "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "idContext": {
              "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "idExtension": {
              "description": "Additional identifying value assigned by the creating system.",
              "type": "integer"
            }
          }
        },
        "ratePlanWebName": {
          "description": "To populate the RatePlanName, setup for the channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "ratePlanCommissionType": {
      "type": "object",
      "properties": {
        "commissionCode": {
          "description": "commission code used by the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionPercentage": {
          "description": "commission percentage used by the rate plan.",
          "type": "number"
        },
        "commissionAmount": {
          "description": "commission amount used by the rate plan.",
          "type": "number"
        }
      }
    },
    "currencyExchangeRateType": {
      "type": "object",
      "description": "Currency code configuration.",
      "properties": {
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "description": "Description of the currency code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "exchangeRate": {
          "description": "Exchange Rate for the currency code. Exchange rate is based on the current business date of the property.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "blockHeaderInfoType": {
      "type": "object",
      "description": "Holds block header details.",
      "properties": {
        "hotelId": {
          "description": "Hotel code to which the block belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "description": "Name of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "blockName": {
          "description": "Block description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockCode": {
          "description": "Unique code for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Specifies the Block ID which is the unique identifier for the Block for both internal and external systems.",
          "$ref": "#/definitions/blockId"
        },
        "currencyCode": {
          "description": "Default currency code of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Primary rate code of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shoulderStartDate": {
          "description": "Shoulder start date of the block, applicable if the block is elastic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "shoulderEndDate": {
          "description": "Shoulder end date of the block, applicable if the block is elastic.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "startDate": {
          "description": "Start date of the block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date of the block.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inventoryControl": {
          "description": "Indicates whether the block is elastic.",
          "$ref": "#/definitions/blockInventoryControlType"
        },
        "marketCode": {
          "description": "Market code for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceOfSale": {
          "description": "Source for the block.",
          "$ref": "#/definitions/blockSourceOfSaleType"
        },
        "guaranteeCode": {
          "description": "Guarantee Code for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockStatus": {
          "description": "Booking Status of the block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "suppressRate": {
          "description": "Indicates whether rates are suppressed.",
          "type": "boolean"
        }
      }
    },
    "blockAvailabilityInfoType": {
      "type": "object",
      "description": "Captures room availability information for the block.",
      "properties": {
        "roomInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockAvailabilityRoomInfoType"
          }
        },
        "stayDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extendedStay": {
          "type": "boolean"
        }
      }
    },
    "blockAvailabilityRoomInfoType": {
      "type": "object",
      "description": "Captures occupancy and rate information for a room type.",
      "properties": {
        "inventory": {
          "description": "Total occupancy alloted for the room type and stay date.",
          "type": "integer"
        },
        "rate": {
          "description": "The derived rate amount for the room type, stay date and number of adults.",
          "type": "number"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sellLimit": {
          "description": "Available Sell Limit rooms for a Sell Limit block.",
          "type": "integer"
        }
      }
    },
    "blockPMReservations": {
      "type": "object",
      "description": "The response object that contains the PM reservations belonging to a block.",
      "properties": {
        "reservations": {
          "description": "Collection of the PM reservations belonging to a block.",
          "$ref": "#/definitions/reservationSnapshotsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationSnapshotsType": {
      "type": "object",
      "description": "A collection of Reservation snapshot objects.",
      "properties": {
        "reservation": {
          "description": "A reservation snapshot object.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationSnapshotType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Block",
      "description": "These APIs will allow you to completely create and manage your block in OPERA Cloud - including all related functionalities of a block such as manage Room allocation, Status update, block reservations.You can search for a block, get a Block, update and create new Blocks."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}