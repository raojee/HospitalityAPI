{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Customer Relationship Management API",
    "description": "APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.<br /><br /> There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much  more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "22.3",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/crm/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/companies": {
      "post": {
        "summary": "This API facilitates creation of a company/agent/group/source profile in OPERA.",
        "description": "When a profile doesn't already exist for a guest, use this to create a new profile.  The response will provide the newly created profile's OPERA ID. There are many fields in postProfile defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use postProfile. <p><strong>OperationId:</strong>postCompanyProfile</p>",
        "operationId": "postCompanyProfile",
        "parameters": [
          {
            "name": "company",
            "in": "body",
            "required": true,
            "description": "Request object for creation of company profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/company"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/companies/{corporateID}": {
      "get": {
        "summary": "Get company profile by corporate ID",
        "description": "Use this to retrieve a specific Company, Travel Agent, Group or Source profile. You must know the corporate ID of the profile for the request API. <p><strong>OperationId:</strong>getCompanyProfile</p>",
        "operationId": "getCompanyProfile",
        "parameters": [
          {
            "name": "corporateID",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Corporate ID used to find company/agent/group/source profile in OPERA."
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching unique company profile.",
            "schema": {
              "$ref": "#/definitions/company"
            },
            "examples": {
              "application/json": {
                "companyIdList": [
                  {
                    "id": "329620",
                    "type": "Profile"
                  },
                  {
                    "id": "222572",
                    "type": "CorporateId"
                  }
                ],
                "companyDetails": {
                  "company": {
                    "companyName": "Example Corporation, Ltd.",
                    "iATAInfo": {}
                  },
                  "profileAccessType": {
                    "hotelId": "HOTEL1",
                    "sharedLevel": "Property"
                  },
                  "profileRestrictions": {
                    "restricted": false
                  },
                  "profileType": "Company",
                  "statusCode": "Active",
                  "registeredProperty": "HOTEL1",
                  "createDateTime": "2019-06-26 16:14:41.0",
                  "creatorId": "BEN@HOTEL1",
                  "lastModifyDateTime": "2019-06-26 16:14:41.0",
                  "lastModifierId": "BEN@HOTEL1",
                  "markForHistory": false
                }
              }
            }
          },
          "204": {
            "description": "CompanyProfile not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/profiles/{profileExternalId}": {
      "get": {
        "summary": "Get profile by external ID",
        "description": "When a reservation is booked via an external system, you would use this API to retrieve a reservation using the external ID in the request <p><strong>OperationId:</strong>getProfileByExtId</p>",
        "operationId": "getProfileByExtId",
        "parameters": [
          {
            "name": "profileExternalId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "External System's ID used to get the profile."
          },
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "type": "string"
          },
          {
            "name": "logViewProfile",
            "in": "query",
            "required": false,
            "description": "This element tells when the view profile should be logged.",
            "type": "boolean"
          },
          {
            "name": "showInactiveRoomOwners",
            "in": "query",
            "required": false,
            "description": "Flag to show inactive Room Owners.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship",
                "Subscriptions",
                "DeliveryMethods",
                "GdsNegotiatedRate",
                "NegotiatedRate",
                "HistoryReservation",
                "FutureReservation",
                "WebUserAccount"
              ]
            },
            "required": false
          },
          {
            "name": "instructionParameterType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type enumerating the different parameters accepted by a profile Instructions. Parameter names have the name of the instruction expecting it, and the parameter name itself.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "NegotiatedRateShowInactive",
                "NegotiatedRateResort",
                "NegotiatedRateMaxFetchCount",
                "NegotiatedRateCode",
                "GdsNegotiatedRateShowInactive",
                "PreferencesShowInactive",
                "ResortForRoutingInstructions",
                "RelationshipPrimaryProfile",
                "AddressPrimaryOnly",
                "CommunicationPrimaryOnly",
                "DeliveryMethodsHotelCode"
              ]
            },
            "required": false
          },
          {
            "name": "value",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of Profile Instruction Parameter",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "allowedAction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "NameChange",
                "TaxIDChange",
                "EnrollToPrimaryMembership"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching profile.",
            "schema": {
              "$ref": "#/definitions/profile"
            },
            "examples": {
              "application/json": {
                "profiles": {
                  "profileInfo": [
                    {
                      "profileIdList": [
                        {
                          "type": "",
                          "idContext": "a",
                          "id": "a"
                        }
                      ],
                      "profile": {
                        "customer": {
                          "personName": [
                            {
                              "namePrefix": "a",
                              "givenName": "Thomas",
                              "middleName": "B",
                              "surname": "Smith",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "envelopeGreeting": "",
                              "salutation": "",
                              "nameType": "PRIMARY",
                              "language": "E"
                            }
                          ],
                          "anonymization": {
                            "anonymizationStatus": "REQUESTED",
                            "anonymizationDate": "2019-09-03T14:56:18.21Z"
                          },
                          "citizenCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "idType": "PASSPORT",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "expirationDate": "2019-11-29",
                                  "registeredProperty": "",
                                  "primaryInd": false,
                                  "orderSequence": -100000000
                                }
                              }
                            ]
                          },
                          "profession": "Engineer",
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "birthCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "businessTitle": "Dr",
                          "gender": "MALE",
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "customerValue": "a",
                          "creditRating": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold",
                          "birthPlace": "New York",
                          "privateProfile": false,
                          "blacklist": false
                        },
                        "company": {
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "alternateName": "a",
                          "alternateLanguage": "E",
                          "businessLocale": "a",
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "businessTitle": "a",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "commissionCode": "",
                          "creditRating": "",
                          "corporateIdType": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold VIP",
                          "blacklist": false
                        },
                        "profileImage": {
                          "language": "",
                          "imageSet": "a",
                          "sequenceId": -100000000,
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "hotelCode": "",
                          "imageURL": "a",
                          "description": "a",
                          "imageOrder": -100000000,
                          "website": "a"
                        },
                        "addresses": {
                          "addressInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "cityName": "Redwood Shores",
                                "postalCode": "94065",
                                "cityExtension": "a",
                                "county": "a",
                                "state": "CA",
                                "country": {
                                  "name": "United States of America",
                                  "code": "US"
                                },
                                "language": "E",
                                "type": "",
                                "typeDescription": "",
                                "primaryInd": false,
                                "barCode": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "telephone": {
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "phoneNumber": "+1 415 555 0100",
                                "extension": "2",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "lastModifierId": "1234"
                              }
                            }
                          ]
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "email": {
                                "emailAddress": "eg@example.com",
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address",
                                "emailFormat": "HTML",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "lastModifierId": "1232"
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                },
                                "commentTitle": "a",
                                "notificationLocation": "",
                                "type": "",
                                "typeDescription": "a",
                                "internal": false,
                                "confidential": false,
                                "overrideInternal": false,
                                "protectDescription": false,
                                "hotelCode": "",
                                "actionType": "",
                                "actionDate": "0101-01-01",
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                }
                              },
                              "newMembershipId": "",
                              "nameOnCard": "Thomas Smith",
                              "programDescription": "Hotel Plus Membership",
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipClass": "MEM",
                              "earningPreference": "POINTS",
                              "inactive": false,
                              "benefits": [
                                {
                                  "code": "",
                                  "message": "a",
                                  "inactive": false
                                }
                              ],
                              "tierAdministration": "DISABLED",
                              "downgrade": "GRACE",
                              "reIssueNewCard": "PENDING",
                              "excludeFromBatch": false,
                              "upgradeDescription": "a",
                              "downgradeDescription": "a",
                              "rating": "",
                              "membershipEnrollmentCode": "",
                              "memberStatus": "",
                              "currentPoints": -100000000,
                              "pointsLabel": "a",
                              "enrollmentSource": "",
                              "enrollmentResort": "",
                              "preferredCard": false,
                              "membershipId": "",
                              "membershipType": "",
                              "primaryMembershipYn": "a",
                              "membershipIdNo": -100000000,
                              "centralSetup": false,
                              "signupDate": "0101-01-01",
                              "effectiveDate": "0101-01-01",
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "sequence": "",
                              "maxQuantity": -100000000,
                              "availableQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "reservationPreference": false,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "keywords": {
                          "keyword": [
                            {
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": "",
                              "keyword": "a"
                            }
                          ]
                        },
                        "profileIndicators": [
                          {
                            "indicatorName": "a",
                            "count": -100000000
                          }
                        ],
                        "lastStayInfo": {
                          "lastVisit": "0101-01-01",
                          "lastRoom": "",
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "totalStay": -100000000
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "mailingActions": {
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "active": false,
                          "totalRows": -100000000
                        },
                        "privacyInfo": {
                          "marketResearchParticipation": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "infoFromThirdParty": false,
                          "autoEnrollLoyaltyProgram": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "allowEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInThirdParty": false,
                          "optInAutoEnrollmentMember": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInEmail": false
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "a",
                              "value": "a",
                              "altname": "a"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "name": "a",
                              "value": -100000000,
                              "altname": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "name": "a",
                              "value": "0101-01-01",
                              "altname": "a"
                            }
                          ]
                        },
                        "localizationGuestType": "a",
                        "profileType": "GUEST",
                        "statusCode": "ACTIVE",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "protectedBy": "a",
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastModifierId": "1200",
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "hasCommission": false
                      }
                    }
                  ],
                  "totalRows": -100000000
                },
                "links": [
                  {
                    "href": "",
                    "rel": "",
                    "method": "GET",
                    "operationId": "",
                    "templated": false,
                    "targetSchema": "",
                    "title": ""
                  }
                ]
              }
            }
          },
          "204": {
            "description": "ProfileByExtId not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/guests": {
      "post": {
        "summary": "Create a guest, contact or employee profile in OPERA",
        "description": "When a profile doesn't already exist for a guest, use this to create a new profile.  The response will provide the newly created profile's OPERA ID. There are many fields in postProfile defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use postProfile. <p><strong>OperationId:</strong>postGuestProfile</p>",
        "operationId": "postGuestProfile",
        "parameters": [
          {
            "name": "guest",
            "in": "body",
            "required": true,
            "description": "Request object for creation of guest profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guest"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/guests/{guestId}": {
      "get": {
        "summary": "Get guest profile by guest ID",
        "description": "Use this API to retrieve all data stored for a guest Profile, such as their address, phone number, preferences. You must already know the guests Profile ID. If you don’t know the profile ID, first use the API getGuests to find the profile ID. <p><strong>OperationId:</strong>getGuestProfile</p>",
        "operationId": "getGuestProfile",
        "parameters": [
          {
            "name": "guestId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal ID used to find guest/contact/employee profile in OPERA."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "type": "string"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship",
                "WebUserAccount"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching unique guest profile.",
            "schema": {
              "$ref": "#/definitions/guest"
            },
            "examples": {
              "application/json": {
                "profiles": {
                  "profileInfo": [
                    {
                      "profileIdList": [
                        {
                          "type": "",
                          "idContext": "a",
                          "id": "a"
                        }
                      ],
                      "profile": {
                        "customer": {
                          "personName": [
                            {
                              "namePrefix": "a",
                              "givenName": "Thomas",
                              "middleName": "B",
                              "surname": "Smith",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "envelopeGreeting": "",
                              "salutation": "",
                              "nameType": "PRIMARY",
                              "language": "E"
                            }
                          ],
                          "anonymization": {
                            "anonymizationStatus": "REQUESTED",
                            "anonymizationDate": "2019-09-03T14:56:18.21Z"
                          },
                          "citizenCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "idType": "PASSPORT",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "expirationDate": "2019-11-29",
                                  "registeredProperty": "",
                                  "primaryInd": false,
                                  "orderSequence": -100000000
                                }
                              }
                            ]
                          },
                          "profession": "Engineer",
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "birthCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "businessTitle": "Dr",
                          "gender": "MALE",
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "customerValue": "a",
                          "creditRating": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold",
                          "birthPlace": "New York",
                          "privateProfile": false,
                          "blacklist": false
                        },
                        "company": {
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "alternateName": "a",
                          "alternateLanguage": "E",
                          "businessLocale": "a",
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "businessTitle": "a",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "commissionCode": "",
                          "creditRating": "",
                          "corporateIdType": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold VIP",
                          "blacklist": false
                        },
                        "profileImage": {
                          "language": "",
                          "imageSet": "a",
                          "sequenceId": -100000000,
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "hotelCode": "",
                          "imageURL": "a",
                          "description": "a",
                          "imageOrder": -100000000,
                          "website": "a"
                        },
                        "addresses": {
                          "addressInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "cityName": "Redwood Shores",
                                "postalCode": "94065",
                                "cityExtension": "a",
                                "county": "a",
                                "state": "CA",
                                "country": {
                                  "name": "United States of America",
                                  "code": "US"
                                },
                                "language": "E",
                                "type": "",
                                "typeDescription": "",
                                "primaryInd": false,
                                "barCode": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "telephone": {
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "phoneNumber": "+1 415 555 0100",
                                "extension": "2",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "lastModifierId": "1234"
                              }
                            }
                          ]
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "email": {
                                "emailAddress": "eg@example.com",
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address",
                                "emailFormat": "HTML",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "lastModifierId": "1232"
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                },
                                "commentTitle": "a",
                                "notificationLocation": "",
                                "type": "",
                                "typeDescription": "a",
                                "internal": false,
                                "confidential": false,
                                "overrideInternal": false,
                                "protectDescription": false,
                                "hotelCode": "",
                                "actionType": "",
                                "actionDate": "0101-01-01",
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                }
                              },
                              "newMembershipId": "",
                              "nameOnCard": "Thomas Smith",
                              "programDescription": "Hotel Plus Membership",
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipClass": "MEM",
                              "earningPreference": "POINTS",
                              "inactive": false,
                              "benefits": [
                                {
                                  "code": "",
                                  "message": "a",
                                  "inactive": false
                                }
                              ],
                              "tierAdministration": "DISABLED",
                              "downgrade": "GRACE",
                              "reIssueNewCard": "PENDING",
                              "excludeFromBatch": false,
                              "upgradeDescription": "a",
                              "downgradeDescription": "a",
                              "rating": "",
                              "membershipEnrollmentCode": "",
                              "memberStatus": "",
                              "currentPoints": -100000000,
                              "pointsLabel": "a",
                              "enrollmentSource": "",
                              "enrollmentResort": "",
                              "preferredCard": false,
                              "membershipId": "",
                              "membershipType": "",
                              "primaryMembershipYn": "a",
                              "membershipIdNo": -100000000,
                              "centralSetup": false,
                              "signupDate": "0101-01-01",
                              "effectiveDate": "0101-01-01",
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "sequence": "",
                              "maxQuantity": -100000000,
                              "availableQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "reservationPreference": false,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "keywords": {
                          "keyword": [
                            {
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": "",
                              "keyword": "a"
                            }
                          ]
                        },
                        "profileIndicators": [
                          {
                            "indicatorName": "a",
                            "count": -100000000
                          }
                        ],
                        "lastStayInfo": {
                          "lastVisit": "0101-01-01",
                          "lastRoom": "",
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "totalStay": -100000000
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "mailingActions": {
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "active": false,
                          "totalRows": -100000000
                        },
                        "privacyInfo": {
                          "marketResearchParticipation": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "infoFromThirdParty": false,
                          "autoEnrollLoyaltyProgram": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "allowEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInThirdParty": false,
                          "optInAutoEnrollmentMember": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInEmail": false
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "a",
                              "value": "a",
                              "altname": "a"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "name": "a",
                              "value": -100000000,
                              "altname": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "name": "a",
                              "value": "0101-01-01",
                              "altname": "a"
                            }
                          ]
                        },
                        "localizationGuestType": "a",
                        "profileType": "GUEST",
                        "statusCode": "ACTIVE",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "protectedBy": "a",
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastModifierId": "1200",
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "hasCommission": false
                      }
                    }
                  ],
                  "totalRows": -100000000
                },
                "links": [
                  {
                    "href": "",
                    "rel": "",
                    "method": "GET",
                    "operationId": "",
                    "templated": false,
                    "targetSchema": "",
                    "title": ""
                  }
                ]
              }
            }
          },
          "204": {
            "description": "GuestProfile not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/profileListOfValues/availableARAddresses": {
      "get": {
        "summary": "Get available AR Addresses ",
        "description": "Use this API to fetch the available AR Addresses List Of Values for profiles <p><strong>OperationId:</strong>getAvailableARAddresses</p>",
        "operationId": "getAvailableARAddresses",
        "parameters": [
          {
            "name": "profileId",
            "in": "query",
            "required": true,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "The property where the AR Account exists or is being created.",
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "accountIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "The Account Number of the AR Account of the Profile.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch the available Accounts Receivables(AR) Addresses for a Profile.",
            "schema": {
              "$ref": "#/definitions/availableARAddresses"
            }
          },
          "204": {
            "description": "AvailableARAddresses not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileLOV"
        ]
      }
    },
    "/profileListOfValues/availablePreferences": {
      "get": {
        "summary": "Get available preferences",
        "description": "Use this API to fetch the available preferences List Of Values for profiles <p><strong>OperationId:</strong>getAvailablePreferences</p>",
        "operationId": "getAvailablePreferences",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Property for which preferences are to be fetched.",
            "type": "string"
          },
          {
            "name": "maxFetchSize",
            "in": "query",
            "required": false,
            "description": "Maximum records to be fetched.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "A collection of preferences",
            "schema": {
              "$ref": "#/definitions/availablePreferences"
            }
          },
          "204": {
            "description": "AvailablePreferences not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileLOV"
        ]
      }
    },
    "/profiles": {
      "get": {
        "summary": "Search for profile(s)",
        "description": "Use this API when you want to search for a profile. The response will include a list of profiles that exist in OPERA, based on your search criteria.  For example, you want to see if  a profile for Mr David Smith exists - you can search by various criteria, such as first, last name, email.  The response will include a list of any profiles that exist for Mr Davis Smith.  If a profile matches the criteria, and you want to get more details of that profile, proceed to use getProfile with the profileID in the request. In the response TotalResults=1000 means, it returns maximum 1000 matching records even matching records can be equal to or greater than 1000. To get more accurate results, provide more search criteria. <p><strong>OperationId:</strong>getProfiles</p>",
        "operationId": "getProfiles",
        "parameters": [
          {
            "name": "excludeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether to exclude Inactive Profiles, when true indicates that only profiles with active status will be displayed.",
            "type": "boolean"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
            "type": "string"
          },
          {
            "name": "includeHasHierarchyOnly",
            "in": "query",
            "required": false,
            "description": "Include profiles that have one or more relationships in the search.",
            "type": "boolean"
          },
          {
            "name": "includePrimaryOwnersOnly",
            "in": "query",
            "required": false,
            "description": "Include primary owners in the search.",
            "type": "boolean"
          },
          {
            "name": "includePurgeProfiles",
            "in": "query",
            "required": false,
            "description": "Include purged profiles in the search.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "searchType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "When search type is PatronTrackingSystemMemberProfiles, the FetchProfiles will return the Membership Number of the searched Membership Type regardless of primary flag or sequence of the profile memberships.",
            "uniqueItems": true,
            "enum": [
              "PurgeableProfiles",
              "Any",
              "PatronTrackingSystemMemberProfiles"
            ]
          },
          {
            "name": "summaryInfo",
            "in": "query",
            "required": false,
            "description": "When true response will return summary information otherwise detailed information.",
            "type": "boolean"
          },
          {
            "name": "searchString",
            "in": "query",
            "required": false,
            "description": "Search string to be used for super search.",
            "type": "string"
          },
          {
            "name": "includeAnonymized",
            "in": "query",
            "required": false,
            "description": "Indicates whether to include Anonymized Profiles.",
            "type": "boolean"
          },
          {
            "name": "profileType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The types of Profile handled by the web service.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Guest",
                "Agent",
                "Company",
                "Group",
                "Source",
                "Employee",
                "Hotel",
                "Vendor",
                "Contact",
                "Purge",
                "BusinessHeader",
                "BillingAccount",
                "Activity",
                "Potential",
                "Account"
              ]
            },
            "required": false
          },
          {
            "name": "profileIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalReferenceIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystemCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "corporateIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "profileName",
            "in": "query",
            "required": false,
            "description": "Family name, last name or Company Name.",
            "type": "string"
          },
          {
            "name": "givenName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names.",
            "type": "string"
          },
          {
            "name": "incognitoName",
            "in": "query",
            "required": false,
            "description": "Family name, last name or Company Name.",
            "type": "string"
          },
          {
            "name": "incognitoGivenName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names.",
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "type": "string"
          },
          {
            "name": "postalCode",
            "in": "query",
            "required": false,
            "description": "Post Office Code number.",
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "description": "State or Province name (e.g., Texas).",
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "description": "Code for a country or a nationality.",
            "type": "string"
          },
          {
            "name": "streetAddress",
            "in": "query",
            "required": false,
            "description": "First Line of Street Address. For profile search it matches the first Address line.",
            "type": "string"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "description": "Keyword associated to the profile.",
            "type": "string"
          },
          {
            "name": "communication",
            "in": "query",
            "required": false,
            "description": "Any communication method associated to the profile such as phone, fax, eMail id.",
            "type": "string"
          },
          {
            "name": "membership",
            "in": "query",
            "required": false,
            "description": "Membership number associated to the profile.",
            "type": "string"
          },
          {
            "name": "membershipType",
            "in": "query",
            "required": false,
            "description": "Member Type of searching profile.",
            "type": "string"
          },
          {
            "name": "ownerCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "membershipLevel",
            "in": "query",
            "required": false,
            "description": "Membership level associated to the profile.",
            "type": "string"
          },
          {
            "name": "aRNumber",
            "in": "query",
            "required": false,
            "description": "Account Receivable associated to the profile.",
            "type": "string"
          },
          {
            "name": "taxID",
            "in": "query",
            "required": false,
            "description": "Tax ID associated to the profile",
            "type": "string"
          },
          {
            "name": "businessSegment",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Business/Market Segment associated to the profile.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "accountsReceivables",
            "in": "query",
            "required": false,
            "description": "When true indicates that only profiles with AR account fetched.",
            "type": "boolean"
          },
          {
            "name": "corporateProfiles",
            "in": "query",
            "required": false,
            "description": "When true indicates that only profiles with client id are searched for.",
            "type": "boolean"
          },
          {
            "name": "excludeIncompleteProfiles",
            "in": "query",
            "required": false,
            "description": "When true indicates that only profiles with an Address Line 1 and Country or at least one Communications Type will be displayed.",
            "type": "boolean"
          },
          {
            "name": "negotiatedRates",
            "in": "query",
            "required": false,
            "description": "When true indicates that this option has to be included in advanced search.",
            "type": "boolean"
          },
          {
            "name": "relatedProfileExcludeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether to exclude Inactive Profiles, when true indicates that only profiles with active status will be displayed.",
            "type": "boolean"
          },
          {
            "name": "realtedProfileIncludeHasHierarchyOnly",
            "in": "query",
            "required": false,
            "description": "Include profiles that have one or more relationships in the search.",
            "type": "boolean"
          },
          {
            "name": "relatedProfileNegotiatedRates",
            "in": "query",
            "required": false,
            "description": "When true indicates that this option has to be included in advanced search.",
            "type": "boolean"
          },
          {
            "name": "relatedProfileType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The types of Profile handled by the web service.",
            "uniqueItems": true,
            "enum": [
              "Guest",
              "Agent",
              "Company",
              "Group",
              "Source",
              "Employee",
              "Hotel",
              "Vendor",
              "Contact",
              "Purge",
              "BusinessHeader",
              "BillingAccount",
              "Activity",
              "Potential",
              "Account"
            ]
          },
          {
            "name": "relatedProfileName",
            "in": "query",
            "required": false,
            "description": "Family name, last name or Company Name.",
            "type": "string"
          },
          {
            "name": "protectedProfiles",
            "in": "query",
            "required": false,
            "description": "Indicates whether to exclude Protected Profiles.",
            "type": "boolean"
          },
          {
            "name": "excludedProfilesId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idExtension",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "excludedProfilesIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "excludedProfilesIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "identificationNo",
            "in": "query",
            "required": false,
            "description": "Any identification number associated with the profile such as Passport Number, StateID.",
            "type": "string"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Address",
                "Communication",
                "NegotiatedRate",
                "GdsNegotiatedRate",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "HistoryReservation",
                "FutureReservation",
                "Relationship",
                "Correspondence",
                "Routing",
                "Indicators",
                "Profile",
                "WebUserAccount",
                "SalesInfo",
                "ECertificate",
                "Subscriptions",
                "PrimaryAccountInfo",
                "DeliveryMethods",
                "RoomOwnership"
              ]
            },
            "required": false
          },
          {
            "name": "allowedAction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "NameChange",
                "TaxIDChange",
                "EnrollToPrimaryMembership"
              ]
            },
            "required": false
          },
          {
            "name": "vipCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "predefinedFilterId",
            "in": "query",
            "required": false,
            "description": "Unique ID of the Filter used to filter profiles.",
            "type": "number"
          },
          {
            "name": "predefinedFilterCode",
            "in": "query",
            "required": false,
            "description": "Filter code.",
            "type": "string"
          },
          {
            "name": "prioritieCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching profiles. This object contains profile primary details,profile summary details,master info list containing code and description used as lookup for description.",
            "schema": {
              "$ref": "#/definitions/profileSummaries"
            }
          },
          "204": {
            "description": "Profiles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      },
      "post": {
        "summary": "Create a profile",
        "description": "When a profile doesn't already exist for a guest, use this to create a new profile. The response will provide the newly created profile's OPERA ID. There are many fields in postProfile defined by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully to use postProfile. <p><strong>OperationId:</strong>postProfile</p>",
        "operationId": "postProfile",
        "parameters": [
          {
            "name": "profile",
            "in": "body",
            "required": true,
            "description": "Request object for creation of profiles. This object contains profile details with unique identifiers for each profile. The standard optional Opera Context element is also included.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profile"
                },
                {
                  "example": {
                    "profileIdList": [
                      {
                        "type": "Profile",
                        "idContext": "OPERA",
                        "id": "3149001"
                      }
                    ],
                    "profileDetails": {
                      "customer": {
                        "personName": [
                          {
                            "givenName": "William",
                            "middleName": "D",
                            "surname": "Smith",
                            "nameSuffix": "10",
                            "nameTitle": "Mr.....",
                            "envelopeGreeting": "Hello Mr. Smith",
                            "salutation": "Mr. Smith",
                            "nameType": "PRIMARY",
                            "language": "E"
                          }
                        ],
                        "citizenCountry": {
                          "value": "United States of America",
                          "code": "USA"
                        },
                        "identifications": {
                          "identificationInfo": [
                            {
                              "identification": {
                                "idType": "PASSPORT",
                                "idNumber": "C03005988",
                                "idNumberMasked": "C030059XX",
                                "issuedCountry": "USA",
                                "issuedDate": "2009-11-30",
                                "issuedPlace": "New York",
                                "expirationDate": "2019-11-29",
                                "registeredProperty": "HOTEL1",
                                "primaryInd": true
                              }
                            }
                          ]
                        },
                        "language": "E",
                        "nationality": "US",
                        "nationalityDescription": "USA",
                        "vipStatus": "006",
                        "vipDescription": "VVIP: Important person (Corporate office only)",
                        "privateProfile": false
                      },
                      "company": {
                        "companyName": "Oracle America Inc",
                        "companyName2": "Oracle Group Companies",
                        "businessTitle": "Developer",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "decimalPlaces": -100000000,
                        "language": "E",
                        "nationality": "USA",
                        "nationalityDescription": "United States",
                        "commissionCode": "",
                        "creditRating": "",
                        "corporateIdType": "",
                        "vipStatus": "006",
                        "vipDescription": "Important",
                        "blacklist": false
                      },
                      "addresses": {
                        "addressInfo": [
                          {
                            "address": {
                              "addressLine": [
                                "500 Oracle Parkway"
                              ],
                              "cityName": "Redwood Shores",
                              "postalCode": "94065",
                              "cityExtension": "a",
                              "county": "a",
                              "state": "CA",
                              "country": {
                                "value": "USA",
                                "code": "US"
                              },
                              "language": "E",
                              "type": "Office",
                              "typeDescription": "Office address use",
                              "primaryInd": false,
                              "barCode": "",
                              "createDateTime": "2019-09-18T21:09:36.498Z",
                              "creatorId": "12883",
                              "lastModifyDateTime": "2019-09-18T21:09:36.498Z",
                              "lastModifierId": "12000"
                            }
                          }
                        ]
                      },
                      "territory": "North America",
                      "telephones": {
                        "telephoneInfo": [
                          {
                            "telephone": {
                              "phoneTechType": "PHONE",
                              "phoneUseTypeDescription": "office",
                              "phoneNumber": "+1 415 555 0100",
                              "extension": "x25",
                              "primaryInd": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-18T21:09:36.499Z",
                              "creatorId": "12883",
                              "lastModifyDateTime": "2019-09-18T21:09:36.499Z",
                              "lastModifierId": "12883"
                            }
                          }
                        ]
                      },
                      "emails": {
                        "emailInfo": [
                          {
                            "email": {
                              "emailAddress": "eg@example.com",
                              "type": "EMAIL",
                              "typeDescription": "Email Address",
                              "emailFormat": "EMAIL",
                              "primaryInd": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-17T18:18:32.415Z",
                              "creatorId": "12883",
                              "lastModifyDateTime": "2019-09-17T18:18:32.416Z",
                              "lastModifierId": "12883"
                            }
                          }
                        ]
                      },
                      "comments": {
                        "commentInfo": [
                          {
                            "comment": {
                              "text": {
                                "value": "Please provide discount.",
                                "language": "E"
                              },
                              "commentTitle": "Discount",
                              "type": "GEN",
                              "typeDescription": "Comments for discount.",
                              "internal": false,
                              "confidential": false,
                              "overrideInternal": false
                            }
                          }
                        ]
                      },
                      "profileAccessType": {
                        "croCode": "HOTEL1",
                        "sharedLevel": "CRO"
                      },
                      "profileRestrictions": {
                        "restricted": false
                      },
                      "statusCode": "ACTIVE",
                      "registeredProperty": "HOTEL1",
                      "createDateTime": "2019-09-17 08:10:28.0",
                      "creatorId": "12883",
                      "lastModifyDateTime": "2019-09-17 08:23:05.0",
                      "lastModifierId": "12883",
                      "markForHistory": false
                    },
                    "links": [
                      {
                        "href": "http://hotelCompany.example.com/operarest/opera/crm/v2/guests",
                        "rel": "guestProfile",
                        "templated": false,
                        "method": "POST",
                        "operationId": "postGuestProfile"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/profiles/{profileId}": {
      "get": {
        "summary": "Get profile by ID",
        "description": "You would use this to retrieve any type of profile, whether it is a company, travel agent, individual, source or group <p><strong>OperationId:</strong>getProfile</p>",
        "operationId": "getProfile",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA internal profile ID which is used to find any type of profile from OPERA. This ID is a primary identification of a profile in OPERA."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "type": "string"
          },
          {
            "name": "logViewProfile",
            "in": "query",
            "required": false,
            "description": "This element tells when the view profile should be logged.",
            "type": "boolean"
          },
          {
            "name": "showInactiveRoomOwners",
            "in": "query",
            "required": false,
            "description": "Flag to show inactive Room Owners.",
            "type": "boolean"
          },
          {
            "name": "markAsRecentlyAccessed",
            "in": "query",
            "required": false,
            "description": "Providing this flag marks the profile as recently accessed.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Ownership information associated with the profile.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Address",
                "Communication",
                "Comment",
                "Membership",
                "Preference",
                "Keyword",
                "Correspondence",
                "Profile",
                "Indicators",
                "SalesInfo",
                "Relationship",
                "Subscriptions",
                "DeliveryMethods",
                "GdsNegotiatedRate",
                "NegotiatedRate",
                "HistoryReservation",
                "FutureReservation",
                "WebUserAccount"
              ]
            },
            "required": false
          },
          {
            "name": "instructionParameterType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type enumerating the different parameters accepted by a profile Instructions. Parameter names have the name of the instruction expecting it, and the parameter name itself.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "NegotiatedRateShowInactive",
                "NegotiatedRateResort",
                "NegotiatedRateMaxFetchCount",
                "NegotiatedRateCode",
                "GdsNegotiatedRateShowInactive",
                "PreferencesShowInactive",
                "ResortForRoutingInstructions",
                "RelationshipPrimaryProfile",
                "AddressPrimaryOnly",
                "CommunicationPrimaryOnly",
                "DeliveryMethodsHotelCode"
              ]
            },
            "required": false
          },
          {
            "name": "value",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of Profile Instruction Parameter",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "allowedAction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "NameChange",
                "TaxIDChange",
                "EnrollToPrimaryMembership"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching profile.",
            "schema": {
              "$ref": "#/definitions/profile"
            },
            "examples": {
              "application/json": {
                "profiles": {
                  "profileInfo": [
                    {
                      "profileIdList": [
                        {
                          "type": "",
                          "idContext": "a",
                          "id": "a"
                        }
                      ],
                      "profile": {
                        "customer": {
                          "personName": [
                            {
                              "namePrefix": "a",
                              "givenName": "Thomas",
                              "middleName": "B",
                              "surname": "Smith",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "envelopeGreeting": "",
                              "salutation": "",
                              "nameType": "PRIMARY",
                              "language": "E"
                            }
                          ],
                          "anonymization": {
                            "anonymizationStatus": "REQUESTED",
                            "anonymizationDate": "2019-09-03T14:56:18.21Z"
                          },
                          "citizenCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "idType": "PASSPORT",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "expirationDate": "2019-11-29",
                                  "registeredProperty": "",
                                  "primaryInd": false,
                                  "orderSequence": -100000000
                                }
                              }
                            ]
                          },
                          "profession": "Engineer",
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "birthCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "businessTitle": "Dr",
                          "gender": "MALE",
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "customerValue": "a",
                          "creditRating": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold",
                          "birthPlace": "New York",
                          "privateProfile": false,
                          "blacklist": false
                        },
                        "company": {
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "alternateName": "a",
                          "alternateLanguage": "E",
                          "businessLocale": "a",
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "businessTitle": "a",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "commissionCode": "",
                          "creditRating": "",
                          "corporateIdType": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold VIP",
                          "blacklist": false
                        },
                        "profileImage": {
                          "language": "",
                          "imageSet": "a",
                          "sequenceId": -100000000,
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "hotelCode": "",
                          "imageURL": "a",
                          "description": "a",
                          "imageOrder": -100000000,
                          "website": "a"
                        },
                        "addresses": {
                          "addressInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "cityName": "Redwood Shores",
                                "postalCode": "94065",
                                "cityExtension": "a",
                                "county": "a",
                                "state": "CA",
                                "country": {
                                  "name": "United States of America",
                                  "code": "US"
                                },
                                "language": "E",
                                "type": "",
                                "typeDescription": "",
                                "primaryInd": false,
                                "barCode": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "telephone": {
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "phoneNumber": "+1 415 555 0100",
                                "extension": "2",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "lastModifierId": "1234"
                              }
                            }
                          ]
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "email": {
                                "emailAddress": "eg@example.com",
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address",
                                "emailFormat": "HTML",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "lastModifierId": "1232"
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                },
                                "commentTitle": "a",
                                "notificationLocation": "",
                                "type": "",
                                "typeDescription": "a",
                                "internal": false,
                                "confidential": false,
                                "overrideInternal": false,
                                "protectDescription": false,
                                "hotelCode": "",
                                "actionType": "",
                                "actionDate": "0101-01-01",
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                }
                              },
                              "newMembershipId": "",
                              "nameOnCard": "Thomas Smith",
                              "programDescription": "Hotel Plus Membership",
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipClass": "MEM",
                              "earningPreference": "POINTS",
                              "inactive": false,
                              "benefits": [
                                {
                                  "code": "",
                                  "message": "a",
                                  "inactive": false
                                }
                              ],
                              "tierAdministration": "DISABLED",
                              "downgrade": "GRACE",
                              "reIssueNewCard": "PENDING",
                              "excludeFromBatch": false,
                              "upgradeDescription": "a",
                              "downgradeDescription": "a",
                              "rating": "",
                              "membershipEnrollmentCode": "",
                              "memberStatus": "",
                              "currentPoints": -100000000,
                              "pointsLabel": "a",
                              "enrollmentSource": "",
                              "enrollmentResort": "",
                              "preferredCard": false,
                              "membershipId": "",
                              "membershipType": "",
                              "primaryMembershipYn": "a",
                              "membershipIdNo": -100000000,
                              "centralSetup": false,
                              "signupDate": "0101-01-01",
                              "effectiveDate": "0101-01-01",
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "sequence": "",
                              "maxQuantity": -100000000,
                              "availableQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "reservationPreference": false,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "keywords": {
                          "keyword": [
                            {
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": "",
                              "keyword": "a"
                            }
                          ]
                        },
                        "profileIndicators": [
                          {
                            "indicatorName": "a",
                            "count": -100000000
                          }
                        ],
                        "lastStayInfo": {
                          "lastVisit": "0101-01-01",
                          "lastRoom": "",
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "totalStay": -100000000
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "mailingActions": {
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "active": false,
                          "totalRows": -100000000
                        },
                        "privacyInfo": {
                          "marketResearchParticipation": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "infoFromThirdParty": false,
                          "autoEnrollLoyaltyProgram": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "allowEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInThirdParty": false,
                          "optInAutoEnrollmentMember": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInEmail": false
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "a",
                              "value": "a",
                              "altname": "a"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "name": "a",
                              "value": -100000000,
                              "altname": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "name": "a",
                              "value": "0101-01-01",
                              "altname": "a"
                            }
                          ]
                        },
                        "localizationGuestType": "a",
                        "profileType": "GUEST",
                        "statusCode": "ACTIVE",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "protectedBy": "a",
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastModifierId": "1200",
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "hasCommission": false
                      }
                    }
                  ],
                  "totalRows": -100000000
                },
                "links": [
                  {
                    "href": "",
                    "rel": "",
                    "method": "GET",
                    "operationId": "",
                    "templated": false,
                    "targetSchema": "",
                    "title": ""
                  }
                ]
              }
            }
          },
          "204": {
            "description": "Profile not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      },
      "put": {
        "summary": "Update a profile by ID",
        "description": "Use this to update a guests details on their profile.  You will need to know the OPERA Profile ID to use this API, and you will also need to know the List of Values for profile fields, such as AddressType, PhoneType, Title.  <p><strong>OperationId:</strong>putProfile</p>",
        "operationId": "putProfile",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA internal profile ID which is used to uniquely identify the profile in OPERA. This ID is a primary identification of a profile in OPERA."
          },
          {
            "name": "profile",
            "in": "body",
            "required": true,
            "description": "Request object for change/modification of profile details. This object contains modified profile details with unique identifiers for each profile. The standard optional Opera Context element is also included.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profile"
                },
                {
                  "example": {
                    "profileIdList": [
                      {
                        "type": "Profile",
                        "idContext": "OPERA",
                        "id": "3149001"
                      }
                    ],
                    "profileDetails": {
                      "customer": {
                        "personName": [
                          {
                            "givenName": "William",
                            "middleName": "D",
                            "surname": "Smith",
                            "nameSuffix": "10",
                            "nameTitle": "Mr.....",
                            "envelopeGreeting": "Hello Mr. Smith",
                            "salutation": "Mr. Smith",
                            "nameType": "PRIMARY",
                            "language": "E"
                          }
                        ],
                        "citizenCountry": {
                          "value": "United States of America",
                          "code": "USA"
                        },
                        "identifications": {
                          "identificationInfo": [
                            {
                              "identification": {
                                "idType": "PASSPORT",
                                "idNumber": "C03005988",
                                "idNumberMasked": "C030059XX",
                                "issuedCountry": "USA",
                                "issuedDate": "2009-11-30",
                                "issuedPlace": "New York",
                                "expirationDate": "2019-11-29",
                                "registeredProperty": "HOTEL1",
                                "primaryInd": true
                              }
                            }
                          ]
                        },
                        "language": "E",
                        "nationality": "US",
                        "nationalityDescription": "USA",
                        "vipStatus": "006",
                        "vipDescription": "VVIP: VV important person",
                        "privateProfile": false
                      },
                      "company": {
                        "companyName": "Oracle America Inc",
                        "companyName2": "Oracle Group Companies",
                        "businessTitle": "Developer",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "decimalPlaces": -100000000,
                        "language": "E",
                        "nationality": "USA",
                        "nationalityDescription": "United States",
                        "commissionCode": "",
                        "creditRating": "",
                        "corporateIdType": "",
                        "vipStatus": "006",
                        "vipDescription": "Important",
                        "blacklist": false
                      },
                      "addresses": {
                        "addressInfo": [
                          {
                            "address": {
                              "addressLine": [
                                "500 Oracle Parkway"
                              ],
                              "cityName": "Redwood Shores",
                              "postalCode": "94065",
                              "cityExtension": "a",
                              "county": "a",
                              "state": "CA",
                              "country": {
                                "value": "USA",
                                "code": "US"
                              },
                              "language": "E",
                              "type": "Office",
                              "typeDescription": "This is office address.",
                              "primaryInd": false,
                              "barCode": "",
                              "createDateTime": "2019-09-18T21:09:36.498Z",
                              "creatorId": "12883",
                              "lastModifyDateTime": "2019-09-18T21:09:36.498Z",
                              "lastModifierId": "12883"
                            }
                          }
                        ]
                      },
                      "territory": "North America",
                      "telephones": {
                        "telephoneInfo": [
                          {
                            "telephone": {
                              "phoneTechType": "PHONE",
                              "phoneUseTypeDescription": "office",
                              "phoneNumber": "+1 415 555 0100",
                              "extension": "x25",
                              "primaryInd": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-18T21:09:36.499Z",
                              "creatorId": "12883",
                              "lastModifyDateTime": "2019-09-18T21:09:36.499Z",
                              "lastModifierId": "12883"
                            }
                          }
                        ]
                      },
                      "emails": {
                        "emailInfo": [
                          {
                            "email": {
                              "emailAddress": "eg@example.com",
                              "type": "EMAIL",
                              "typeDescription": "Email Address",
                              "emailFormat": "EMAIL",
                              "primaryInd": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-17T18:18:32.415Z",
                              "creatorId": "12883",
                              "lastModifyDateTime": "2019-09-17T18:18:32.416Z",
                              "lastModifierId": "12883"
                            }
                          }
                        ]
                      },
                      "comments": {
                        "commentInfo": [
                          {
                            "comment": {
                              "text": {
                                "value": "Please add comments here.",
                                "language": "E"
                              },
                              "commentTitle": "Discount",
                              "type": "GEN",
                              "typeDescription": "Comments for discount.",
                              "internal": false,
                              "confidential": false,
                              "overrideInternal": false
                            }
                          }
                        ]
                      },
                      "profileAccessType": {
                        "croCode": "HOTEL1",
                        "sharedLevel": "CRO"
                      },
                      "profileRestrictions": {
                        "restricted": false
                      },
                      "statusCode": "ACTIVE",
                      "registeredProperty": "HOTEL1",
                      "createDateTime": "2019-09-17 08:10:28.0",
                      "creatorId": "12883",
                      "lastModifyDateTime": "2019-09-17 08:23:05.0",
                      "lastModifierId": "12883",
                      "markForHistory": false
                    },
                    "links": [
                      {
                        "href": "http://hotelCompany.example.com/operarest/opera/crm/v2/guests",
                        "rel": "guestProfile",
                        "templated": false,
                        "method": "POST",
                        "operationId": "postGuestProfile"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for change/modification of profile details. This object contains the profile details with unique identifiers for each profile. Also Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/profile"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      },
      "delete": {
        "summary": "Forget or delete a profile by ID",
        "description": "Use deleteProfile to inactivate and remove a profile from OPERA. The profile will stay in the Database, until a nightly purge process is run to remove profile details from the OPERA database. <p><strong>OperationId:</strong>deleteProfile</p>",
        "operationId": "deleteProfile",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA internal profile ID which is used to uniquely identify the profile in OPERA. This ID is a primary identification of a profile in OPERA."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/profiles/{profileId}/emails": {
      "post": {
        "summary": "Create an Email.",
        "description": "Use this API to create a new Email in OPERA.  You would need to know the Profile Id such as Contact or Account. <p><strong>OperationId:</strong>storeEmail</p>",
        "operationId": "storeEmail",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Profile ID linked to an Email."
          },
          {
            "name": "emailMessageType",
            "in": "body",
            "required": true,
            "description": "Request object for storing an email.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/emailMessageType"
                },
                {
                  "example": {
                    "blockId": "13701",
                    "fromAddress": "eg@example.com",
                    "toAddress": [
                      "Example1@email.com"
                    ],
                    "subject": "First Email Subject",
                    "emailBody": "base 64 encoded email body should be placed here",
                    "messageId": "12345",
                    "emailReceiveDate": "2020-07-15T17:16:47.617Z",
                    "hasAttachment": true
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/profiles/{profileId}/relationships": {
      "get": {
        "summary": "FetchProfileRelationships method provides the ability to retrieve a profile relationships for a profile based on the unique internal profile ID specified.",
        "description": " <p><strong>OperationId:</strong>getProfileRelationships</p>",
        "operationId": "getProfileRelationships",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "relationshipPrimaryProfile",
            "in": "query",
            "required": false,
            "description": "Type of Profile to be fetched from OPERA.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching profile relationships.",
            "schema": {
              "$ref": "#/definitions/profileRelationships"
            },
            "examples": {
              "application/json": {
                "relationships": {
                  "relationship": [
                    {
                      "relationshipProfile": {
                        "customerName": "Smith",
                        "telephoneNumber": "+10409000000",
                        "address": {
                          "addressLine": [
                            "500 Oracle Parkway"
                          ],
                          "city": "Redwood Shores",
                          "postalCode": "94065",
                          "state": "CA",
                          "country": "US"
                        },
                        "emailAddress": "example@test.com",
                        "ownerCode": "ALL",
                        "profileIdList": [
                          {
                            "id": "291397",
                            "type": "Profile"
                          },
                          {
                            "id": "212315",
                            "type": "CorporateId"
                          }
                        ],
                        "primary": true,
                        "profileStatus": "Active",
                        "primaryOwnerCode": true,
                        "profileType": "Guest"
                      },
                      "relationshipID": "144096",
                      "sourceRelation": "FAMILY MEMBER",
                      "sourceRelationDescription": "FAMILY MEMBER",
                      "targetRelation": "FAMILY HEAD",
                      "targetRelationDescription": "FAMILY HEAD"
                    }
                  ]
                },
                "links": []
              }
            }
          },
          "204": {
            "description": "ProfileRelationships not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/profiles/{profileId}/stayHistory": {
      "get": {
        "summary": "FetchStayHistory method provides stay history and future reservations of a profile based on the unique internal ID specified.",
        "description": " <p><strong>OperationId:</strong>getStayHistory</p>",
        "operationId": "getStayHistory",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code used to filter hotel specific information regarding the profile.",
            "type": "string"
          },
          {
            "name": "includePurgeProfiles",
            "in": "query",
            "required": false,
            "description": "Providing this flag includes purged profiles in the result.",
            "type": "boolean"
          },
          {
            "name": "markAsRecentlyAccessed",
            "in": "query",
            "required": false,
            "description": "Providing this flag marks the profile as recently accessed.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates maximum number of records a Web Service should return.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for instructions that can be used in requests for partial operations to fetch past and future reservation.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "HistoryReservation",
                "FutureReservation"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for showing stay history and future reservations of specific profile.",
            "schema": {
              "$ref": "#/definitions/profileStayHistory"
            },
            "examples": {
              "application/json": {
                "profileStayDetails": {
                  "reservationInfoList": {
                    "historyList": {
                      "reservationInfo": [
                        {
                          "reservationIdList": [
                            {
                              "id": "850348",
                              "type": "Reservation"
                            },
                            {
                              "id": "1258752",
                              "type": "Confirmation"
                            }
                          ],
                          "roomStay": {
                            "arrivalDate": "2020-07-02",
                            "departureDate": "2020-07-04",
                            "roomType": "DLXQ",
                            "ratePlanCode": "RACK",
                            "rateAmount": {
                              "amount": "100"
                            },
                            "rateSuppressed": false
                          },
                          "attachedProfiles": [],
                          "hotelId": "HOTEL1",
                          "reservationStatus": "NoShow",
                          "computedReservationStatus": "NoShow"
                        }
                      ],
                      "hasMore": false,
                      "totalResults": "1"
                    },
                    "futureList": {
                      "hasMore": false,
                      "totalResults": "0"
                    }
                  }
                },
                "links": []
              }
            }
          },
          "204": {
            "description": "StayHistory not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/profiles/{sourceProfileId}/relationships/{targetProfileId}": {
      "post": {
        "summary": "CreateProfileRelationship method provides the ability to create profile relationship based on the request criteria of SourceProfileID,TargetProfileID and SourceRelationType specified.",
        "description": " <p><strong>OperationId:</strong>postProfileRelationship</p>",
        "operationId": "postProfileRelationship",
        "parameters": [
          {
            "name": "targetProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "sourceProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "profileRelationship",
            "in": "body",
            "required": true,
            "description": "Request object for creating profile relationship.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileRelationship"
                },
                {
                  "example": {
                    "relationship": {
                      "primary": "true",
                      "statusCode": "Active",
                      "targetProfileType": "Guest",
                      "sourceRelation": "FAMILY MEMBER",
                      "sourceRelationDescription": "FAMILY MEMBER",
                      "targetRelation": "FAMILY HEAD",
                      "targetRelationDescription": "FAMILY HEAD",
                      "profileType": "Guest"
                    }
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      },
      "put": {
        "summary": "ChangeProfileRelationship method provides the ability to update(delete and add) profile relationship based on the request criteria of SourceProfileID , TargetProfileID, To Be ChangedProfileID and SourceProfileRelationType specified.",
        "description": " <p><strong>OperationId:</strong>putProfileRelationship</p>",
        "operationId": "putProfileRelationship",
        "parameters": [
          {
            "name": "targetProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "sourceProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "profileRelationshipToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing profile relationship.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileRelationshipToBeChanged"
                },
                {
                  "example": {
                    "relationship": {
                      "changeRelationship": {
                        "changeProfileID": {
                          "id": "3261507",
                          "type": "Guest"
                        },
                        "sourceRelation": "FRIEND1",
                        "sourceRelationDescription": "Friends",
                        "targetRelation": "FRIEND2",
                        "targetRelationDescription": "Friends 2"
                      },
                      "primary": true,
                      "statusCode": "Active",
                      "targetProfileType": "Guest",
                      "sourceRelation": "EMPLOYEE",
                      "sourceRelationDescription": "EMPLOYEE",
                      "targetRelation": "EMPLOYER",
                      "targetRelationDescription": "EMPLOYER",
                      "relationshipID": "28026",
                      "profileType": "Guest"
                    }
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      },
      "delete": {
        "summary": "DeleteProfileRelationship method provides the ability to delete profile relationship based on the request criteria of SourceProfileID,TargetProfileID and SourceRelationType specified.",
        "description": " <p><strong>OperationId:</strong>removeProfileRelationship</p>",
        "operationId": "removeProfileRelationship",
        "parameters": [
          {
            "name": "targetProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "sourceProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "sourceRelation",
            "in": "query",
            "required": true,
            "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
            "type": "string"
          },
          {
            "name": "targetRelation",
            "in": "query",
            "required": true,
            "description": "Indicates the type of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
            "type": "string"
          },
          {
            "name": "primary",
            "in": "query",
            "required": false,
            "description": "Indicates if this relationship is the primary relationship.",
            "type": "boolean"
          },
          {
            "name": "sourceRelationDescription",
            "in": "query",
            "required": false,
            "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).This needs to be passed if the attribute primary is sent as true.",
            "type": "string"
          },
          {
            "name": "targetRelationDescription",
            "in": "query",
            "required": false,
            "description": "Displays the description of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/profiles/{survivorProfileId}/merges": {
      "post": {
        "summary": "Merge two profiles by ID",
        "description": "When you need to merge 2 guest profiles into 1 profile, use this API. <p><strong>OperationId:</strong>mergeProfiles</p>",
        "operationId": "mergeProfiles",
        "parameters": [
          {
            "name": "survivorProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Original Profile ID to which profiles will be merged in OPERA."
          },
          {
            "name": "profileToBeMerged",
            "in": "body",
            "required": true,
            "description": "Request object for merging profiles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileToBeMerged"
                },
                {
                  "example": {
                    "victimProfileId": {
                      "id": "1087330"
                    }
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "company": {
      "type": "object",
      "description": "Request object for creation of company/agent/group/source profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
      "properties": {
        "companyIdList": {
          "description": "Unique identifiers of Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as ID.",
          "$ref": "#/definitions/profileIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Profile.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "companyDetails": {
          "description": "Provides detailed information of a company profile.",
          "$ref": "#/definitions/companyProfileType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "externalReferencesType": {
      "type": "array",
      "description": "This type contains unique information of external reference.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType": {
      "type": "object",
      "description": "This type contains unique information of external reference.",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "companyProfileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "eCertificates": {
          "description": "E-Certificate associated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Type of profile such as Agent, Company, Group and Source.",
          "$ref": "#/definitions/companyProfileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "iATAInfoType": {
      "type": "object",
      "description": "IATA Information of the profile.",
      "properties": {
        "iATACompany": {
          "description": "IATA Company Detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "iATAConsortia": {
          "description": "IATA Consortia.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAValidationResult": {
          "description": "IATA Validation Result.",
          "type": "boolean"
        }
      }
    },
    "imageSetType": {
      "type": "object",
      "description": "Represents on image set record.",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageStyleType": {
      "type": "string",
      "description": "An enumeration of image styles.",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "uRLInfoType": {
      "type": "object",
      "description": "Web site address.",
      "properties": {
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "uRLType": {
      "type": "object",
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "profileMembershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "preferenceTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "preferenceType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "preferenceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        }
      }
    },
    "keywordType": {
      "type": "object",
      "properties": {
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "type": {
          "description": "The type of keyword",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "keywordDetailType": {
      "type": "object",
      "properties": {
        "newKeyword": {
          "description": "The new keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "negotiatedType": {
      "type": "object",
      "description": "This holds a list of NegotiatedInfoType.",
      "properties": {
        "negotiatedInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedInfoType"
          }
        },
        "hotelId": {
          "description": "Hotel code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate plan code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "negotiatedInfoType": {
      "type": "object",
      "description": "This provides information for a profile negotiated rate.",
      "properties": {
        "corporateAgreementId": {
          "description": "The master identifier for multiple offices/locations under the same company profile. This is optional",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "comissionCode": {
          "description": "Informational purposes only in numeric format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "inactive": {
          "description": "Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "gdsNegotiatedType": {
      "type": "object",
      "description": "This holds a list of GdsNegotiatedInfoType.",
      "properties": {
        "gdsNegotiatedInfoList": {
          "description": "List of channel negotiated rates for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/gdsNegotiatedInfoType"
          }
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "gdsNegotiatedInfoType": {
      "type": "object",
      "description": "This provides information for a channel negotiated rate.",
      "properties": {
        "accessCode": {
          "description": "The GDS negotiated rate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "inactive": {
          "description": "The GDS Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "relationshipInfoType": {
      "type": "object",
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "changeRelationsType": {
      "type": "object",
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "customerType": {
      "type": "object",
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties": {
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "legalCompany": {
          "description": "Name Of the company the individual is associated with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "identificationInfoType": {
      "type": "object",
      "description": "Information on the identification of the customer.",
      "properties": {
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "identificationType": {
      "type": "object",
      "description": "Identification information of the customer.",
      "properties": {
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "alienInfoType": {
      "type": "object",
      "description": "immigration/visa information of a foreign person.",
      "properties": {
        "alienRegistrationNo": {
          "description": "Alien Registration Number.",
          "type": "string"
        },
        "immigrationStatus": {
          "description": "Immigration Status on an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaValidityType": {
          "description": "Visa Type of an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "companyInfoType": {
      "type": "object",
      "description": "Company Information of the Profile.",
      "properties": {
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "ownerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "lastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details for the profile",
      "properties": {
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "profileAccessType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "Indicates the Chain code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "croCode": {
          "description": "Indicates the CRO code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "hotelId": {
          "description": "Indicates the Hotel code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sharedLevel": {
          "description": "Indicates whether the profile is shared at the following levels : global/property/CRO",
          "$ref": "#/definitions/profileSharedLevelType"
        }
      }
    },
    "profileSharedLevelType": {
      "type": "string",
      "description": "Simple types for Shared level.",
      "enum": [
        "Global",
        "Property",
        "Cro"
      ]
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "mailingActionsType": {
      "type": "object",
      "description": "Defines mailing action list for the profile.",
      "properties": {
        "mailingAction": {
          "description": "Defines mailing action code and description.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "active": {
          "description": "When true indicates that profile has subscribed to the mailing list.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "privacyInfoType": {
      "type": "object",
      "description": "Defines Privacy related information for the profile.",
      "properties": {
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringType": {
      "type": "object",
      "description": "Contains cashiering related details for the profile",
      "properties": {
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "directBillingType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileCommissionType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "commissionPaymentMethods": {
      "type": "string",
      "description": "Check",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "webUserAccountsType": {
      "type": "array",
      "description": "Web User Accounts List.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/webUserAccountType"
      }
    },
    "webUserAccountType": {
      "type": "object",
      "description": "Web User Account of the guest.",
      "properties": {
        "securityQuestion": {
          "description": "Security Question and its Code associated with the account to verify the user.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "securityAnswer": {
          "description": "Answer to the Security Question.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "comments": {
          "description": "Comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "history": {
          "description": "Web User Account History.",
          "$ref": "#/definitions/webUserHistoryType"
        },
        "newLoginName": {
          "description": "New Login Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "newPassword": {
          "description": "Login Password.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoGeneratePassword": {
          "description": "A flag which determines if the password is auto generated.",
          "type": "boolean"
        },
        "loginName": {
          "description": "Login Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "domainCode": {
          "description": "Domain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "locked": {
          "description": "Boolean flag that indicates whether the web account is locked or not.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Boolean flag that indicates whether the web account is inactive or not.",
          "type": "boolean"
        }
      }
    },
    "webUserHistoryType": {
      "type": "object",
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastLogin": {
          "description": "Last login date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastPasswordChange": {
          "description": "Last Password change date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactiveDate": {
          "description": "Inactive date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "profileTaxInfoType": {
      "type": "object",
      "description": "Profile information related to tax.",
      "properties": {
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        }
      }
    },
    "salesInfoType": {
      "type": "object",
      "description": "Provides sales information about the profiles of type company, travel agent, source and contact.",
      "properties": {
        "scope": {
          "description": "Defines the scope.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "scopeCity": {
          "description": "Defines the scope city.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountType": {
          "description": "Defines the account type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountSource": {
          "description": "Defines the account source.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "industryCode": {
          "description": "Defines the industry code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "businessSegments": {
          "description": "Defines the Business segments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priority": {
          "description": "Defines the priority.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "roomsPotential": {
          "description": "Defines the rooms potential.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "actionCode": {
          "description": "Defines the action code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "competitionCode": {
          "description": "Defines the competition code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "influence": {
          "description": "Defines the influence for the contact profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "preferredRoom": {
          "description": "Defines the Preferred Room for profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code used to filter the sales information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eCertificatesType": {
      "type": "array",
      "description": "List of e-certificates for the profile.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "eCertificateType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        }
      }
    },
    "eCertificateInfoType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "eCertificateScopeType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateUsageCriteriaType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        },
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        }
      }
    },
    "eCertificateConsumptionType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "eCertificateConsumeSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateStatusType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "awardId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "eCertificateIssueSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateIssueType": {
      "type": "string",
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateGenerationType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileSubscriptionListType": {
      "type": "array",
      "description": "Details of the OPERA Profile subscription to external system",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileSubscriptionType"
      }
    },
    "profileSubscriptionType": {
      "type": "object",
      "description": "Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system",
      "properties": {
        "profileId": {
          "description": "OPERA Profile ID that this subscription record corresponds to.",
          "$ref": "#/definitions/profileId"
        },
        "externalProfileId": {
          "description": "Profile ID within the external system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileInfo": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "profileType": {
              "description": "OPERA profile type such as Individual or Company",
              "$ref": "#/definitions/profileTypeType"
            }
          }
        },
        "distributed": {
          "description": "Indicates if the profile was distributed to the external system.",
          "type": "boolean"
        },
        "force": {
          "description": "Indicates if the profile information should be overwritten by the external system.",
          "type": "boolean"
        },
        "subscriptionDate": {
          "description": "Timestamp when the profile was subscribed to.",
          "type": "string",
          "format": "date-time"
        },
        "lastDistributionDate": {
          "description": "Timestamp of the most recent distribution of this profile to the external system.",
          "type": "string",
          "format": "date-time"
        },
        "lastExternalUpdateDate": {
          "description": "Timestamp of the most recent update of the subscription information by the external system.",
          "type": "string",
          "format": "date-time"
        },
        "inactive": {
          "description": "Indicates whether this subscription is active or inactive.",
          "type": "boolean"
        },
        "systemCode": {
          "description": "Code of system where profile is subscribed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "systemType": {
          "description": "Type of system where profile is subscribed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "companyProfileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Agent",
        "Company",
        "Group",
        "Source"
      ]
    },
    "profileNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "profileDeliveryMethod": {
      "type": "object",
      "description": "Delivery Information type to the profile.",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "profileDeliveryModuleType": {
      "type": "string",
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "enum": [
        "EfolioExport"
      ]
    },
    "relationshipInfoSummaryType": {
      "type": "object",
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType": {
      "type": "object",
      "description": "Provides address information for a Relationship.",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "reservationStayHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        }
      }
    },
    "stayHistoryListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "stayReservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "stayFutureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "roomOwnershipType": {
      "type": "object",
      "description": "Define the search criteria for retrieving room ownership records",
      "properties": {
        "contractId": {
          "description": "Contract ID of the room ownership record.",
          "type": "integer"
        },
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "unit": {
          "description": "Unit for room owner.",
          "type": "string"
        },
        "roomCategory": {
          "description": "Room Category of the room ownership record.",
          "type": "string"
        },
        "roomType": {
          "description": "Room Type of the room ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the room ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "Status of the room ownership record.",
          "type": "string"
        }
      }
    },
    "profileSummaryInfoType": {
      "type": "object",
      "description": "Summary information about a profile and the associated Unique IDs.",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code.",
          "$ref": "#/definitions/profileIdList"
        },
        "profile": {
          "description": "Provides summary information regarding profile.",
          "$ref": "#/definitions/profileSummaryType"
        }
      }
    },
    "profileSummaryType": {
      "type": "object",
      "description": "Type provides the basic information about the profile.",
      "properties": {
        "formerName": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "gender": {
              "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "birthDate": {
              "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "birthDateMasked": {
              "description": "Indicates the date of birth as masked.",
              "type": "string"
            },
            "currencyCode": {
              "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "currencySymbol": {
              "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
              "type": "string",
              "minLength": 0,
              "maxLength": 10
            },
            "decimalPlaces": {
              "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
              "type": "integer"
            },
            "language": {
              "description": "Language identification.",
              "type": "string",
              "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
            },
            "customerValue": {
              "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "altName": {
          "description": "Profile Name information for this profile.",
          "$ref": "#/definitions/profileNameType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "addressInfo": {
          "description": "Detailed information on an address for the customer.",
          "$ref": "#/definitions/addressInfoType"
        },
        "telephoneInfo": {
          "description": "Detailed information on telephone/ fax for the customer.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "emailInfo": {
          "description": "Detailed information on an eMail address for the customer.",
          "$ref": "#/definitions/emailInfoType"
        },
        "profileMembership": {
          "description": "Information on membership for the customer.",
          "$ref": "#/definitions/profileMembershipType"
        },
        "uRLInfo": {
          "description": "Detailed information on web url/address for the customer.",
          "$ref": "#/definitions/uRLInfoType"
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.Information on whether the profile is created in CRO/Hotel/Chain.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "owners": {
          "description": "Owner of the customer.",
          "$ref": "#/definitions/ownersType"
        },
        "primaryCompany": {
          "description": "Primary Company of the profile.",
          "type": "string"
        },
        "aRAccount": {
          "description": "AR Account information.",
          "$ref": "#/definitions/directBillingType"
        },
        "commission": {
          "description": "Commission Code and description of the requested HotelCode.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for profile search.",
          "$ref": "#/definitions/profileAllowedActionsType"
        },
        "primaryAccountInfo": {
          "description": "Contains primary account information (Profile Id, Profile Type and Profile Name) for the contacts.",
          "$ref": "#/definitions/primaryProfileInfoType"
        },
        "salesInfo": {
          "description": "Sales information of the profile.",
          "$ref": "#/definitions/salesInfoType"
        },
        "additionalInfo": {
          "description": "Additional Information about the profile.",
          "$ref": "#/definitions/profileAdditionalInfoType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "subscription": {
          "description": "This element tells If there is an active subscription for this external profile .",
          "type": "boolean"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "protected": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "registeredProperty": {
          "description": "Property this profile is registered with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "vIPStatusType": {
      "type": "object",
      "description": "VIP status of the customer.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 2000.",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "ownersType": {
      "type": "array",
      "description": "Generic type for a list of owners.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ownerType"
      }
    },
    "profileAllowedActionsType": {
      "type": "array",
      "description": "Allowed actions for profile operations.",
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/profileAllowedActionType"
      }
    },
    "profileAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether Profile is Enrolled to Primary Membership Program.",
      "enum": [
        "NameChange",
        "TaxIDChange",
        "EnrollToPrimaryMembership"
      ]
    },
    "primaryProfileInfoType": {
      "type": "object",
      "description": "Contains basic information of profile.",
      "properties": {
        "profileId": {
          "description": "Unique Identifier for OPERA Profile.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileType": {
          "description": "Type of account such as Agent, Company, and Source.",
          "$ref": "#/definitions/profileTypeType"
        },
        "profileName": {
          "description": "Name of the account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "profileAdditionalInfoType": {
      "type": "object",
      "properties": {
        "primaryOwnerCode": {
          "description": "Primary Owner of the profile",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "masterAccount": {
          "description": "Indicates if the profile is a Master Account for one or more Subsidiary Accounts.",
          "type": "boolean"
        },
        "subsidiaryAccount": {
          "description": "Indicates if the profile is a Subsidiary Account of a Master/Parent Account.",
          "type": "boolean"
        },
        "businessPosition": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "description": "",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addtionalCodeInfoType": {
      "type": "array",
      "description": "Holds name of additional code information",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "profile": {
      "type": "object",
      "description": "Object for creation of profiles. This object contains profile details with unique identifiers for each profile.",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as ID.",
          "$ref": "#/definitions/profileIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Profile.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "profileDetails": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "profileAllowedActions": {
          "description": "Provides the actions needed to apply on the profile",
          "$ref": "#/definitions/profileAllowedActionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        },
        "fiscalGuestType": {
          "description": "Fiscal Guest Type is used for Fiscal Folio funcionality",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "guest": {
      "type": "object",
      "description": "Request object for creation of guest/contact/employee profile. This object contains profile details with unique identifiers of a profile. The standard optional Opera Context element is also included.",
      "properties": {
        "guestIdList": {
          "description": "Unique identifiers of Profile for both internal and external systems.",
          "$ref": "#/definitions/profileIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Profile.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "guestDetails": {
          "description": "Provides detailed information of a customer profile.",
          "$ref": "#/definitions/guestProfileType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestProfileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "eCertificates": {
          "description": "E-Certificate associated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Type of profile such as Guest, Employee or Contact.",
          "$ref": "#/definitions/guestProfileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        }
      }
    },
    "guestProfileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Employee",
        "Contact"
      ]
    },
    "availableARAddresses": {
      "type": "object",
      "description": "Response to the request to fetch the available Accounts Receivables(AR) Addresses for a Profile.",
      "properties": {
        "addresses": {
          "description": "Collection of Detailed information on an address for the customer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/addressInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "availablePreferences": {
      "type": "object",
      "properties": {
        "preferenceCollection": {
          "type": "array",
          "description": "A collection of preferences",
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileSummaries": {
      "type": "object",
      "description": "Response object for fetching profiles. This object contains profile primary details,profile summary details,master info list containing code and description used as lookup for description.",
      "properties": {
        "profileSummaries": {
          "description": "Type contains Profile's summary information.",
          "$ref": "#/definitions/profileSummariesType"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileSummariesType": {
      "type": "object",
      "description": "A complex type containing the collection of Profile objects or Unique IDs of Profiles.",
      "properties": {
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileSummaryInfoType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "emailMessageType": {
      "type": "object",
      "description": "Request object for storing an email.",
      "properties": {
        "blockId": {
          "description": "ID of the Block that is associated with the email.",
          "$ref": "#/definitions/stringLength80"
        },
        "fromAddress": {
          "description": "The address that originated the email.",
          "$ref": "#/definitions/basicEmailType"
        },
        "toAddress": {
          "description": "A collection of email addresses for recipients who were sent the email message",
          "$ref": "#/definitions/basicEmailListType"
        },
        "subject": {
          "description": "The subject line of the email.",
          "$ref": "#/definitions/stringLength200"
        },
        "emailBody": {
          "description": "Email in base64 binary format.",
          "type": "string",
          "format": "byte"
        },
        "messageId": {
          "description": "Global ID of the email message from the external system.",
          "$ref": "#/definitions/stringLength100"
        },
        "emailReceiveDate": {
          "description": "The date the email was received.",
          "type": "string",
          "format": "date-time"
        },
        "hasAttachment": {
          "description": "Indicates whether the email was sent with an attachment (true) or not (false).",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stringLength80": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 80.",
      "maxLength": 80,
      "minLength": 0
    },
    "basicEmailListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/basicEmailType"
      }
    },
    "stringLength200": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 200.",
      "maxLength": 200,
      "minLength": 0
    },
    "stringLength100": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 100.",
      "maxLength": 100,
      "minLength": 0
    },
    "profileRelationships": {
      "type": "object",
      "properties": {
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "$ref": "#/definitions/relationshipsSummary"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "relationshipsSummary": {
      "type": "object",
      "description": "Contains details relationships related to a profile.",
      "properties": {
        "relationship": {
          "description": "A collection of the profiles summary that have a relationship with this profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/relationshipInfoSummaryType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "profileStayHistory": {
      "type": "object",
      "description": "Response object for showing stay history and future reservations of specific profile.",
      "properties": {
        "profileStayDetails": {
          "description": "Type contains stay history and future reservations of the specific profile.",
          "$ref": "#/definitions/profileStayDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileStayDetailsType": {
      "type": "object",
      "description": "Type provides the stay history and future reservations of specific profile.",
      "properties": {
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        }
      }
    },
    "profileRelationship": {
      "type": "object",
      "description": "Request object for creating profile relationship.",
      "properties": {
        "relationship": {
          "description": "Refer to Relationship Profile request criteria.",
          "$ref": "#/definitions/relationshipCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "relationshipCriteriaType": {
      "type": "object",
      "description": "Contains Criteria Information for a profile relationship.",
      "properties": {
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).This needs to be passed if the attribute primary is sent as true.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sourceProfileType": {
          "description": "Used to specify a source profile type.",
          "$ref": "#/definitions/profileTypeType"
        },
        "targetRelation": {
          "description": "Indicates the type of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetProfileType": {
          "description": "Used to specify a target profile type.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "profileRelationshipToBeChanged": {
      "type": "object",
      "description": "Request object for changing profile relationship.",
      "properties": {
        "relationship": {
          "description": "Refer to Relationship Profile request criteria.",
          "$ref": "#/definitions/changeRelationshipCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeRelationshipCriteriaType": {
      "type": "object",
      "description": "Information about the changes in relationship for the profile",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sourceRelation": {
          "description": "Indicates the type of existing relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of existing relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Indicates the type of existing relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of existing relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "changeRelationsInfoType": {
      "type": "object",
      "description": "Detailed information regarding to be changed relationships for the profile.",
      "properties": {
        "changeProfileID": {
          "description": "Unique id of the profile to be changed to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "sourceProfileType": {
          "description": "Used to specify a source profile type.",
          "$ref": "#/definitions/profileTypeType"
        },
        "sourceRelation": {
          "description": "Indicates the type of to be changed relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of to be changed relationship the current profile(Source Profile) has with the related profile(Target Profile).This needs to be passed if the attribute primary is sent as true.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Indicates the type of to be changed relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of to be changed relationship the related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetProfileType": {
          "description": "Used to specify a target profile type.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "profileToBeMerged": {
      "type": "object",
      "description": "Profile Resource will be merged.",
      "properties": {
        "victimProfileId": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileDetails": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Profile",
      "description": "The Profile APIs allow you to view, create, update, and delete profiles in OPERA Cloud. Each time a new profile in created in OPERA Cloud, a profileID is assigned.  Use this profileID to retrieve and update details relating to that profile.   The resource 'Companies' includes group, source, company and travel agent profile types.   The resource 'Guests' includes individual and contact profile types."
    },
    {
      "name": "ProfileLOV",
      "description": "Profiles have many Lists of Values, storing the available options a user can select when updating a profile.  This module allows you to get available ListOfValues for Profile Preferences and AR Addresses on a profile."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}