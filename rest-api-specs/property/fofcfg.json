{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Front Desk Configuration API",
    "description": "APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "22.3",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/fof/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/articles": {
      "put": {
        "summary": "Operation to change Articles.",
        "description": "Operation to change articles. <p><strong>OperationId:</strong>putArticles</p>",
        "operationId": "putArticles",
        "parameters": [
          {
            "name": "articles",
            "in": "body",
            "required": true,
            "description": "Request to change articles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Articles.",
        "description": "Operation to create articles. <p><strong>OperationId:</strong>postArticles</p>",
        "operationId": "postArticles",
        "parameters": [
          {
            "name": "articles",
            "in": "body",
            "required": true,
            "description": "Request to create articles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch Articles.",
        "description": "Operation to fetch articles. <p><strong>OperationId:</strong>getArticles</p>",
        "operationId": "getArticles",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "articleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code search criteria.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching articles.",
            "schema": {
              "$ref": "#/definitions/articlesInfo"
            }
          },
          "204": {
            "description": "Articles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete Articles.",
        "description": "Operation to remove articles. <p><strong>OperationId:</strong>deleteArticles</p>",
        "operationId": "deleteArticles",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "articleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "articleHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "x-example": [
              "false"
            ],
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableForPostIt",
            "in": "query",
            "required": false,
            "description": "Indicates whether the article is available for post it.",
            "type": "boolean"
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ]
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/authorizationConfigRule": {
      "put": {
        "summary": "Operation to change AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>putAuthorizationConfigRule</p>",
        "operationId": "putAuthorizationConfigRule",
        "parameters": [
          {
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "description": "Request object to change authorization rule.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>postAuthorizationConfigRule</p>",
        "operationId": "postAuthorizationConfigRule",
        "parameters": [
          {
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "description": "Request object to create new authorization rule for given hotel code.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>deleteAuthorizationConfigRule</p>",
        "operationId": "deleteAuthorizationConfigRule",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with authorization rule",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Authorization rule Room type.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomClassHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceCodeHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rateCategory",
            "in": "query",
            "required": false,
            "description": "Rate category Code.",
            "type": "string"
          },
          {
            "name": "rateCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Rate code associated to this rule.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "guaranteeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Guarantee code associated to this rule.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/authorizerGroups": {
      "put": {
        "summary": "Operation to change AuthorizerGroups.",
        "description": "Operation to change Authorizer Groups. <p><strong>OperationId:</strong>putAuthorizerGroups</p>",
        "operationId": "putAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroupsToChange",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Authorizer Group Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroupsToChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AuthorizerGroups.",
        "description": "Operation to create Authorizer Groups. <p><strong>OperationId:</strong>postAuthorizerGroups</p>",
        "operationId": "postAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Authorizer Group Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch AuthorizerGroups.",
        "description": "Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getAuthorizerGroups</p>",
        "operationId": "getAuthorizerGroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "authorizerGroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Authorizer Groups.",
            "schema": {
              "$ref": "#/definitions/authorizerGroups"
            }
          },
          "204": {
            "description": "AuthorizerGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AuthorizerGroups.",
        "description": "Operation to remove Authorizer Groups. <p><strong>OperationId:</strong>deleteAuthorizerGroups</p>",
        "operationId": "deleteAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroup",
            "in": "query",
            "required": false,
            "description": "Configuration code.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/autoFolioSettlementTypes": {
      "get": {
        "summary": "Get Auto Folio Settlement Types",
        "description": "Use this API to get Auto Folio Settlement Types. <p><strong>OperationId:</strong>getAutoFolioSettlementTypes</p>",
        "operationId": "getAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Auto Folio Settlement Types.",
            "schema": {
              "$ref": "#/definitions/autoFolioSettlementTypesDetails"
            }
          },
          "204": {
            "description": "AutoFolioSettlementTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Auto Folio Settlement Types",
        "description": "Use this API to create Auto Folio Settlement Types. <p><strong>OperationId:</strong>postAutoFolioSettlementTypes</p>",
        "operationId": "postAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "autoFolioSettlementTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Auto Folio Settlement Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/autoFolioSettlementTypes/{code}": {
      "put": {
        "summary": "Change Auto Folio Settlement Types",
        "description": "Use this API to update Auto Folio Settlement Types. <p><strong>OperationId:</strong>putAutoFolioSettlementTypes</p>",
        "operationId": "putAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Auto Folio Settlement Types."
          },
          {
            "name": "autoFolioSettlementTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Auto Folio Settlement Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Auto Folio Settlement Types",
        "description": "Use this API to delete Auto Folio Settlement Types. <p><strong>OperationId:</strong>deleteAutoFolioSettlementTypes</p>",
        "operationId": "deleteAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Auto Folio Settlement Types."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/cashierDetails/cashiers": {
      "get": {
        "summary": "Operation to fetch Cashiers.",
        "description": "The operation accepts Cashier fetch request and returns Cashiers' list that match the criteria. <p><strong>OperationId:</strong>getCashiers</p>",
        "operationId": "getCashiers",
        "parameters": [
          {
            "name": "cashierIDs",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Numberic code for cashier ID.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "x-example": [
              "54"
            ],
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Partial name of a cashier.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive cashiers in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching information regarding Cashiers.",
            "schema": {
              "$ref": "#/definitions/cashiersDetails"
            }
          },
          "204": {
            "description": "Cashiers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/cashiers": {
      "put": {
        "summary": "Operation to change CashiersDetails.",
        "description": "This Operation to Change a Cashier. <p><strong>OperationId:</strong>putCashiers</p>",
        "operationId": "putCashiers",
        "parameters": [
          {
            "name": "cashiers",
            "in": "body",
            "required": true,
            "description": "Request objects for modifying cashiers",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Cashiers.",
        "description": "Operation to Create Cashier. <p><strong>OperationId:</strong>postCashiers</p>",
        "operationId": "postCashiers",
        "parameters": [
          {
            "name": "cashiers",
            "in": "body",
            "required": true,
            "description": "Request object for creating cashiers.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/cashiers/nextAvailable": {
      "get": {
        "summary": "Operation to fetch AvailableCashierNumber.",
        "description": "The operation returns a next available Cashier Number to be used while creating a new Cashier. <p><strong>OperationId:</strong>getAvailableCashierNumber</p>",
        "operationId": "getAvailableCashierNumber",
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object that returns next available cashier number.",
            "schema": {
              "$ref": "#/definitions/cashierNumber"
            }
          },
          "204": {
            "description": "AvailableCashierNumber not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/commissionCodes": {
      "get": {
        "summary": "Operation to fetch commission codes.",
        "description": " <p><strong>OperationId:</strong>getCommissionCodes</p>",
        "operationId": "getCommissionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "commissionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching commission codes.",
            "schema": {
              "$ref": "#/definitions/commissionCodesSummary"
            }
          },
          "204": {
            "description": "CommissionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change commission codes.",
        "description": " <p><strong>OperationId:</strong>putCommissionCodes</p>",
        "operationId": "putCommissionCodes",
        "parameters": [
          {
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "description": "Request object to update commission codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create commission codes.",
        "description": " <p><strong>OperationId:</strong>postCommissionCodes</p>",
        "operationId": "postCommissionCodes",
        "parameters": [
          {
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "description": "Request object to create new commission codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove commission codes.",
        "description": " <p><strong>OperationId:</strong>deleteCommissionCodes</p>",
        "operationId": "deleteCommissionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property of the commission code.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "commissionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Commission code for which details are deleted.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/compTypes": {
      "post": {
        "summary": "Operation to Create Comp Types",
        "description": "Operation to Create Comp Types <p><strong>OperationId:</strong>postCompTypes</p>",
        "operationId": "postCompTypes",
        "parameters": [
          {
            "name": "compTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating CompTypes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to Change Comp Types.",
        "description": "Operation to Change Comp Types. <p><strong>OperationId:</strong>changeCompTypes</p>",
        "operationId": "changeCompTypes",
        "parameters": [
          {
            "name": "compTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Comp Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/compTypesStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/compTypes/codes/{compTypesCode}": {
      "delete": {
        "summary": "Operation to Remove Comp Types.",
        "description": "Operation to Remove Comp Types. <p><strong>OperationId:</strong>removeCompTypes</p>",
        "operationId": "removeCompTypes",
        "parameters": [
          {
            "name": "compTypesCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Comp Types Code to be deleted."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/configBankAccounts": {
      "get": {
        "summary": "Operation to fetch config bank accounts.",
        "description": " <p><strong>OperationId:</strong>getConfigBankAccounts</p>",
        "operationId": "getConfigBankAccounts",
        "parameters": [
          {
            "name": "hotels",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "bankCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Bank Accounts",
            "schema": {
              "$ref": "#/definitions/bankAccountsInfo"
            }
          },
          "204": {
            "description": "ConfigBankAccounts not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change config bank accounts.",
        "description": " <p><strong>OperationId:</strong>putConfigBankAccounts</p>",
        "operationId": "putConfigBankAccounts",
        "parameters": [
          {
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "description": "Request object to edit Bank Accounts",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove config bank accounts.",
        "description": " <p><strong>OperationId:</strong>deleteConfigBankAccounts</p>",
        "operationId": "deleteConfigBankAccounts",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property of the bank account.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "bankAccountID",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Bank account ID.",
            "items": {
              "type": "number"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create config bank accounts.",
        "description": " <p><strong>OperationId:</strong>postConfigBankAccounts</p>",
        "operationId": "postConfigBankAccounts",
        "parameters": [
          {
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "description": "Request object to create Bank Accounts",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/creditCardInfo": {
      "get": {
        "summary": "Operation to fetch CreditCardInfo.",
        "description": " <p><strong>OperationId:</strong>getCreditCardInfo</p>",
        "operationId": "getCreditCardInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cardIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "cardIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "cardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accessTransactionType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Respose for the fetch credit card information.",
            "schema": {
              "$ref": "#/definitions/creditCardInfo"
            }
          },
          "204": {
            "description": "CreditCardInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/currencyExchangeServiceTaxes": {
      "put": {
        "summary": "Operation to change ExchangeServiceTaxes.",
        "description": "Operation to change currency exchange service taxes. <p><strong>OperationId:</strong>putCurrencyExchangeServiceTaxes</p>",
        "operationId": "putCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "description": "Request object for changing currency exchange service taxes",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create CurrencyExchangeServiceTaxes.",
        "description": "Operation to create currency exchange service taxes. <p><strong>OperationId:</strong>postCurrencyExchangeServiceTaxes</p>",
        "operationId": "postCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new currency exchange service taxes",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch CurrencyExchangeServiceTaxes.",
        "description": "Operation to fetch currency exchange service taxes. <p><strong>OperationId:</strong>getCurrencyExchangeServiceTaxes</p>",
        "operationId": "getCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch currency exchange service taxes",
            "schema": {
              "$ref": "#/definitions/currencyExchangeServiceTaxes"
            }
          },
          "204": {
            "description": "CurrencyExchangeServiceTaxes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete CurrencyExchangeServiceTaxes.",
        "description": "Operation to remove currency exchange service taxes. <p><strong>OperationId:</strong>deleteCurrencyExchangeServiceTaxes</p>",
        "operationId": "deleteCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with currency exchange service tax",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "currencyExchangeServiceTaxCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Currency exchange service tax code",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/customTaxTypes": {
      "get": {
        "summary": "Get Custom Tax Types",
        "description": "Use this API to get Custom Tax Types. <p><strong>OperationId:</strong>getCustomTaxTypes</p>",
        "operationId": "getCustomTaxTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Custom Tax Types.",
            "schema": {
              "$ref": "#/definitions/customTaxTypesDetails"
            }
          },
          "204": {
            "description": "CustomTaxTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Custom Tax Types",
        "description": "Use this API to create Custom Tax Types. <p><strong>OperationId:</strong>postCustomTaxTypes</p>",
        "operationId": "postCustomTaxTypes",
        "parameters": [
          {
            "name": "customTaxTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Custom Tax Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/customTaxTypes/{taxTypeCode}": {
      "put": {
        "summary": "Change Custom Tax Types",
        "description": "Use this API to update Custom Tax Types. <p><strong>OperationId:</strong>changeCustomTaxTypes</p>",
        "operationId": "changeCustomTaxTypes",
        "parameters": [
          {
            "name": "taxTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Tax Types."
          },
          {
            "name": "customTaxTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Custom Tax Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Custom Tax Types",
        "description": "Use this API to delete Custom Tax Types. <p><strong>OperationId:</strong>removeCustomTaxTypes</p>",
        "operationId": "removeCustomTaxTypes",
        "parameters": [
          {
            "name": "taxTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Tax Types."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/dailyPlanCodes": {
      "put": {
        "summary": "Operation to change DailyPlanCodes.",
        "description": " <p><strong>OperationId:</strong>putDailyPlanCodes</p>",
        "operationId": "putDailyPlanCodes",
        "parameters": [
          {
            "name": "dailyPlanCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing daily plan codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyPlanCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch DailyPlanCodes.",
        "description": " <p><strong>OperationId:</strong>getDailyPlanCodes</p>",
        "operationId": "getDailyPlanCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching daily plan codes.",
            "schema": {
              "$ref": "#/definitions/dailyPlanCodes"
            }
          },
          "204": {
            "description": "DailyPlanCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/expenseArrangementCodes": {
      "put": {
        "summary": "Operation to change ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>putExpenseArrangementCodes</p>",
        "operationId": "putExpenseArrangementCodes",
        "parameters": [
          {
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing expense arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>postExpenseArrangementCodes</p>",
        "operationId": "postExpenseArrangementCodes",
        "parameters": [
          {
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new expense arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>getExpenseArrangementCodes</p>",
        "operationId": "getExpenseArrangementCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching expense arrangement codes.",
            "schema": {
              "$ref": "#/definitions/expenseArrangementCodes"
            }
          },
          "204": {
            "description": "ExpenseArrangementCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>deleteExpenseArrangementCodes</p>",
        "operationId": "deleteExpenseArrangementCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/fiscalFolioParameters": {
      "put": {
        "summary": "Operation to change FiscalFolioParameters.",
        "description": "Operation to change Fiscal Folio Parameters. <p><strong>OperationId:</strong>putFiscalFolioParameters</p>",
        "operationId": "putFiscalFolioParameters",
        "parameters": [
          {
            "name": "fiscalFolioParameters",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Fiscal Folio Parameter Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioParameters"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FiscalFolioParameters.",
        "description": "Operation to fetch Fiscal Folio Parameters. <p><strong>OperationId:</strong>getFiscalFolioParameters</p>",
        "operationId": "getFiscalFolioParameters",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "internal",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data. Set this true to see the standard Fiscal Folio Parameters that are seeded along with the manually created Fiscal Folio Parameters.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Fiscal Folio Parameter configurations.",
            "schema": {
              "$ref": "#/definitions/fiscalFolioParameters"
            }
          },
          "204": {
            "description": "FiscalFolioParameters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FiscalFolioParameters.",
        "description": "Operation to remove Fiscal Folio Parameters. <p><strong>OperationId:</strong>deleteFiscalFolioParameters</p>",
        "operationId": "deleteFiscalFolioParameters",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of the Hotel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "partner",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Fiscal folio parameter associated with Partner.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of the Fiscal Folio Parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/folioTypeLegendMappings": {
      "get": {
        "summary": "Operation to fetch folio type legend mappings config.",
        "description": "Operation to fetch folio type legend mappings config. <p><strong>OperationId:</strong>getFolioTypeLegendMappingsConfig</p>",
        "operationId": "getFolioTypeLegendMappingsConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Property associated with folio type legend mapping",
            "type": "string"
          },
          {
            "name": "legendCode",
            "in": "query",
            "required": true,
            "description": "Legend code to which folio types attached.",
            "type": "string"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio type to be searched.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch folio type legend mapping.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingsConfigDetails"
            }
          },
          "204": {
            "description": "FolioTypeLegendMappingsConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create folio type legend mappings config.",
        "description": "Operation to create folio type legend mappings config. <p><strong>OperationId:</strong>postFolioTypeLegendMappingConfig</p>",
        "operationId": "postFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "folioTypeLegendMappingConfigCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to create folio type legend mapping information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change folio type legend mappings config.",
        "description": "Operation to change folio type legend mappings config. <p><strong>OperationId:</strong>changeFolioTypeLegendMappingConfig</p>",
        "operationId": "changeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "folioTypeLegendMappingConfigToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object to edit folio type legend mapping information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingConfigStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/generates": {
      "post": {
        "summary": "Operation to create TransactionGenerates.",
        "description": "Operation to create transaction generates. <p><strong>OperationId:</strong>postTransactionGenerates</p>",
        "operationId": "postTransactionGenerates",
        "parameters": [
          {
            "name": "hotelTransactionGenerates",
            "in": "body",
            "required": true,
            "description": "Request to create transaction generates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionGenerates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelAdjustmentCodes": {
      "put": {
        "summary": "Operation to change AdjustmentCodes.",
        "description": "Operation to change Adjustment Codes. <p><strong>OperationId:</strong>putAdjustmentCodes</p>",
        "operationId": "putAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Adjustment Code Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AdjustmentCodes.",
        "description": "Operation to create Adjustment Codes. <p><strong>OperationId:</strong>postAdjustmentCodes</p>",
        "operationId": "postAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Adjustment Code Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch AdjustmentCodes.",
        "description": "Operation to fetch Adjustment Codes. <p><strong>OperationId:</strong>getAdjustmentCodes</p>",
        "operationId": "getAdjustmentCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "adjustmentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Adjustment Code configurations.",
            "schema": {
              "$ref": "#/definitions/adjustmentCodes"
            }
          },
          "204": {
            "description": "AdjustmentCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AdjustmentCodes.",
        "description": "Operation to remove Adjustment Codes. <p><strong>OperationId:</strong>deleteAdjustmentCodes</p>",
        "operationId": "deleteAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCode",
            "in": "query",
            "required": false,
            "description": "Configuration code.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelPaymentMethods": {
      "get": {
        "summary": "Operation to fetch PaymentMethods.",
        "description": "Operation to fetch payment methods. <p><strong>OperationId:</strong>getPaymentMethods</p>",
        "operationId": "getPaymentMethods",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "paymentMethods",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple Type for payment method fetch instruction.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "CardRanges"
              ]
            },
            "x-example": [
              "CardRanges"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching payment methods.",
            "schema": {
              "$ref": "#/definitions/paymentMethodsInfo"
            }
          },
          "204": {
            "description": "PaymentMethods not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelTaxTypes": {
      "get": {
        "summary": "Operation to fetch TaxTypes.",
        "description": "Operation to fetch Tax Types. <p><strong>OperationId:</strong>getTaxTypes</p>",
        "operationId": "getTaxTypes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "taxTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Tax Type configurations.",
            "schema": {
              "$ref": "#/definitions/taxTypes"
            }
          },
          "204": {
            "description": "TaxTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/commissionCode/{commissionCode}": {
      "get": {
        "summary": "Operation to fetch commission code.",
        "description": " <p><strong>OperationId:</strong>getCommissionCode</p>",
        "operationId": "getCommissionCode",
        "parameters": [
          {
            "name": "commissionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Commission Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching commission code details.",
            "schema": {
              "$ref": "#/definitions/commissionCodeDetail"
            }
          },
          "204": {
            "description": "CommissionCode not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/hotels/{hotelId}/compTypes": {
      "get": {
        "summary": "Operation to Fetch Comp Types.",
        "description": "Operation to Fetch Comp TYpes. <p><strong>OperationId:</strong>getCompTypes</p>",
        "operationId": "getCompTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "name": "compTypeCode",
            "in": "query",
            "required": false,
            "description": "Code is used to identify the CompType.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Comp Types.",
            "schema": {
              "$ref": "#/definitions/compTypesDetails"
            }
          },
          "204": {
            "description": "CompTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/exchangeRates/{currencyCode}": {
      "get": {
        "summary": "Operation to fetch FuturePastExchangeRates.",
        "description": "Operation to Fetch Future Past Exchange Rates. <p><strong>OperationId:</strong>getFuturePastExchangeRates</p>",
        "operationId": "getFuturePastExchangeRates",
        "parameters": [
          {
            "name": "currencyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Currency Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "exchangeTypes",
            "in": "query",
            "enum": [
              "Cash",
              "Settlement",
              "Posting",
              "Check",
              "TACommission",
              "Membership",
              "Certificate"
            ],
            "x-example": "Cash",
            "required": true,
            "type": "string",
            "description": "E-certificate conversion.",
            "uniqueItems": true
          },
          {
            "name": "dateRangeStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateRangeEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/futurePastExchangeRates"
            }
          },
          "204": {
            "description": "FuturePastExchangeRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/folios/{folioType}/legends/{legendCode}": {
      "delete": {
        "summary": "Operation to remove folio type legend mappings config.",
        "description": "Operation to remove folio type legend mappings config. <p><strong>OperationId:</strong>removeFolioTypeLegendMappingConfig</p>",
        "operationId": "removeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "legendCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Legend Code"
          },
          {
            "name": "folioType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Folio Type"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItActions": {
      "get": {
        "summary": "Get Track it Actions",
        "description": "Use this API to get Track it Actions. <p><strong>OperationId:</strong>getTrackItActions</p>",
        "operationId": "getTrackItActions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "showInactive",
            "in": "query",
            "required": false,
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Track it Actions.",
            "schema": {
              "$ref": "#/definitions/trackItActionsDetails"
            }
          },
          "204": {
            "description": "TrackItActions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItLocations": {
      "get": {
        "summary": "Get Track it Locations",
        "description": "Use this API to get Track it Locations. <p><strong>OperationId:</strong>getTrackItLocations</p>",
        "operationId": "getTrackItLocations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "showInactive",
            "in": "query",
            "required": false,
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Track it Locations.",
            "schema": {
              "$ref": "#/definitions/trackItLocationsDetails"
            }
          },
          "204": {
            "description": "TrackItLocations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/chargeSimulations": {
      "get": {
        "summary": "Operation to CalculatePosting.",
        "description": "Operation to test posting amount. <p><strong>OperationId:</strong>calculatePosting</p>",
        "operationId": "calculatePosting",
        "parameters": [
          {
            "name": "transactionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "postingAmount",
            "in": "query",
            "x-example": "299",
            "required": false,
            "description": "Base amount to test for posting.",
            "type": "number"
          },
          {
            "name": "taxType",
            "in": "query",
            "required": false,
            "description": "Specify this criteria if calculation is based on the tax type.",
            "type": "string"
          },
          {
            "name": "guestBalance",
            "in": "query",
            "x-example": "299",
            "required": false,
            "description": "Specify this criteria if calculation is based on the guest balance.",
            "type": "number"
          },
          {
            "name": "roomType",
            "in": "query",
            "x-example": "STD",
            "required": false,
            "description": "Specify this criteria if calculation is based on room type.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for testing posting amount.",
            "schema": {
              "$ref": "#/definitions/calculatedPosting"
            }
          },
          "204": {
            "description": "calculatePosting not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/hotelTransactionCode": {
      "get": {
        "summary": "Operation to fetch TransactionCode.",
        "description": "Operation to fetch for detailed transaction code. <p><strong>OperationId:</strong>getTransactionCode</p>",
        "operationId": "getTransactionCode",
        "parameters": [
          {
            "name": "transactionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for transaction code instructions that can be used for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Header",
                "Generates",
                "Glmapping",
                "AssociatedTrxCodes",
                "MappingCodes"
              ]
            },
            "x-example": [
              "Header"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching detailed transaction code.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionCode"
            }
          },
          "204": {
            "description": "TransactionCode not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/operaControlSequences": {
      "get": {
        "summary": "Operation to fetch OperaControlSequences.",
        "description": "Operation to fetch Opera Document Sequences. <p><strong>OperationId:</strong>getOperaControlSequences</p>",
        "operationId": "getOperaControlSequences",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel code of fetch criteria",
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "description": "Country Code of fetch criteria",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "HotelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "fetchInstruction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for opera sequence instructions that can be used for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "BillFolioTypes",
                "ArInvoice"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of Opera Control Sequence.",
            "schema": {
              "$ref": "#/definitions/operaControlSequences"
            }
          },
          "204": {
            "description": "OperaControlSequences not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/revenueBucketCodes": {
      "get": {
        "summary": "Operation to fetch RevenueBucketCodes.",
        "description": "Operation to fetch Revenue Bucket Codes. <p><strong>OperationId:</strong>getRevenueBucketCodes</p>",
        "operationId": "getRevenueBucketCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "trxCodeArrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "trxCodeArrangementType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Fiscal Bucket Type.",
            "uniqueItems": true,
            "enum": [
              "Default",
              "Fiscal"
            ]
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "revenueBucketTypesWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Revenue Bucket Codes configurations.",
            "schema": {
              "$ref": "#/definitions/revenueBucketCodes"
            }
          },
          "204": {
            "description": "RevenueBucketCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/routingInstructions": {
      "get": {
        "summary": "Operation to fetch RoutingInstructions.",
        "description": "Operation to fetch routing instructions. <p><strong>OperationId:</strong>getRoutingInstructions</p>",
        "operationId": "getRoutingInstructions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "trxCodeArrangementCode",
            "in": "query",
            "required": false,
            "description": "Codes to be searched.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "compAccounting",
            "in": "query",
            "required": false,
            "description": "Determines if this is a comp routing code or a routing code.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching routing instructions.",
            "schema": {
              "$ref": "#/definitions/routingInstructions"
            }
          },
          "204": {
            "description": "RoutingInstructions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/stopProcessingReasons": {
      "get": {
        "summary": "Operation to fetch stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>getStopProcessingReasons</p>",
        "operationId": "getStopProcessingReasons",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            }
          },
          "204": {
            "description": "StopProcessingReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>putStopProcessingReasons</p>",
        "operationId": "putStopProcessingReasons",
        "parameters": [
          {
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "description": "Request object for changing Stop Processing Reason.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for changing Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>postStopProcessingReasons</p>",
        "operationId": "postStopProcessingReasons",
        "parameters": [
          {
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "description": "Request object for creating Stop Processing Reason",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>deleteStopProcessingReasons</p>",
        "operationId": "deleteStopProcessingReasons",
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/templateTransactionCodes": {
      "put": {
        "summary": "Operation to change TemplateTransactionCodes.",
        "description": "Operation to change template transaction codes. <p><strong>OperationId:</strong>putTemplateTransactionCodes</p>",
        "operationId": "putTemplateTransactionCodes",
        "parameters": [
          {
            "name": "templateTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing template transaction codes configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TemplateTransactionCodes.",
        "description": "Operation to create template transaction codes. <p><strong>OperationId:</strong>postTemplateTransactionCodes</p>",
        "operationId": "postTemplateTransactionCodes",
        "parameters": [
          {
            "name": "templateTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template transaction codes configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TemplateTransactionCodes.",
        "description": "Operation to fetch for template transaction codes summary. <p><strong>OperationId:</strong>getTemplateTransactionCodes</p>",
        "operationId": "getTemplateTransactionCodes",
        "parameters": [
          {
            "name": "compTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to indicate whether comp accounting transaction codes are being requested. If true, only comp accounting transaction codes will be returned. If false, only standard transaction codes will be returned.",
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "type": "boolean"
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the Transaction code.",
            "type": "string"
          },
          {
            "name": "brandCode",
            "in": "query",
            "required": false,
            "description": "Property associated with the corporate information brand code in the search criteria",
            "type": "string"
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code search criteria.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template transaction codes summary.",
            "schema": {
              "$ref": "#/definitions/templateTransactionCodes"
            }
          },
          "204": {
            "description": "TemplateTransactionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/templateTransactionGroups": {
      "get": {
        "summary": "Operation to fetch TemplateTransactionGroups.",
        "description": "Operation to fetch template transaction group. <p><strong>OperationId:</strong>getTemplateTransactionGroups</p>",
        "operationId": "getTemplateTransactionGroups",
        "parameters": [
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "transactionGroupType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Wrapper Transaction Type.",
            "uniqueItems": true,
            "enum": [
              "Revenue",
              "Payment",
              "Wrapper"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch template transaction groups",
            "schema": {
              "$ref": "#/definitions/templateTransactionGroups"
            }
          },
          "204": {
            "description": "TemplateTransactionGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/templateTransactionSubGroups": {
      "post": {
        "summary": "Operation to create TemplateTransactionSubgroups.",
        "description": "Operation to create template transaction subgroups <p><strong>OperationId:</strong>postTemplateTransactionSubgroups</p>",
        "operationId": "postTemplateTransactionSubgroups",
        "parameters": [
          {
            "name": "templateTransactionSubgroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template transaction subgroups configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionSubgroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TemplateTransactionSubgroups.",
        "description": "Operation to fetch template transaction subgroups <p><strong>OperationId:</strong>getTemplateTransactionSubgroups</p>",
        "operationId": "getTemplateTransactionSubgroups",
        "parameters": [
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch template transaction subgroups configuration.",
            "schema": {
              "$ref": "#/definitions/templateTransactionSubgroups"
            }
          },
          "204": {
            "description": "TemplateTransactionSubgroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionCodes": {
      "put": {
        "summary": "Operation to change TransactionCodes.",
        "description": "Operation to change transaction codes. <p><strong>OperationId:</strong>putTransactionCodes</p>",
        "operationId": "putTransactionCodes",
        "parameters": [
          {
            "name": "hotelTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Transaction Codes Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for changing existing Transaction Codes Configuration.",
            "schema": {
              "$ref": "#/definitions/transactionCodes"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TransactionCodes.",
        "description": "Operation to create transaction codes. <p><strong>OperationId:</strong>postTransactionCodes</p>",
        "operationId": "postTransactionCodes",
        "parameters": [
          {
            "name": "hotelTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Transaction Codes Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TransactionCodes.",
        "description": "Operation to fetch transaction codes. <p><strong>OperationId:</strong>getTransactionCodes</p>",
        "operationId": "getTransactionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "compTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to indicate whether comp accounting transaction codes are being requested. If true, only comp accounting transaction codes will be returned. If false, only standard transaction codes will be returned.",
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "type": "boolean"
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the Transaction code.",
            "type": "string"
          },
          {
            "name": "brandCode",
            "in": "query",
            "required": false,
            "description": "Property associated with the corporate information brand code in the search criteria",
            "type": "string"
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code search criteria.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching hotel's transaction codes summary.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionCodes"
            }
          },
          "204": {
            "description": "TransactionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionGroups": {
      "post": {
        "summary": "Operation to create TransactionGroups.",
        "description": "Operation to create transaction groups. <p><strong>OperationId:</strong>postTransactionGroups</p>",
        "operationId": "postTransactionGroups",
        "parameters": [
          {
            "name": "transactionGroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Transaction Groups Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TransactionGroups.",
        "description": "Operation to fetch transaction groups. <p><strong>OperationId:</strong>getTransactionGroups</p>",
        "operationId": "getTransactionGroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "transactionGroupType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Wrapper Transaction Type.",
            "uniqueItems": true,
            "enum": [
              "Revenue",
              "Payment",
              "Wrapper"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Transaction Groups Configuration.",
            "schema": {
              "$ref": "#/definitions/transactionGroups"
            }
          },
          "204": {
            "description": "TransactionGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionSubGroups": {
      "get": {
        "summary": "Operation to fetch TransactionSubgroups.",
        "description": "Operation to fetch transaction sub groups. <p><strong>OperationId:</strong>getTransactionSubgroups</p>",
        "operationId": "getTransactionSubgroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Transaction Subgroups Configuration.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionSubgroups"
            }
          },
          "204": {
            "description": "TransactionSubgroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "articles": {
      "type": "object",
      "description": "Request to change articles.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the articles.",
          "$ref": "#/definitions/codeType"
        },
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "articlesType": {
      "type": "array",
      "description": "Holds collection of articles.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/articleInfoType"
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "articlesInfo": {
      "type": "object",
      "properties": {
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRules": {
      "type": "object",
      "properties": {
        "authorizationConfigRulesType": {
          "description": "Authorization configuration rule type.",
          "$ref": "#/definitions/authorizationConfigRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRulesType": {
      "type": "array",
      "description": "List of AuthorizationRuleType.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizationConfigRuleType"
      }
    },
    "authorizationConfigRuleType": {
      "type": "object",
      "description": "Authorization configuration Rule Type.Authorization Rules specify the rule (or rules) that the property uses for credit card authorizations",
      "properties": {
        "hotelId": {
          "description": "Property associated with authorization rule",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Authorization rule Room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "description": "Authorization rule room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "sourceCode": {
          "description": "Authorization rule source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "rateCategory": {
          "description": "Authorization rule Rate Category code.",
          "$ref": "#/definitions/rateCategoryType"
        },
        "rateCode": {
          "description": "Rate code associated to this rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guaranteeCode": {
          "description": "Guarantee code associated to this rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ruleNo": {
          "description": "Rule Number for current authorization.",
          "type": "integer"
        },
        "ruleDescription": {
          "description": "Rule Number description for current authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "amount": {
          "description": "Amount to be applied to all rules with an amount configured in the formula.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "Percentage to be applied to all rules with a percentage configured in the formula.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "maxDaysToAuthorize": {
          "description": "A maximum of two digits to set the number of days to authorize for a credit card. If the field is left blank, authorizations will be done for the entire stay duration of the reservation",
          "type": "integer"
        },
        "ignoreDepositsYN": {
          "description": "Ignore deposits paid for calculation of the amount to be authorized.",
          "type": "boolean"
        }
      }
    },
    "roomClassCodeInfoType": {
      "type": "object",
      "description": "Code of the room class type.",
      "properties": {
        "roomClassCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "sourceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "rateCategoryType": {
      "type": "object",
      "description": "This type represents the rate category type.",
      "properties": {
        "rateCategoryDetails": {
          "description": "Begin date for the rate category.",
          "type": "object",
          "properties": {
            "beginDate": {
              "description": "Begin date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "description": "End date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "description": "Description of rate category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "rateClass": {
              "description": "Active date of the room category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "sellSequence": {
              "description": "Indicates rate category sell sequence.",
              "type": "number"
            }
          }
        },
        "rateCategory": {
          "description": "Rate category Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerGroupsToChange": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizerGroupsCriteriaType": {
      "type": "object",
      "description": "Criteria to change authorizer group.",
      "properties": {
        "updateAuthorizers": {
          "description": "If true, updates all authorizers in the group.",
          "type": "boolean"
        },
        "authorizerGroups": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsType"
        }
      }
    },
    "authorizerGroupsType": {
      "type": "array",
      "description": "Authorizer Group",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerGroupType"
      }
    },
    "authorizerGroupType": {
      "type": "object",
      "description": "A representation of the information contained by a Authorizer Group.",
      "properties": {
        "description": {
          "description": "Description of the Authorizer Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rateCode": {
          "description": "Rate Code of the Authorizer Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionLimits": {
          "description": "Transactions information of the Authorizer Group.",
          "$ref": "#/definitions/authorizerTrxLimitsType"
        },
        "hotelId": {
          "description": "Hotel Code to which the Authorizer Group belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Authorizer Group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerTrxLimitsType": {
      "type": "array",
      "description": "Set of Transaction Limit configured for the Authorizer Group.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerTrxLimitType"
      }
    },
    "authorizerTrxLimitType": {
      "type": "object",
      "description": "A representation of the information of Transaction Limit.",
      "properties": {
        "transactionCodes": {
          "description": "Set of Transaction Codes configured for the Authorizer Group.",
          "$ref": "#/definitions/authTransactionCodesType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured for the Authorizer Group.",
          "$ref": "#/definitions/authBillingInstructionsType"
        },
        "groupHeaderId": {
          "description": "Group Header Id for a transaction row.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Credit Limit for a transaction.",
          "type": "number"
        },
        "occurrenceLimit": {
          "description": "Occurrence Limit for a transaction.",
          "type": "number"
        }
      }
    },
    "authTransactionCodesType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "authBillingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "authorizerGroups": {
      "type": "object",
      "properties": {
        "authorizerGroups": {
          "description": "Collection of Authorizer Groups fetched.",
          "$ref": "#/definitions/authorizerGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Collection of Auto Folio Settlement Types.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesType": {
      "type": "array",
      "description": "List of Auto Folio Settlement Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoFolioSettlementTypeType"
      }
    },
    "autoFolioSettlementTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "autoFolioSettlementTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be created.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be changed.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "cashiersDetails": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "Lists of cashiers and their information.",
          "$ref": "#/definitions/cashiersType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashiersType": {
      "type": "array",
      "description": "Details about a cashier.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierType"
      }
    },
    "cashierType": {
      "type": "object",
      "description": "Cashiers Information.",
      "properties": {
        "cashierId": {
          "description": "Numeric code for cashier ID.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The currency code used by the hotel that the cashier belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name assigned to the cashier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "attachedUser": {
          "description": "User(s) assigned to the cashier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "cashierType": {
          "description": "Cashier / Interface Cashier / LDAP Template options are provided.",
          "$ref": "#/definitions/cashierTypeType"
        },
        "startingAmount": {
          "description": "The Starting Amount in the Cashier drawer.",
          "type": "number"
        },
        "floatOverShort": {
          "description": "Selected if the cashier is allowed to drop below or above the required drop amount.",
          "type": "boolean"
        },
        "usageInfo": {
          "description": "Information about how the cashier is used.",
          "type": "object",
          "properties": {
            "maximumDailyUses": {
              "description": "The Maximum Daily Uses for the cashier.",
              "type": "integer"
            },
            "history": {
              "description": "Statistics about the use of the cashier.",
              "type": "object",
              "properties": {
                "lastOpened": {
                  "description": "The date that the cashier last opened.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "timesOpened": {
                  "description": "The number of times the cashier has opened their account today.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "kiosk": {
          "description": "Indicator that this cashier is the one to be used by Kiosk Partner to carry out postings and payments for the guest.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicator that tells whether the cashier is active or not.",
          "type": "boolean"
        },
        "open": {
          "description": "Indicator that tells whether the cashier is open or not.",
          "type": "boolean"
        }
      }
    },
    "cashierTypeType": {
      "type": "string",
      "description": "The types of cashier.",
      "enum": [
        "Cashier",
        "InterfaceCashier",
        "LDAPTemplate"
      ]
    },
    "cashiers": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "List of cashiers to be modified.",
          "$ref": "#/definitions/cashiersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierNumber": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierId": {
      "type": "number",
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
    },
    "commissionCodesSummary": {
      "type": "object",
      "description": "Response object for fetching commission codes.",
      "properties": {
        "commissionCodesSummary": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodesSummaryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesSummaryType": {
      "type": "array",
      "description": "Commission code details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeSummaryInfoType"
      }
    },
    "commissionCodeSummaryInfoType": {
      "type": "object",
      "description": "Commission codes summary details.",
      "properties": {
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code details.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "basedOn": {
          "description": "Commission based on information.",
          "$ref": "#/definitions/commissionBasedOnType"
        },
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "commissionBasedOnType": {
      "type": "string",
      "description": "Commission based on Revenue.",
      "enum": [
        "Reservation",
        "Revenue"
      ]
    },
    "commissionCodes": {
      "type": "object",
      "description": "Request object to update commission codes.",
      "properties": {
        "commissionCodes": {
          "description": "Commission codes information to update.",
          "$ref": "#/definitions/commissionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesType": {
      "type": "array",
      "description": "Commission code details object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeInfoType"
      }
    },
    "commissionCodeInfoType": {
      "type": "object",
      "description": "Commission code info.",
      "properties": {
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "commissionCodeHoldStatus": {
          "description": "Commission code hold status details.",
          "$ref": "#/definitions/commissionCodeHoldStatusType"
        },
        "reservationHistoryRecords": {
          "description": "Commission paid manually details.",
          "$ref": "#/definitions/commissionPaidDetailsType"
        },
        "commissionCalculation": {
          "description": "Commission calculation type based on details.",
          "$ref": "#/definitions/commissionCalculationType"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        }
      }
    },
    "commissionCodeHoldStatusType": {
      "type": "object",
      "description": "Commission Code Hold Status type",
      "properties": {
        "holdAlways": {
          "description": "Hold always status for commission code.",
          "type": "boolean"
        },
        "holdPrepaid": {
          "description": "Hold prepaid status for commission code.",
          "type": "boolean"
        },
        "holdAccountReceivables": {
          "description": "Hold accoutn receivables status for commission code.",
          "type": "boolean"
        }
      }
    },
    "commissionPaidDetailsType": {
      "type": "object",
      "description": "Commission paid details.",
      "properties": {
        "perNight": {
          "type": "boolean"
        },
        "perStay": {
          "type": "boolean"
        },
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "weekEndCommissionAmount": {
          "description": "Commission amount that needs to be paid over weekend.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionType": {
          "description": "Indicates the type of commission paid to agent.",
          "type": "string",
          "minLength": 1,
          "maxLength": 1
        }
      }
    },
    "commissionCalculationType": {
      "type": "object",
      "description": "Commission calculation type based on details.",
      "properties": {
        "revenueBasedCommission": {
          "$ref": "#/definitions/revenueBasedCommissionType"
        },
        "reservationBasedCommission": {
          "$ref": "#/definitions/reservationBasedCommissionType"
        }
      }
    },
    "revenueBasedCommissionType": {
      "type": "array",
      "description": "Revenue based commission details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeTransactionType"
      }
    },
    "commissionCodeTransactionType": {
      "type": "object",
      "description": "Revenue based commission details.",
      "properties": {
        "transactionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodeDesc": {
          "type": "string"
        },
        "basedOnNetAmount": {
          "type": "boolean"
        },
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        }
      }
    },
    "reservationBasedCommissionType": {
      "type": "object",
      "description": "Reservation based commission details.",
      "properties": {
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "compTypesCriteria": {
      "type": "object",
      "description": "Request object for creating CompTypes.",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be created.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesType": {
      "type": "array",
      "description": "List of Comp Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/compTypeType"
      }
    },
    "compTypeType": {
      "type": "object",
      "description": "Information representation of Comp Type.",
      "properties": {
        "compTypeCode": {
          "description": "Code is used to identify the CompType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTypeDescription": {
          "description": "Text is used to describe the CompType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayOrder": {
          "description": "Comp Type record sequence number.",
          "type": "number"
        }
      }
    },
    "compTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Comp Types.",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be changed.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesStatus": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bankAccountsInfo": {
      "type": "object",
      "description": "Response for fetching Bank Accounts",
      "properties": {
        "bankAccounts": {
          "description": "Collection of Bank Accounts",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configBankAccountsType": {
      "type": "array",
      "description": "List of bank accounts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configBankAccountType"
      }
    },
    "configBankAccountType": {
      "type": "object",
      "description": "Indentifier for a Bank Account.",
      "properties": {
        "hotelId": {
          "description": "Property of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Bank account ID.",
          "type": "number"
        },
        "bankAccountNumber": {
          "description": "Account number at the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "bankCode": {
          "description": "Unique code of the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "branchCode": {
          "description": "Code for the branch of the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankName": {
          "description": "Name of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingNumber": {
          "description": "Routing number for the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionConfigPaymentMethodType"
        },
        "format": {
          "description": "Type of format for Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "lastExportDate": {
          "description": "Used to hold last exported date for commission export.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastExportFileNo": {
          "description": "Used to hold last exported filename for commission export.",
          "type": "integer"
        },
        "nextCheckNumber": {
          "description": "Next check number used by commission handling module for bank account selected.",
          "type": "number"
        },
        "minProcessingAmount": {
          "description": "Minimum amount required to produce a check through commission processing for the selected account.",
          "type": "number"
        },
        "currency": {
          "description": "Currency associated with the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "checkStubLines": {
          "description": "Number of lines to be printed on check stub.",
          "type": "number"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "sourceImportDirectory": {
          "description": "Source directory for importing commission information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "targetImportDirectory": {
          "description": "Target directory where import files will be stored.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "editCheckNumber": {
          "description": "Check number allowed to be edited true/false.",
          "type": "boolean"
        },
        "validateIATANumber": {
          "description": "Force validation of TA/Source IATA number during commision payment process.",
          "type": "boolean"
        },
        "default": {
          "description": "Default Bank Account for that resort.",
          "type": "boolean"
        },
        "defaultForCurrency": {
          "description": "Used mainly to figure out default bank for resort and currency combination.",
          "type": "boolean"
        },
        "positivePayExport": {
          "description": "Indicate that the bank account uses Positive Pay Export.",
          "type": "boolean"
        },
        "report1099": {
          "description": "Indicates that bank account uses 1099 report.",
          "type": "boolean"
        }
      }
    },
    "commissionConfigPaymentMethodType": {
      "type": "string",
      "description": "This value of the enum is used for Payment methods",
      "enum": [
        "Check",
        "CentrallyPaid",
        "Eft"
      ]
    },
    "bankAccounts": {
      "type": "object",
      "description": "Request object to edit Bank Accounts",
      "properties": {
        "bankAccounts": {
          "description": "Details of the Bank Accounts to edit",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "updateDefault": {
          "description": "Update default confirmation response",
          "type": "boolean"
        },
        "updateDefaultForCurrency": {
          "description": "Update default for currency confirmation response",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardInfo": {
      "type": "object",
      "properties": {
        "creditCard": {
          "description": "Credit card information.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeServiceTaxes": {
      "type": "object",
      "properties": {
        "currencyExchangeServiceTaxes": {
          "$ref": "#/definitions/currencyExchangeServiceTaxesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeServiceTaxesType": {
      "type": "array",
      "description": "List of currency exchange service taxes",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyExchangeServiceTaxType"
      }
    },
    "currencyExchangeServiceTaxType": {
      "type": "object",
      "description": "Currency exchange service tax identification details",
      "properties": {
        "hotel": {
          "description": "Property associated with currency exchange service tax",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Currency exchange service tax code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amountFrom": {
          "description": "Starting value of exchange equivalent range",
          "type": "number"
        },
        "amountTo": {
          "description": "End value of exchange equivalent range",
          "type": "number"
        },
        "percentage": {
          "description": "Percentage of local currency",
          "type": "number"
        },
        "minServiceTax": {
          "description": "Minimum service tax to be collected",
          "type": "number"
        },
        "maxServiceTax": {
          "description": "Maximimum service tax to be collected",
          "type": "number"
        },
        "baseAmount": {
          "description": "Base tax basis of local currency. This is normally configured to the resulting tax basis of the previous tax slab range.",
          "type": "number"
        }
      }
    },
    "customTaxTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Collection of Custom Tax Types.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesType": {
      "type": "array",
      "description": "List of Custom Tax Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customTaxTypeType"
      }
    },
    "customTaxTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        }
      }
    },
    "customTaxTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be created.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be changed.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyPlanCodes": {
      "type": "object",
      "properties": {
        "dailyPlanCodes": {
          "description": "Collection of daily plan codes.",
          "$ref": "#/definitions/dailyPlanCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyPlanCodesType": {
      "type": "array",
      "description": "Details for daily plan code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyPlanCodeType"
      }
    },
    "dailyPlanCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "paymentMethodValidationRuleType": {
      "type": "object",
      "description": "Payment method card validation rules.",
      "properties": {
        "length": {
          "description": "Valid lengths of card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "prefix": {
          "description": "Valid card number prefix.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "ranges": {
          "description": "Collection of card number ranges.",
          "$ref": "#/definitions/cardRangesType"
        },
        "formula": {
          "description": "Formula used for card validation. Only valid in case of user defined validation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rule": {
          "description": "Defines rules to be used for card validation.",
          "$ref": "#/definitions/cardValidationRuleTypeType"
        }
      }
    },
    "cardRangesType": {
      "type": "array",
      "description": "Card number start and end range.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cardRangeType"
      }
    },
    "cardRangeType": {
      "type": "object",
      "description": "Card number start and end range.",
      "properties": {
        "from": {
          "description": "Starting range of the card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "to": {
          "description": "End range of the card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "cardValidationRuleTypeType": {
      "type": "string",
      "description": "Defines rules to be used for card validation.",
      "enum": [
        "Mod7",
        "Mod10",
        "Udef",
        "Novalid"
      ]
    },
    "exchangeRateType": {
      "type": "object",
      "description": "Exchange rate configuration type.",
      "properties": {
        "hotelId": {
          "description": "Property where exchange rate is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currencyExchangeType"
          }
        },
        "currency": {
          "description": "Currency code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "baseCurrency": {
          "description": "Exchange rate base currency.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "beginDate": {
          "description": "Date on which the rate is to become active.",
          "type": "string",
          "format": "date-time"
        },
        "buyRate": {
          "description": "Buy Rate for foreign currency.",
          "type": "number"
        },
        "buyCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency buy operation.",
          "type": "number"
        },
        "sellRate": {
          "description": "Sell Rate for foreign currency.",
          "type": "number"
        },
        "sellCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency sell operation.",
          "type": "number"
        },
        "comment": {
          "description": "Comments associated with the exchange rate.",
          "type": "string"
        },
        "status": {
          "description": "Status past, present, or future.",
          "$ref": "#/definitions/statusTypes"
        }
      }
    },
    "currencyExchangeType": {
      "type": "string",
      "description": "E-certificate conversion.",
      "enum": [
        "Cash",
        "Settlement",
        "Posting",
        "Check",
        "TACommission",
        "Membership",
        "Certificate"
      ]
    },
    "statusTypes": {
      "type": "string",
      "description": "Defines status in terms of time.",
      "enum": [
        "Future",
        "Current",
        "Past"
      ]
    },
    "expenseArrangementCodes": {
      "type": "object",
      "properties": {
        "expenseArrangementCodes": {
          "description": "Collection of expense arrangement codes.",
          "$ref": "#/definitions/expenseArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "expenseArrangementCodesType": {
      "type": "array",
      "description": "Details for expense arrangement code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/expenseArrangementCodeType"
      }
    },
    "expenseArrangementCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "fiscalFolioParameters": {
      "type": "object",
      "properties": {
        "fiscalFolioParameters": {
          "description": "Collection of Fiscal Folio Parameter configurations.",
          "$ref": "#/definitions/fiscalFolioParametersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioParametersType": {
      "type": "array",
      "description": "Holds Fiscal Folio Parameter details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalFolioParameterType"
      }
    },
    "fiscalFolioParameterType": {
      "type": "object",
      "description": "Provides information about the Fiscal Folio Parameter.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "partner": {
          "description": "Fiscal folio parameter associated with Partner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "code": {
          "description": "Code of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "description": {
          "description": "Description of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Parameter value of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data.",
          "type": "boolean"
        }
      }
    },
    "folioTypeLegendMappingsConfigDetails": {
      "type": "object",
      "description": "Response object for fetch folio type legend mapping.",
      "properties": {
        "legends": {
          "$ref": "#/definitions/folioTypeLegendMappingsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingsConfigType": {
      "type": "array",
      "description": "Details about folio type legened mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioTypeLegendMappingConfigType"
      }
    },
    "folioTypeLegendMappingConfigType": {
      "type": "object",
      "description": "Folio type legened mapping information.",
      "properties": {
        "hotelId": {
          "description": "Property associated with folio type legend mapping",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "legendCode": {
          "description": "Legend code to which folio types attached.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioType": {
          "description": "Folio type attached to the legend.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioTypeDescription": {
          "description": "Folio type description attached to the legend.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "folioTypeLegendMappingConfigCriteria": {
      "type": "object",
      "description": "Request object to create folio type legend mapping information.",
      "properties": {
        "criteria": {
          "description": "Criteria to create folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigToBeChanged": {
      "type": "object",
      "description": "Request object to edit folio type legend mapping information.",
      "properties": {
        "criteria": {
          "description": "Criteria to edit folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigStatus": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionGenerates": {
      "type": "object",
      "properties": {
        "transactionGenerates": {
          "description": "Transaction generates to be created.",
          "$ref": "#/definitions/hotelTransactionGeneratesSetupType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionGeneratesSetupType": {
      "type": "object",
      "description": "Defines the Generates Setup and its Calculation Rules.",
      "properties": {
        "addBaseAmtTo": {
          "description": "Defines the buckets the base or posting amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "generates": {
          "description": "Defines the Generates and its Calculation Rules.",
          "$ref": "#/definitions/generatesType"
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionGroup": {
          "description": "Transaction group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Transaction sub group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "generateCalculationBucketsType": {
      "type": "object",
      "description": "Defines the buckets the generated amount can be added to.",
      "properties": {
        "bucket1": {
          "description": "Generate Calculation Bucket1.",
          "type": "boolean"
        },
        "bucket2": {
          "description": "Generate Calculation Bucket2.",
          "type": "boolean"
        },
        "bucket3": {
          "description": "Generate Calculation Bucket3.",
          "type": "boolean"
        }
      }
    },
    "generatesType": {
      "type": "array",
      "description": "Defines the Generate and its Calculation Rules.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/generateType"
      }
    },
    "generateType": {
      "type": "object",
      "description": "Defines the Generate and its Calculation Rules",
      "properties": {
        "generateId": {
          "description": "Unique ID of the Generate.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "rule": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/generateCalcRuleType"
        },
        "addGeneratedAmtTo": {
          "description": "Defines the buckets the generated amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "level": {
          "description": "Defines the level from which the generates was created.",
          "$ref": "#/definitions/generateLevelType"
        },
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "generateCalcRuleType": {
      "type": "object",
      "description": "Defines the Calculation Rule for the generate.",
      "properties": {
        "percentage": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/percentageGenerateType"
        },
        "flatAmount": {
          "description": "Defines Flat Amount rule for generates.",
          "$ref": "#/definitions/flatAmtGenerateType"
        },
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionName": {
          "description": "The function name of the User Defined Function used to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionArguments": {
          "description": "The function argument name-value combination accepted by the User Defined Function.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "taxTypeBased": {
          "description": "Defines TaxType Based Generat Calculation.",
          "$ref": "#/definitions/taxTypesGenerateType"
        },
        "roundingMethod": {
          "description": "Defines the rounding method to be used.",
          "$ref": "#/definitions/generateRoundingMethodType"
        },
        "posting": {
          "description": "Advance Generates posting rules, this is only applicable when Advance Generates parameter is active.",
          "$ref": "#/definitions/generatePostingRuleType"
        }
      }
    },
    "percentageGenerateType": {
      "type": "object",
      "description": "Defines percentage rule for generates.",
      "properties": {
        "amount": {
          "description": "Percentage Amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "calculatedOn": {
          "description": "Calculation bucket the percentage generates are calculated against.",
          "$ref": "#/definitions/generateCalcBucketType"
        },
        "useTaxBracket": {
          "description": "Determines if tax bracket calculations are to apply to generates.",
          "type": "boolean"
        }
      }
    },
    "generateCalcBucketType": {
      "type": "string",
      "description": "Generates calculation bucket/group. Percentage generates are calculated against amount in one of the the calculation bucket.",
      "enum": [
        "Base",
        "Bucket1",
        "Bucket2",
        "Bucket3"
      ]
    },
    "flatAmtGenerateType": {
      "type": "object",
      "description": "Defines Flat Amount rule for generates.",
      "properties": {
        "amount": {
          "description": "Flat Amount of the generate.",
          "type": "number"
        }
      }
    },
    "functionArgumentsType": {
      "type": "array",
      "description": "Collection of function arguments and their corresponding values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionArgumentType": {
      "type": "object",
      "description": "This type provided details of a function argument and the value it holds.",
      "properties": {
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "taxTypesGenerateType": {
      "type": "array",
      "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxTypeGenerateType"
      }
    },
    "taxTypeGenerateType": {
      "type": "object",
      "description": "Defines the Calculation Rules for the Tax Type",
      "properties": {
        "schedule": {
          "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/taxTypeGenerateScheduleType"
          }
        },
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "taxTypeGenerateScheduleType": {
      "type": "object",
      "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
      "properties": {
        "rule": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/taxTypeCalcRuleType"
        },
        "startDate": {
          "description": "Date when this schedule will be effective.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "taxTypeCalcRuleType": {
      "type": "object",
      "description": "Defines the Calculation Rule for the generate.",
      "properties": {
        "percentage": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/percentageGenerateType"
        },
        "flatAmount": {
          "description": "Defines Flat Amount rule for generates.",
          "$ref": "#/definitions/flatAmtGenerateType"
        },
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "$ref": "#/definitions/uDFGenerateType"
        },
        "doNotPost": {
          "description": "Existence of this element indicates that generate will not be calculated/posted.",
          "$ref": "#/definitions/doNotPostGenerateType"
        },
        "roundingMethod": {
          "description": "Defines the rounding method to be used.",
          "$ref": "#/definitions/generateRoundingMethodType"
        }
      }
    },
    "uDFGenerateType": {
      "type": "object",
      "description": "Defines UDF rule for generates.",
      "properties": {
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionName": {
          "description": "The function name of the User Defined Function used to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionArguments": {
          "description": "The function argument name-value combination accepted by the User Defined Function.",
          "$ref": "#/definitions/functionArgumentsType"
        }
      }
    },
    "doNotPostGenerateType": {
      "type": "object",
      "description": "Existance of this type indicates that the generate will not be effective. This is mainly used on Tax Type based generates rule.",
      "properties": {}
    },
    "generateRoundingMethodType": {
      "type": "string",
      "description": "This type is only available for properties with zero decimals. If a property is using decimal points, this type will not be available. The rounding methods which can be specified are: UP, DOWN or NONE.",
      "enum": [
        "Up",
        "Down",
        "None"
      ]
    },
    "generatePostingRuleType": {
      "type": "object",
      "description": "Advance Generates posting rules.",
      "properties": {
        "applicableDays": {
          "description": "Generates are posted/applicable only for first Applicable Days of the stay.",
          "type": "integer"
        },
        "adjustmentType": {
          "description": "Indicates type of adjustment procedure required, if there is a need due to the ApplicableDays setting.",
          "$ref": "#/definitions/generateAdjustmentTypeType"
        }
      }
    },
    "generateAdjustmentTypeType": {
      "type": "string",
      "description": "Generates calculation bucket/group. Percentage generates are calculated against amount in one of the the calculation bucket.",
      "enum": [
        "DuringEndOfDay",
        "PromptAtCheckOut",
        "NoAdjustment"
      ]
    },
    "generateLevelType": {
      "type": "string",
      "description": "Defines the level from which the generates was created.",
      "enum": [
        "Group",
        "SubGroup",
        "TransactionCode"
      ]
    },
    "adjustmentCodes": {
      "type": "object",
      "properties": {
        "adjustmentCodes": {
          "description": "Collection of Adjustment Code configurations.",
          "$ref": "#/definitions/adjustmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "adjustmentCodesType": {
      "type": "array",
      "description": "Holds Adjustment Code details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/adjustmentCodeType"
      }
    },
    "adjustmentCodeType": {
      "type": "object",
      "description": "Provides information about Adjustment Codes.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Adjustment Reason Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "codeType": {
          "description": "Correction type. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
          "$ref": "#/definitions/adjustmentReasonCodeType"
        },
        "description": {
          "description": "Adjustment Reason Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amount": {
          "description": "Amount or Percentage Value for Adjustment Code",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bIRGuest": {
          "description": "BIR Guest Type in Adjustment Codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountOrPercentageFlag": {
          "description": "Adjustment Code Calculation Type, valid values are Amount and Percentage.",
          "$ref": "#/definitions/amountOrPercentage"
        }
      }
    },
    "adjustmentReasonCodeType": {
      "type": "string",
      "description": "Defines values for Adjustment reason codes. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
      "enum": [
        "Adjustment",
        "Correction",
        "Deletion",
        "ServiceRecovery",
        "CreditBill"
      ]
    },
    "amountOrPercentage": {
      "type": "string",
      "description": "Adjustment Code calculation type based on details.",
      "enum": [
        "Amount",
        "Percent"
      ]
    },
    "paymentMethodsType": {
      "type": "array",
      "description": "Holds the various types of payment methods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentMethodType"
      }
    },
    "paymentMethodType": {
      "type": "object",
      "description": "Provides information about the payment methods. CreditCardCode and CreditCardType help to determine if EFTs are allowed.",
      "properties": {
        "description": {
          "description": "Description of the payment method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "paymentCard": {
          "description": "Contains credit card information.",
          "$ref": "#/definitions/paymentCardType"
        },
        "paymentMethodTransactionInfo": {
          "description": "Contains summary information of the transaction.",
          "$ref": "#/definitions/paymentMethodTransactionInfoType"
        },
        "paymentMethodUsage": {
          "description": "Contains various usage options permitted for the payment method.",
          "$ref": "#/definitions/paymentMethodUsageType"
        },
        "creditLimit": {
          "description": "Contains the credit limit of a transaction.",
          "$ref": "#/definitions/creditLimitType"
        },
        "hotelId": {
          "description": "Property from which the payment method belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Defines the unique identifier for this payment method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculatePoints": {
          "description": "Defines when the points are to be calculated.",
          "$ref": "#/definitions/calculatePointsType"
        },
        "inactive": {
          "description": "Indicates whether the payment method is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "paymentCardType": {
      "type": "object",
      "description": "Contains credit card information.",
      "properties": {
        "cardUsageRules": {
          "description": "Contains valid usages of the card.",
          "$ref": "#/definitions/cardUsageRulesType"
        },
        "validation": {
          "description": "Contains rules to validate card information.",
          "$ref": "#/definitions/paymentMethodValidationRuleType"
        },
        "merchantNumber": {
          "description": "The merchant number to use when settling or transmitting credit card information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "option": {
          "description": "Switch card options.",
          "$ref": "#/definitions/cardOptionType"
        },
        "cardType": {
          "description": "Internal code of credit card type.",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "User defined credit card type if credit card type from a defined list is not provided.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        }
      }
    },
    "cardUsageRulesType": {
      "type": "object",
      "description": "Provides information on the various authorization options for a given card type .",
      "properties": {
        "authorizationAtCheckin": {
          "description": "Indicates if this payment method can be used for Authorization at check in.",
          "type": "boolean"
        },
        "authorizationDuringStay": {
          "description": "Indicates if this payment method can be used for Authorization during stay.",
          "type": "boolean"
        },
        "authorizationReversal": {
          "description": "Indicates if this payment method can be used for Authorization reversal can be done.",
          "type": "boolean"
        },
        "authorizationSettlementAtCheckout": {
          "description": "Indicates if this payment method can be used for Authorization settlement can happen during checkout.",
          "type": "boolean"
        },
        "cVVCheck": {
          "description": "Indicates if this payment method needs CVV check.",
          "type": "boolean"
        },
        "addressVerification": {
          "description": "Indicates if this payment method requires an address verification.",
          "type": "boolean"
        },
        "promptAtCheckin": {
          "description": "Indicates if this payment method needs a prompt during check in.",
          "type": "boolean"
        },
        "chipAndPin": {
          "description": "Indicates if this payment method is a chip and pin.",
          "type": "boolean"
        }
      }
    },
    "cardOptionType": {
      "type": "object",
      "description": "Switch card options.",
      "properties": {
        "requireIssueNumber": {
          "description": "Indicates whether issue number is mandatory or not.",
          "type": "boolean"
        },
        "requireStartDate": {
          "description": "Indicates whether start date is mandatory or not.",
          "type": "boolean"
        },
        "either": {
          "description": "Indicates that either Issue Number or Start Date is sufficient.",
          "type": "boolean"
        }
      }
    },
    "paymentMethodTransactionInfoType": {
      "type": "object",
      "description": "Provides information about the transactions including the transaction code, group, subgroup and the posting amount.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingAmount": {
          "$ref": "#/definitions/postingAmountType"
        },
        "surcharge": {
          "description": "Surcharge information regarding the payment method.",
          "$ref": "#/definitions/surchargeType"
        },
        "transactionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionDisplay": {
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        }
      }
    },
    "postingAmountType": {
      "type": "object",
      "properties": {
        "minimumAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "maximumAmount": {
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "surchargeType": {
      "type": "object",
      "description": "Surcharge information regarding the payment configuration.",
      "properties": {
        "minimum": {
          "description": "Indicates the minimum credit card transaction amount for which the surcharge applies.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "Indicates the percentage amount for a credit card transaction.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "paymentMethodUsageType": {
      "type": "object",
      "description": "This provides information about the various usage options permitted for the given payment method.",
      "properties": {
        "billing": {
          "description": "Indicates if the payment method can be used for Guest Billing",
          "type": "boolean"
        },
        "accountsReceivable": {
          "description": "Indicates if this payment method can be used for Accounts Receivables.",
          "type": "boolean"
        },
        "deposit": {
          "description": "Indicates if this payment method can be used for Deposit payments.",
          "type": "boolean"
        },
        "compAccounting": {
          "description": "Indicates if this payment method can be used for Comp Accounting.",
          "type": "boolean"
        },
        "reservation": {
          "description": "Indicates if this payment method can be used as a Reservation payment method.",
          "type": "boolean"
        },
        "posting": {
          "description": "Indicates if postings can be manually added to the Reservation when this payment method is used.",
          "type": "boolean"
        },
        "cash": {
          "description": "Indicates if this payment method is a Cash type payment method.",
          "type": "boolean"
        }
      }
    },
    "creditLimitType": {
      "type": "object",
      "properties": {
        "creditLimit": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "calculatePointsType": {
      "type": "string",
      "description": "Defines when the points are to be calculated.",
      "enum": [
        "Always",
        "Prompt",
        "Never"
      ]
    },
    "paymentMethodsInfo": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "description": "Collection of payment methods.",
          "$ref": "#/definitions/paymentMethodsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypes": {
      "type": "object",
      "properties": {
        "taxTypes": {
          "description": "Collection of Tax Type configurations.",
          "$ref": "#/definitions/taxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypesType": {
      "type": "array",
      "description": "Holds Tax Type details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxTypeType"
      }
    },
    "commissionCodeDetail": {
      "type": "object",
      "description": "Response object for fetching commission code details.",
      "properties": {
        "commissionCodeDetail": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodeDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodeDetailType": {
      "type": "object",
      "description": "Commission code detail.",
      "properties": {
        "commissionCodeInfo": {
          "description": "Commission code details.",
          "$ref": "#/definitions/commissionCodeInfoType"
        }
      }
    },
    "compTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Comp Types.",
      "properties": {
        "compTypes": {
          "description": "Collection of Comp Types.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "futurePastExchangeRates": {
      "type": "array",
      "description": "Collection of exchange rates and their information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeRateType"
      }
    },
    "trackItActionsDetails": {
      "type": "object",
      "description": "Response object for fetching Track it Actions.",
      "properties": {
        "trackItActions": {
          "description": "Collection of Track it Actions.",
          "$ref": "#/definitions/trackItActionsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItActionsConfigType": {
      "type": "array",
      "description": "Track It Action Collection element.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItActionConfigType"
      }
    },
    "trackItActionConfigType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        },
        "status": {
          "description": "Status of the Track it Action.",
          "$ref": "#/definitions/trackItActionStatusType"
        }
      },
      "description": "Track It Action Information Type."
    },
    "trackItGroupType": {
      "type": "object",
      "properties": {
        "valet": {
          "description": "Indicates if the Track It belongs to the Valet Group.",
          "type": "boolean"
        },
        "parcel": {
          "description": "Indicates if the Track It belongs to the Parcel Group.",
          "type": "boolean"
        },
        "baggage": {
          "description": "Indicates if the Track It belongs to the Baggage Group.",
          "type": "boolean"
        },
        "lost": {
          "description": "Indicates if the Track It belongs to the Lost Group.",
          "type": "boolean"
        }
      }
    },
    "trackItActionStatusType": {
      "type": "string",
      "description": "Defined Values for Status of the Track it Action.",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "trackItLocationsDetails": {
      "type": "object",
      "description": "Response object for fetching Track it Locations.",
      "properties": {
        "trackItLocations": {
          "description": "Collection of Track it Locations.",
          "$ref": "#/definitions/trackItLocationsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItLocationsConfigType": {
      "type": "array",
      "description": "Track It Locations Collection element.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLocationConfigType"
      }
    },
    "trackItLocationConfigType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        }
      },
      "description": "Track It Location Information Type."
    },
    "calculatedPosting": {
      "type": "object",
      "properties": {
        "result": {
          "description": "List of charges that will be posted against the transaction code based from the test criteria.",
          "$ref": "#/definitions/calculatePostingResult"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "calculatePostingResult": {
      "type": "object",
      "description": "List of charges that will be posted against the transaction code based from the test criteria.",
      "properties": {
        "charges": {
          "description": "Charges that will be posted based from the criteria defined.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/calculatePostingCharge"
          }
        },
        "totalAmount": {
          "description": "The full amount that would be posted.",
          "type": "number"
        }
      }
    },
    "calculatePostingCharge": {
      "type": "object",
      "description": "Corresponds to each charge that will be posted against the transaction code based from the test criteria.",
      "properties": {
        "hotelId": {
          "description": "Hotel code of the associated transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "The associated transaction code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "level": {
          "description": "Defines the level from which the transaction generates was created.",
          "$ref": "#/definitions/generateLevelType"
        },
        "amount": {
          "description": "The amount that will be posted against the transaction code.",
          "type": "number"
        },
        "formula": {
          "description": "The formula that is used to calculate the generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "bucket": {
          "description": "The amount that will be posted for each bucket.",
          "$ref": "#/definitions/postingBucket"
        },
        "sequence": {
          "description": "The order in which the charge will be posted. The base posting will always be 0 (zero) followed by generates associated in order of which they were created.",
          "type": "integer"
        },
        "basePosting": {
          "description": "Indicates whether it is the base posting.",
          "type": "boolean"
        }
      }
    },
    "postingBucket": {
      "type": "object",
      "description": "Holds the amount that will be stored in each bucket after posting.",
      "properties": {
        "bucket1": {
          "description": "Holds amount for sub-total 1.",
          "type": "number"
        },
        "bucket2": {
          "description": "Holds amount for sub-total 2.",
          "type": "number"
        },
        "bucket3": {
          "description": "Holds amount for sub-total 3.",
          "type": "number"
        }
      }
    },
    "hotelTransactionCode": {
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "Detailed information regarding transaction code.",
          "$ref": "#/definitions/hotelTransactionCodeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionCodeType": {
      "type": "object",
      "description": "Transaction Code configuration details.",
      "properties": {
        "classification": {
          "description": "Transaction Code classification details.",
          "$ref": "#/definitions/trxCodeClassificationType"
        },
        "description": {
          "description": "Transaction Code descriptions.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "paymentSetup": {
          "description": "Payment Transaction Code configuration details.",
          "$ref": "#/definitions/paymentTrxSetupType"
        },
        "trxSetup": {
          "description": "Transaction code setup/config details.",
          "$ref": "#/definitions/trxSetupType"
        },
        "adjustmentCode": {
          "description": "Transaction code to be used to make adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionAdjustments": {
          "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionAdjustmentType"
          }
        },
        "serviceRecoveryAdjustmentCode": {
          "description": "Transaction code to be used to make service recovery adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amounts": {
          "description": "Default Amounts for the Transaction Codes.",
          "$ref": "#/definitions/trxCodeAmountsType"
        },
        "generatesSetup": {
          "description": "Transaction code's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "gLMapping": {
          "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
          "$ref": "#/definitions/gLMappingType"
        },
        "associatedTransactionCodes": {
          "description": "Code and description of the standard transaction code associated to this comp transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "allowServiceRecovery": {
          "description": "Flag to identify if this transaction code already used as service recovery adjustment code.",
          "type": "boolean"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "mappingCodes": {
          "description": "Mapping code and value attached to Transaction Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/exportMappingLinkedCodeType"
          }
        },
        "code": {
          "description": "Unique Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTransaction": {
          "description": "If true indicates this transaction codes is for Comp Accounting.",
          "type": "boolean"
        },
        "printTrxReceipt": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel's Transaction Code configuration detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "trxCodeClassificationType": {
      "type": "object",
      "description": "Transaction Code Classification details.",
      "properties": {
        "type": {
          "description": "Transaction Type.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "transactionType": {
          "description": "Transaction Code Type detail.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Transaction Code Type.",
              "$ref": "#/definitions/transactionCodeTypeType"
            },
            "taxCode": {
              "description": "Tax Code if the transaction Code if it is of type Tax.",
              "type": "integer"
            }
          }
        },
        "group": {
          "description": "Group the transaction code belongs to..",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "subgroup": {
          "description": "Subgroup the transaction code belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "fiscalTransactionType": {
          "description": "Transaction code type for fiscal printing purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "cashieringTransactionTypeType": {
      "type": "string",
      "description": "Wrapper Transaction Type.",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "transactionCodeTypeType": {
      "type": "string",
      "description": "Other Charges Transaction.",
      "enum": [
        "Lodging",
        "FoodAndBeverage",
        "Telephone",
        "Minibar",
        "Tax",
        "NonRevenue",
        "Others"
      ]
    },
    "paymentTrxSetupType": {
      "type": "object",
      "description": "Payment Transaction Code setup details.",
      "properties": {
        "usage": {
          "description": "Payment Transaction Code usage information.",
          "$ref": "#/definitions/paymentTrxUsageType"
        },
        "card": {
          "description": "Card payment setup information.",
          "$ref": "#/definitions/cardPaymentTrxSetupType"
        },
        "iRS8300Reporting": {
          "description": "True indicates the Transaction Code payment will be reposted to IRS according to the rule specified by IRS.",
          "type": "boolean"
        },
        "roundingFactor": {
          "description": "True indicates the Transaction Code posting will have a rounding effect.",
          "type": "boolean"
        },
        "generateTaxInvoice": {
          "description": "Indicates if the Transaction Code payment will generate a Tax Invoice at the time of making a payment. Tax Invoices are used in Thailand.",
          "type": "boolean"
        },
        "paymentType": {
          "description": "Type of payment this transaction code represents.",
          "$ref": "#/definitions/paymentTrxCodeTypeType"
        }
      }
    },
    "paymentTrxUsageType": {
      "type": "object",
      "description": "Payment Transaction Code usage details.",
      "properties": {
        "aR": {
          "description": "True indicates the payment Transaction Code is used for AR payments.",
          "type": "boolean"
        },
        "cashier": {
          "description": "Indicates whether Profiles are shared across the Hotels within the chain or not.",
          "type": "boolean"
        },
        "comp": {
          "description": "True indicates the payment Transaction Code is used for Comp payments.",
          "type": "boolean"
        },
        "deposit": {
          "description": "True indicates the payment Transaction Code is used for deposits.",
          "type": "boolean"
        },
        "interHotelPayment": {
          "description": "True indicates the payment Transaction Code inter hotel payments.",
          "type": "boolean"
        },
        "interHotelDeposit": {
          "description": "True indicates the payment Transaction Code is used for inter hotel deposits.",
          "type": "boolean"
        }
      }
    },
    "cardPaymentTrxSetupType": {
      "type": "object",
      "description": "Card Payment Transaction Code configuration details.",
      "properties": {
        "processingType": {
          "description": "Type of processing for the payment.",
          "$ref": "#/definitions/cardPaymentProcessingType"
        },
        "accountReceivable": {
          "description": "AR account information to route the payments.",
          "$ref": "#/definitions/aRAccountRefType"
        },
        "commission": {
          "description": "Commission percentage on the payment.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "displayCode": {
          "description": "Display code of the payment Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        },
        "interfaceCode": {
          "description": "Card Payment's internal interface code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "cardPaymentProcessingType": {
      "type": "string",
      "description": "Manual Processing.",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "aRAccountRefType": {
      "type": "object",
      "description": "AR account Info.",
      "properties": {
        "name": {
          "description": "AR account name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "paymentTrxCodeTypeType": {
      "type": "string",
      "description": "Other Payment Type Transaction.",
      "enum": [
        "Cash",
        "Check",
        "CreditCard",
        "Others"
      ]
    },
    "trxSetupType": {
      "type": "object",
      "description": "Transaction Code setup details.",
      "properties": {
        "generatesType": {
          "description": "Short Summary information of the Chain and it's Hubs and Hotels.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "taxInclusive": {
          "description": "True indicates that the tax is inclusive in the generate.",
          "type": "boolean"
        },
        "revenue": {
          "description": "True indicates the Transaction Code is to be considered as revenue to the Hotel.",
          "type": "boolean"
        },
        "manualPosting": {
          "description": "True indicates the Transaction Code is allowed to be posted manually.",
          "type": "boolean"
        },
        "useForPaidout": {
          "description": "True indicates the Transaction Code is used for Paid outs.",
          "type": "boolean"
        },
        "redeemMembershipPoints": {
          "description": "True indicates the Transaction Code posting are redeemable against the loyalty program points.",
          "type": "boolean"
        },
        "includeInDepositRule": {
          "description": "True indicates the Transaction Code posting will be included in Deposit/Cencallation rule calculations.",
          "type": "boolean"
        },
        "depositPostingOnly": {
          "description": "True indicates the Transaction Code is used for deposit postings only.",
          "type": "boolean"
        },
        "postingRule": {
          "description": "Deposit posting associated with the transaction code.",
          "type": "boolean"
        },
        "depositType": {
          "description": "Represents the type of deposit with possible values of \"RECEIPT\" or \"FOLIO\".",
          "$ref": "#/definitions/depositTypeType"
        },
        "checkNoRequired": {
          "description": "True indicates the Transaction Code requires the Check Number for posting.",
          "type": "boolean"
        },
        "interHotelSales": {
          "description": "True indicates the Transaction Code is used for cross posting across the hotels/.",
          "type": "boolean"
        },
        "postCovers": {
          "description": "True indicates the Transaction Code is used to post covers.",
          "type": "boolean"
        },
        "nonTaxable": {
          "description": "True indicates the Transaction Code is non taxable.",
          "type": "boolean"
        },
        "inactive": {
          "description": "True indicates the Transaction Code is inactive.",
          "type": "boolean"
        },
        "ownershipStatus": {
          "description": "Protected by the Property or Corporate level",
          "$ref": "#/definitions/trxOwnershipType"
        },
        "serviceType": {
          "description": "Service Type for the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountingCode": {
          "description": "Accounting Code for the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "quantityCode": {
          "description": "Quantity Code for the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "depositTypeType": {
      "type": "string",
      "description": "Represents the Folio Deposit Type.",
      "enum": [
        "Receipts",
        "Folios"
      ]
    },
    "trxOwnershipType": {
      "type": "string",
      "description": "Protected by the Property level",
      "enum": [
        "Corporate",
        "Property"
      ]
    },
    "transactionAdjustmentType": {
      "type": "object",
      "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
      "properties": {
        "adjustmentReasonCode": {
          "description": "Adjustment reason Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "adjustmentTransactionCode": {
          "description": "Adjustment Transaction Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "trxCodeAmountsType": {
      "type": "object",
      "description": "Transaction Code's default amount details.",
      "properties": {
        "defaultPrice": {
          "description": "Default price of the Transaction Code.",
          "type": "number"
        },
        "minAmount": {
          "description": "Minimum amount to be posted on this Transaction Code.",
          "type": "number"
        },
        "maxAmount": {
          "description": "Maximum Amount to be posted on this Transaction Code.",
          "type": "number"
        },
        "currency": {
          "description": "Default currency code for the amounts.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "generatesSetupType": {
      "type": "object",
      "description": "Defines the Generates Setup and its Calculation Rules.",
      "properties": {
        "addBaseAmtTo": {
          "description": "Defines the buckets the base or posting amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "generates": {
          "description": "Defines the Generates and its Calculation Rules.",
          "$ref": "#/definitions/generatesType"
        }
      }
    },
    "gLMappingType": {
      "type": "object",
      "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
      "properties": {
        "itemId": {
          "description": "Hilton Department Group Item Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "departmentCode": {
          "description": "Hilton Department Group Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountCode": {
          "description": "Hilton GL Account code Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountDescription": {
          "description": "Hilton GL Account code Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "currencyCode": {
          "description": "Hilton GL Account Currency Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "statCode": {
          "description": "Hilton GL Account StatCode",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "productCode": {
          "description": "Hilton Product Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chargeCode": {
          "description": "Hilton GL Charge Category Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountingCategory": {
          "description": "Hilton Account Category Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "exportMappingLinkedCodeType": {
      "type": "object",
      "description": "Details of linked code.",
      "properties": {
        "linkedCode": {
          "description": "Linked code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "exportMappingId": {
          "description": "Mapping id associated with linked code.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "exportMappingCode": {
          "description": "Mapping code attached to linked code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "defaultMappedValue": {
          "description": "Default value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mappedValue": {
          "description": "Linked code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mappingTypeDescription": {
          "description": "Description of the export mapping type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mappingCodeDescription": {
          "description": "Description of the export mapping code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "lovName": {
          "description": "Name of the LOV group to be used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "hotelTransactionGroupType": {
      "type": "object",
      "description": "Transaction Group configuration information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "generatesSetup": {
          "description": "Transaction group's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "generatesAvailable": {
          "description": "Flag to determine whether generates are available or not",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code where the Transaction Group is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelTransactionSubgroupType": {
      "type": "object",
      "description": "Transaction Subgroup configuration Information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Subgroup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "Transaction Subroup Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "group": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newGroup": {
          "description": "Use this attribute to update the existing group during change operation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs. This is an information only attribute.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "generatesSetup": {
          "description": "Transaction subgroup's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "generatesAvailable": {
          "description": "Flag to determine whether generates are available or not",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code where the Transaction Subgroup is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "operaControlSequences": {
      "type": "object",
      "properties": {
        "controlSequences": {
          "description": "Collection of Opera Control Sequence details.",
          "$ref": "#/definitions/controlSequencesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "controlSequencesType": {
      "type": "array",
      "description": "List of Control Sequence details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/controlSequenceType"
      }
    },
    "controlSequenceType": {
      "type": "object",
      "description": "Provides information about the Opera Control Sequence",
      "properties": {
        "hotelId": {
          "description": "Control Sequence code associated with Hotel",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "controlCode": {
          "description": "Identifier of Opera Control Sequence",
          "$ref": "#/definitions/controlSequenceCodeType"
        },
        "folioType": {
          "description": "Opera Control Sequence associated with folio",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "minimum": {
          "description": "Minimum value of Opera Control Sequence",
          "type": "number"
        },
        "maximum": {
          "description": "Maximum value of Opera Control Sequence",
          "type": "number"
        },
        "countryCode": {
          "description": "Opera Control Sequence belongs to country",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequenceValue": {
          "description": "Current Sequence Value for the OPERA Sequence",
          "type": "number"
        }
      }
    },
    "controlSequenceCodeType": {
      "type": "string",
      "description": "Indicates control sequences used for bills. Eg. CREDIT_BILL, FATTURA etc.",
      "enum": [
        "AcknowledgeReceipt",
        "Statement",
        "Folio",
        "OfficialReceipt",
        "Bill",
        "ArInvoice"
      ]
    },
    "revenueBucketCodes": {
      "type": "object",
      "properties": {
        "revenueBucketCodes": {
          "description": "Collection of Revenue Bucket Codes configurations.",
          "$ref": "#/definitions/revenueBucketCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketCodesType": {
      "type": "array",
      "description": "Details for Revenue Bucket codes along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueBucketCodeType"
      }
    },
    "revenueBucketCodeType": {
      "type": "object",
      "description": "This gives detailed information about a trx code arrangement.",
      "properties": {
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueBucketType": {
          "description": "This holds Revenue Bucket Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pointsEligible": {
          "description": "Bucket is eligible for membership points",
          "type": "boolean"
        },
        "bucketValue": {
          "description": "Stores the default value for the arrangement code for revenue buckets in order to group transaction codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "bucketType": {
          "description": "Flag to identify Fiscal related bucket types.",
          "$ref": "#/definitions/bucketTypeType"
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "bucketTypeType": {
      "type": "string",
      "description": "Fiscal Bucket Type.",
      "enum": [
        "Default",
        "Fiscal"
      ]
    },
    "routingInstructions": {
      "type": "object",
      "properties": {
        "routingInstructions": {
          "description": "Collection of routing instructions fetched.",
          "$ref": "#/definitions/configRoutingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configRoutingInstructionsType": {
      "type": "array",
      "description": "This type holds a collection of routing instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configRoutingInstructionType"
      }
    },
    "configRoutingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Covers, Limit, Percent. It is not mandatory to set value of either. This field is available when the Cashiering>Routing Limits application function is set to Y.",
      "properties": {
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "covers": {
          "description": "Number of covers for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "limit": {
          "description": "Allowable credit amount for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "percent": {
          "description": "The routing limit percentage allowed for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "daysOfWeek": {
          "description": "The selected days of the week indicate the days which will be selected on the Routing Instructions screen when this routing code is chosen for the routing instructions.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "daily": {
          "description": "Signifies whether a separate routing instruction has to be generated for each day of the stay.",
          "type": "boolean"
        },
        "inheritAuthRateCode": {
          "description": "Reservation to inherit Rate Code from Authorizer.",
          "type": "boolean"
        },
        "compAccounting": {
          "description": "Determines if this is a comp routing code or a routing code.",
          "type": "boolean"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "stopProcessingReasons": {
      "type": "object",
      "description": "Response object for fetching Stop Processing Reason.",
      "properties": {
        "stopProcessingReasons": {
          "description": "Collection of Stop Processing Reasons.",
          "$ref": "#/definitions/stopProcessingReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stopProcessingReasonsType": {
      "type": "array",
      "description": "List of the Stop Processing Reasons to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stopProcessingReasonType"
      }
    },
    "stopProcessingReasonType": {
      "type": "object",
      "description": "Details for Stop Processing Reason.",
      "properties": {
        "code": {
          "description": "Code is used to identify a Stop Processing Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Stop Processing Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displaySequence": {
          "description": "Stop Processing Reason display sequence Number.",
          "type": "number"
        }
      }
    },
    "templateTransactionCodes": {
      "type": "object",
      "properties": {
        "transactionCodes": {
          "description": "Collection of template transaction codes summary.",
          "$ref": "#/definitions/templateTransactionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionCodesType": {
      "type": "array",
      "description": "Template transaction code configuration details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateTransactionCodeType"
      }
    },
    "templateTransactionCodeType": {
      "type": "object",
      "description": "Transaction Code configuration details.",
      "properties": {
        "classification": {
          "description": "Transaction Code classification details.",
          "$ref": "#/definitions/trxCodeClassificationType"
        },
        "description": {
          "description": "Transaction Code descriptions.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "paymentSetup": {
          "description": "Payment Transaction Code configuration details.",
          "$ref": "#/definitions/paymentTrxSetupType"
        },
        "trxSetup": {
          "description": "Transaction code setup/config details.",
          "$ref": "#/definitions/trxSetupType"
        },
        "adjustmentCode": {
          "description": "Transaction code to be used to make adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionAdjustments": {
          "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionAdjustmentType"
          }
        },
        "serviceRecoveryAdjustmentCode": {
          "description": "Transaction code to be used to make service recovery adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amounts": {
          "description": "Default Amounts for the Transaction Codes.",
          "$ref": "#/definitions/trxCodeAmountsType"
        },
        "generatesSetup": {
          "description": "Transaction code's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "gLMapping": {
          "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
          "$ref": "#/definitions/gLMappingType"
        },
        "associatedTransactionCodes": {
          "description": "Code and description of the standard transaction code associated to this comp transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "allowServiceRecovery": {
          "description": "Flag to identify if this transaction code already used as service recovery adjustment code.",
          "type": "boolean"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "mappingCodes": {
          "description": "Mapping code and value attached to Transaction Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/exportMappingLinkedCodeType"
          }
        },
        "code": {
          "description": "Unique Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTransaction": {
          "description": "If true indicates this transaction codes is for Comp Accounting.",
          "type": "boolean"
        }
      }
    },
    "templateTransactionGroups": {
      "type": "object",
      "properties": {
        "transactionGroups": {
          "description": "Collection of template transaction groups.",
          "$ref": "#/definitions/templateTransactionGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionGroupsType": {
      "type": "array",
      "description": "Template transaction groups.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionGroupType"
      }
    },
    "transactionGroupType": {
      "type": "object",
      "description": "Transaction Group configuration information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        }
      }
    },
    "templateTransactionSubgroups": {
      "type": "object",
      "properties": {
        "transactionSubgroups": {
          "description": "Collection of template transaction subgroups configuration.",
          "$ref": "#/definitions/templateTransactionSubgroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionSubgroupsType": {
      "type": "array",
      "description": "Template transaction subgroup configurations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionSubgroupType"
      }
    },
    "transactionSubgroupType": {
      "type": "object",
      "description": "Transaction Subgroup configuration Information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Subgroup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "Transaction Subroup Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "group": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newGroup": {
          "description": "Use this attribute to update the existing group during change operation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs. This is an information only attribute.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        }
      }
    },
    "hotelTransactionCodes": {
      "type": "object",
      "properties": {
        "transactionCodes": {
          "description": "Collection of hotel's transaction codes summary.",
          "$ref": "#/definitions/hotelTransactionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionCodesType": {
      "type": "array",
      "description": "Transaction Code configuration details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionCodeType"
      }
    },
    "transactionCodes": {
      "type": "object",
      "properties": {
        "trxCodeUsages": {
          "description": "Contains a list of elements on which the transaction code is used. When attempting to set a transaction code as inactive, a check is performed to make sure the transaction code is not being used before the change operation can be performed. If there are usages, the change operation will fail and this element will be populated with the associated usages for reference.",
          "$ref": "#/definitions/trxCodeUsagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxCodeUsagesType": {
      "type": "array",
      "description": "Element on which the transaction code is being used.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxCodeUsageType"
      }
    },
    "trxCodeUsageType": {
      "type": "object",
      "description": "Details about the element on which the transaction code is being used.",
      "properties": {
        "usageName": {
          "description": "Name of the element type on which the transaction code is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "usageDetail": {
          "description": "Specific codes of the element type on which the transaction code is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "transactionGroups": {
      "type": "object",
      "properties": {
        "transactionGroups": {
          "description": "Collection of Transaction Groups Configuration.",
          "$ref": "#/definitions/hotelTransactionGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionGroupsType": {
      "type": "array",
      "description": "Hotel's Transaction Group configuration.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionGroupType"
      }
    },
    "hotelTransactionSubgroups": {
      "type": "object",
      "properties": {
        "transactionSubgroups": {
          "description": "Collection of Transaction Subgroups Configuration.",
          "$ref": "#/definitions/hotelTransactionSubgroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionSubgroupsType": {
      "type": "array",
      "description": "Hotel's Transaction Subgroup configuration.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionSubgroupType"
      }
    }
  },
  "tags": [
    {
      "name": "CashieringConfig",
      "description": "Cashiering configurations affect the control and management of financial transactions at your property. You can configure cashiering components for articles for sale, cancellation handling, deposits, folios, settlements, exchange rates, payment methods and so on."
    },
    {
      "name": "CreditCard",
      "description": "The Credit Card Internal Service contains operations used internally by OPERA Cloud."
    },
    {
      "name": "CommissionConfig",
      "description": "These Commission APIs allow you to get, update, and remove commissions on an Account Receivable (AR) profile in OPERA Cloud."
    },
    {
      "name": "ChainConfig",
      "description": "These APIs will allow you to configure front office related configuration related to Administration."
    },
    {
      "name": "HotelConfig",
      "description": "These APIs will allow you to configure front office related configuration related to Administration."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}