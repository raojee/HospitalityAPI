{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Event Configuration API",
    "description": "This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "22.3",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/evm/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cateringEventTypes": {
      "get": {
        "summary": "Get Function Space Event Types",
        "description": "Use this API to get Function Space Event Types. <p><strong>OperationId:</strong>getFunctionSpaceEventTypes</p>",
        "operationId": "getFunctionSpaceEventTypes",
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Specifies the Event field value description to search.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the Function Space Event Types.",
            "schema": {
              "$ref": "#/definitions/functionSpaceEventTypesDetails"
            }
          },
          "204": {
            "description": "FunctionSpaceEventTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/cateringMenuClasses": {
      "post": {
        "summary": "Create menu classes",
        "description": "You can use this API to create menu classes. <p><strong>OperationId:</strong>postCateringMenuClasses</p>",
        "operationId": "postCateringMenuClasses",
        "parameters": [
          {
            "name": "cateringMenuClasses",
            "in": "body",
            "required": true,
            "description": "Requestion object for creating new Menu Classes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringMenuClasses"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ResourceConfig"
        ]
      }
    },
    "/cateringMenuItemClasses": {
      "post": {
        "summary": "Create menu item classes",
        "description": "You can use this API to create menu item classes. <p><strong>OperationId:</strong>postCateringMenuItemClasses</p>",
        "operationId": "postCateringMenuItemClasses",
        "parameters": [
          {
            "name": "cateringMenuItemClasses",
            "in": "body",
            "required": true,
            "description": "Request object for Creating Menu Item Classes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringMenuItemClasses"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ResourceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/cateringMenuItems": {
      "get": {
        "summary": "Get Menu items",
        "description": "Get Menu items for a property. <p><strong>OperationId:</strong>getCateringMenuItems</p>",
        "operationId": "getCateringMenuItems",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Hotel Id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Menu item name of string lentgth 30",
            "type": "string"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "quickInsertCode",
            "in": "query",
            "required": false,
            "description": "Article number of Menu Item in Caps",
            "type": "string"
          },
          {
            "name": "listTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "If true this boolean will set the criteria to only return Menu Items configured as Inactive.",
            "type": "boolean"
          },
          {
            "name": "eventTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving Menu Items.",
            "schema": {
              "$ref": "#/definitions/cateringMenuItemsInfo"
            }
          },
          "204": {
            "description": "CateringMenuItems not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ResourceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/cateringMenus": {
      "get": {
        "summary": "Get menus",
        "description": "Retrieve a list of menus for a property. <p><strong>OperationId:</strong>getCateringMenus</p>",
        "operationId": "getCateringMenus",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Hotel ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "menuId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "iDExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "menuIDType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "This type holds name of Menu Class.",
            "type": "string"
          },
          {
            "name": "classNameListCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "eventTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "menuTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Defines values for Menu Type",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Food",
                "Beverage"
              ]
            },
            "required": false
          },
          {
            "name": "dietaryListCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "If true, only Composed Menu's marked as Inactive in Menu Configuration will be returned.",
            "type": "boolean"
          },
          {
            "name": "multiChoice",
            "in": "query",
            "required": false,
            "description": "When selected Only Composed Menu's noted as Multi Choice in Menu Configuration will be returned.",
            "type": "boolean"
          },
          {
            "name": "webBookable",
            "in": "query",
            "required": false,
            "description": "Check of Menu if it is web bookable",
            "type": "boolean"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Fetch instructions that can be used in Catering Menus maintenance.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Revenue",
                "MenuDetails",
                "MenuNotes"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch Menu .",
            "schema": {
              "$ref": "#/definitions/cateringMenusInfo"
            }
          },
          "204": {
            "description": "CateringMenus not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ResourceConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomPools": {
      "get": {
        "summary": "Fetch Room Type Pool",
        "description": "This API allows you to Use this API to get Room Type Pool and the associated Room Types. <p><strong>OperationId:</strong>getRoomTypePool</p>",
        "operationId": "getRoomTypePool",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if inactive room types should be included.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "physical",
            "in": "query",
            "required": false,
            "description": "Is it a physical sleep room type.",
            "type": "boolean"
          },
          {
            "name": "pseudo",
            "in": "query",
            "required": false,
            "description": "Is it a pseudo room type.",
            "type": "boolean"
          },
          {
            "name": "summaryInfo",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if summary or detailed information should be fetched.",
            "type": "boolean"
          },
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypePoolCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch room pool information.",
            "schema": {
              "$ref": "#/definitions/roomTypePoolDetails"
            }
          },
          "204": {
            "description": "RoomTypePool not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Room Type Pools",
        "description": "This API allows you to Use this API to create Room Type Pools. <p><strong>OperationId:</strong>postRoomTypePool</p>",
        "operationId": "postRoomTypePool",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomTypePoolCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new room pool.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypePoolCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomPools/{roomPoolCode}": {
      "delete": {
        "summary": "Delete  Room Type Pool and Mappings",
        "description": "Use this API to delete  Room Type Pool and Mappings. <p><strong>OperationId:</strong>removeRoomTypePool</p>",
        "operationId": "removeRoomTypePool",
        "parameters": [
          {
            "name": "roomPoolCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of room type pool."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The description of room pool type.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "defaultText",
            "in": "query",
            "required": false,
            "description": "Default text with Character length from 0 to 1000.",
            "type": "string"
          },
          {
            "name": "lang",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Language code for the translation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "sequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Sequence for representing room type pool record.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates the room type is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "numberOfRooms",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Number of rooms for this room type.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomClass",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room class for the room type code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "shortDescription",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Short Description of room type.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "activeDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Active date of the room type.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "pseudo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates if room type is pseudo.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "accessible",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates if room type is accessible.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "sendToInterface",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates if room type is sent to interface.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "sellSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates room types sell sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "suite",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates room type is a suite.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "meetingRoom",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates room type is meeting room. This Can be Meeting room flag cannot be unmarked at the property level. Can only be marked for non pseudo room types.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "restricted",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates that the room pool cannot be used to allocate inventory to this room type. Inventory must be allocated directly to the room type itself.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Room Type Pool ",
        "description": "Use this API to update Room Type Pool and Associated Room Types. <p><strong>OperationId:</strong>changeRoomTypePool</p>",
        "operationId": "changeRoomTypePool",
        "parameters": [
          {
            "name": "roomPoolCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of room type pool."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomTypePoolToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing room pool.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypePoolToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "functionSpaceEventTypesDetails": {
      "type": "object",
      "description": "Response object of the Function Space Event Types.",
      "properties": {
        "eventTypes": {
          "description": "Retrieve the collection of the Function Space Event Types based on the search criteria",
          "$ref": "#/definitions/eventTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventTypesType": {
      "type": "array",
      "description": "Collection of Event Type",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventTypeConfigType"
      }
    },
    "eventTypeConfigType": {
      "type": "object",
      "description": "Representation of event record type.",
      "properties": {
        "eventTypeCode": {
          "description": "Code Field Value belongs to the Event Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "translatableDescription": {
          "description": "Translatable description to elaborate the Event Code Type.",
          "$ref": "#/definitions/translationTextType50"
        },
        "description": {
          "description": "Description to elaborate the Event Code Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "timeWindow": {
          "description": "Default Start Time and End Time of the event.",
          "$ref": "#/definitions/timeWindowType"
        },
        "inactive": {
          "description": "Determines the event type status as active or inactive",
          "type": "boolean"
        },
        "mealType": {
          "description": "Meal type associated with the event type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "coverable": {
          "description": "Indicates if Event Type is coverable or not.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Defines if web booking is allowed or not.",
          "type": "boolean"
        },
        "sequence": {
          "description": "The sequence number of the event.",
          "type": "integer"
        }
      }
    },
    "translationTextType50": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 50.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "timeWindowType": {
      "type": "object",
      "description": "Defines a Time period with start time and an end time.",
      "properties": {
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        },
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        }
      }
    },
    "cateringMenuClasses": {
      "type": "object",
      "description": "Request object for changing Menu Classes.",
      "properties": {
        "menuClassList": {
          "description": "Menu Classes to be changed",
          "$ref": "#/definitions/cateringMenuClassListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringMenuClassListType": {
      "type": "array",
      "description": "List of Values of Menu.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringMenuClassType"
      }
    },
    "cateringMenuClassType": {
      "type": "object",
      "description": "Catering Menu Class which holds the value of menu class.",
      "properties": {
        "classId": {
          "description": "This type holds Menu Class id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "The Hotel code which the menu class belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "classInfo": {
          "description": "This type holds Menu class details.",
          "$ref": "#/definitions/cateringMenuClassInfoType"
        },
        "menuList": {
          "description": "This type holds list of menu, along with the menu info,revenue and menu details.",
          "$ref": "#/definitions/cateringMenuListType"
        }
      }
    },
    "cateringMenuClassInfoType": {
      "type": "object",
      "description": "Detailed attributes of Menu Class .",
      "properties": {
        "name": {
          "description": "This type holds name of Menu Class.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "webBookable": {
          "description": "This type tells about whether menu class is book through web or not.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Inactive date of menu class.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventTypes": {
          "description": "This type holds list of associated events.",
          "$ref": "#/definitions/codeListType"
        },
        "inactive": {
          "description": "Return true, when this Menu Item Class will not be available to be associated to a Catering Event.",
          "type": "boolean"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "cateringMenuListType": {
      "type": "array",
      "description": "List of Values of Menu.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringMenuType"
      }
    },
    "cateringMenuType": {
      "type": "object",
      "properties": {
        "id": {
          "description": "This type holds menu id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "classId": {
          "description": "This type holds class id for given menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "The Hotel code which the catering menu belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "info": {
          "description": "This type holds value of Catering Menu Info.",
          "$ref": "#/definitions/cateringMenuInfoType"
        },
        "revenueList": {
          "description": "This type holds revenue list.",
          "$ref": "#/definitions/cateringMenuRevListType"
        },
        "menuDetailList": {
          "description": "This type holds Menu Detail List.",
          "$ref": "#/definitions/cateringMenuDetailListType"
        },
        "multiChoiceList": {
          "$ref": "#/definitions/cateringMultiChoiceMenuListType"
        },
        "menuNoteList": {
          "description": "Collection of notes which belongs to a Menu.",
          "$ref": "#/definitions/eventResourceNotesType"
        }
      }
    },
    "cateringMenuInfoType": {
      "type": "object",
      "properties": {
        "className": {
          "description": "This type holds name of Menu Class Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "name": {
          "description": "This type holds name of Menu Name.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "restriction": {
          "description": "This type holds Restrictionn for the given Menu.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "description": {
          "description": "This type holds Description for the given Menu.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "dietaryList": {
          "description": "This type holds DietaryList values for the given Menu.",
          "$ref": "#/definitions/codeListType"
        },
        "eventTypes": {
          "description": "This type holds Event list associated with menu.",
          "$ref": "#/definitions/codeListType"
        },
        "type": {
          "description": "This type holds value of Menu type FOOD ,BEVERAGE for the given Menu.",
          "$ref": "#/definitions/menuTypeType"
        },
        "quickInsertCode": {
          "description": "This type holds quick insert value, v5 functionality as Article Number for the Menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "servingType": {
          "description": "This type holds serving type value per person , per table for the given Menu.",
          "$ref": "#/definitions/servingType"
        },
        "servingSize": {
          "description": "This type holds TableCapacity for the given Menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "includedInMenu": {
          "description": "Return true, when all Menu Items added will be marked as Included and there will be a Global Price for this menu",
          "type": "boolean"
        },
        "consumptionBased": {
          "description": "This type holds value of consumption, Menu items will be charged on a consumption basis.",
          "type": "boolean"
        },
        "sellDateRange": {
          "description": "Menu will be available to sell for an Event for date range.",
          "$ref": "#/definitions/dateRangeType"
        },
        "eventDateRange": {
          "description": "Date period which the Event will take place.",
          "$ref": "#/definitions/dateRangeType"
        },
        "menusSold": {
          "description": "The total number of menus sold for the day on which the event takes place.",
          "type": "integer"
        },
        "webBookable": {
          "description": "This type tells about whether menu is book through web or not.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Selection will note this Menu is Inactive and unable to be added to a Catering Event.",
          "type": "boolean"
        },
        "salesPrice": {
          "description": "Sales Price for Menu Item in Menu Item Configuration.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "includedInPrice": {
          "description": "Return true means, menu item as Included in the Menu Price",
          "type": "boolean"
        },
        "multiChoice": {
          "description": "Indicator of this being a multi-choice menu",
          "type": "boolean"
        },
        "courseCount": {
          "description": "Define the Courses populated into the Multi Choice Menu Configuration",
          "type": "integer"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "menuTypeType": {
      "type": "string",
      "description": "Defines values for Menu Type",
      "enum": [
        "Food",
        "Beverage"
      ]
    },
    "servingType": {
      "type": "string",
      "description": "Serving",
      "enum": [
        "Pp",
        "Pt"
      ]
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "cateringMenuRevListType": {
      "type": "array",
      "description": "This type holds revenue list.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringMenuRevType"
      }
    },
    "cateringMenuRevType": {
      "type": "object",
      "properties": {
        "revenueType": {
          "description": "This supports all Revenue Types",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "type": {
          "description": "This type holds value of Menu type FOOD ,BEVERAGE for the given Menu.",
          "$ref": "#/definitions/menuTypeType"
        },
        "cost": {
          "description": "This type holds cost of the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "internalQuote": {
          "description": "This type holds internal quote for the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "costMargin": {
          "description": "This type holds cost of the Menu.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "price": {
          "description": "This type holds Price of the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priceMargin": {
          "description": "This type holds price margin for the given Menu.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "cateringMenuDetailListType": {
      "type": "array",
      "description": "List of Values of Catering Menu Detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringMenuDetailType"
      }
    },
    "cateringMenuDetailType": {
      "type": "object",
      "description": "Detailed attributes of Menu Item.",
      "properties": {
        "id": {
          "description": "The menu item class unique ID",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "The Hotel code which the menu item class belongs to",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "classInfo": {
          "description": "Displays the Menu Item Name noted in the Menu Item Configuration.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "displayOrder": {
          "description": "Defines the Display Order of the menu item class, to which the menu item is attached",
          "type": "integer"
        },
        "name1": {
          "description": "First value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name2": {
          "description": "Seond value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name3": {
          "description": "Third value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin1": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin2": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "menuType": {
          "description": "Type of Menu -Food or Beverage",
          "$ref": "#/definitions/menuTypeType"
        },
        "custom": {
          "description": "Indicates whether this menu item is custom",
          "type": "boolean"
        },
        "year": {
          "description": "This value is typically the year of the Wine",
          "type": "integer"
        },
        "restriction": {
          "description": "Any particular restriction description in 100 charactera",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "description": {
          "description": "Detailed description of menu items in 100 characters",
          "$ref": "#/definitions/translationTextType2000"
        },
        "dietaryPreferenceList": {
          "description": "list of configured Dietary preferences",
          "$ref": "#/definitions/dietaryPrefListType"
        },
        "eventTypes": {
          "description": "Field will be inherited values from the Menu Item Class associated for Event Types.",
          "$ref": "#/definitions/codeListType"
        },
        "responsibleDepartments": {
          "description": "Department Code(s) will be displayed in the field for a particular menu item",
          "$ref": "#/definitions/codeListType"
        },
        "quickInsertCode": {
          "description": "Article number in Caps of menu item",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueType": {
          "description": "RevenueType of Menu Item",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "salesPrice": {
          "description": "Price of Menu Item , Numeric currency value field conforming to Currency Format for the selected Property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Actual Cost of Menu Item",
          "$ref": "#/definitions/currencyAmountType"
        },
        "itemConsumption": {
          "description": "Selection of this notes that the price defined is charged 'as-consumed' basis",
          "type": "boolean"
        },
        "container": {
          "description": "Code and description of the container to be used by Menu Item",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "portion": {
          "description": "Portion of the menu item",
          "$ref": "#/definitions/translationTextType2000"
        },
        "servings": {
          "description": "Numeric value of servings of Menu item",
          "type": "integer"
        },
        "webBookable": {
          "description": "Check of Menu Item if it is web bookable",
          "type": "boolean"
        },
        "print": {
          "description": "check if Print action is required for menu item",
          "type": "boolean"
        },
        "inactive": {
          "description": "Check for the status of menu item",
          "type": "boolean"
        },
        "includedYN": {
          "description": "Included flag",
          "type": "boolean"
        },
        "course": {
          "description": "Course number defined will be the display order of the Menu Items on the screen and in Banquet Event Order.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "Order of Menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "demandFactor": {
          "description": "Demand Factor of the Menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "menuName": {
          "description": "Holds the value of Menu name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "includedMenu": {
          "description": "Return true means, menu as Included in the Menu Price",
          "type": "boolean"
        },
        "mandatory": {
          "description": "Return true means, menu as Included in the Menu Price",
          "type": "boolean"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "dietaryPrefListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dietaryPrefType"
      }
    },
    "dietaryPrefType": {
      "type": "object",
      "description": "Base type provides information about Catering Revenue Types Configuration.",
      "properties": {
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "cateringMultiChoiceMenuListType": {
      "type": "array",
      "description": "This type holds Multi choice Menu.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringMultiChoiceMenuType"
      }
    },
    "cateringMultiChoiceMenuType": {
      "type": "object",
      "properties": {
        "courseId": {
          "description": "This attributes identifies the courseldd.",
          "type": "integer"
        },
        "course": {
          "description": "This type holds Courses are defined for Menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "choiceCount": {
          "description": "This type holds choice count of the Menu.",
          "type": "integer"
        },
        "courseDescription": {
          "description": "This type holds choice description for Menu.",
          "$ref": "#/definitions/translationTextType100"
        },
        "courseName": {
          "description": "This type holds name of the Course.",
          "$ref": "#/definitions/translationTextType20"
        }
      }
    },
    "translationTextType100": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 100.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType20": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 20.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "eventResourceNotesType": {
      "type": "array",
      "description": "Contains event resource note information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventResourceNoteType"
      }
    },
    "eventResourceNoteType": {
      "type": "object",
      "description": "Contains the event resource's note information.",
      "properties": {
        "noteId": {
          "description": "Unique identifier for event resource note. If it is missing, this indicate that it is a new note. If only NoteID is provided then it is a delete operation",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "noteCode": {
          "description": "Note code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internal": {
          "description": "Indicates if the note is internal use only.",
          "type": "boolean"
        },
        "noteTitle": {
          "description": "Contains note title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "note": {
          "description": "Contains note text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Contains display sequence.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "cateringMenuItemClasses": {
      "type": "object",
      "description": "Request object for updating Menu Item Classes.",
      "properties": {
        "menuItemClasses": {
          "description": "Menu Item Classes to be changed.",
          "$ref": "#/definitions/cateringMenuItemClassListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringMenuItemClassListType": {
      "type": "array",
      "description": "List of Values of Menu Item Class.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringMenuItemClassType"
      }
    },
    "cateringMenuItemClassType": {
      "type": "object",
      "description": "Menu Item Class Values.",
      "properties": {
        "id": {
          "description": "The menu item class unique ID",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "itemClassInfo": {
          "description": "The menu item class detailed info",
          "$ref": "#/definitions/cateringMenuItemClassInfoType"
        },
        "itemList": {
          "description": "The menu items detailed attribute which belongs to particular menu item class",
          "$ref": "#/definitions/cateringMenuItemListType"
        }
      }
    },
    "cateringMenuItemClassInfoType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The Hotel code which the menu item class belongs to",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "className": {
          "description": "Menu Item Class Name",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "eventTypeList": {
          "description": "Event types associated with the Menu Class",
          "$ref": "#/definitions/codeListType"
        },
        "responsibleDepartmentList": {
          "description": "Departments associated with the MenuClass",
          "$ref": "#/definitions/codeListType"
        },
        "menuType": {
          "description": "Menu Type information, it is either Beverage or Food",
          "$ref": "#/definitions/menuTypeType"
        },
        "sequence": {
          "description": "Sequence of the Menu Class",
          "type": "integer"
        },
        "webBookable": {
          "description": "Boolean value indicates whether the Menu Class is web bookable or not",
          "type": "boolean"
        },
        "iconName": {
          "description": "Icon Name of the Menu Class",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cateringMenuItemListType": {
      "type": "array",
      "description": "List of Values of Menu Item.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringMenuItemType"
      }
    },
    "cateringMenuItemType": {
      "type": "object",
      "description": "Detailed attributes of Menu Item.",
      "properties": {
        "id": {
          "description": "The menu item class unique ID",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "The Hotel code which the menu item class belongs to",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "classInfo": {
          "description": "Displays the Menu Item Name noted in the Menu Item Configuration.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "displayOrder": {
          "description": "Defines the Display Order of the menu item class, to which the menu item is attached",
          "type": "integer"
        },
        "name1": {
          "description": "First value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name2": {
          "description": "Seond value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name3": {
          "description": "Third value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin1": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin2": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "menuType": {
          "description": "Type of Menu -Food or Beverage",
          "$ref": "#/definitions/menuTypeType"
        },
        "custom": {
          "description": "Indicates whether this menu item is custom",
          "type": "boolean"
        },
        "year": {
          "description": "This value is typically the year of the Wine",
          "type": "integer"
        },
        "restriction": {
          "description": "Any particular restriction description in 100 charactera",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "description": {
          "description": "Detailed description of menu items in 100 characters",
          "$ref": "#/definitions/translationTextType2000"
        },
        "dietaryPreferenceList": {
          "description": "list of configured Dietary preferences",
          "$ref": "#/definitions/dietaryPrefListType"
        },
        "eventTypes": {
          "description": "Field will be inherited values from the Menu Item Class associated for Event Types.",
          "$ref": "#/definitions/codeListType"
        },
        "responsibleDepartments": {
          "description": "Department Code(s) will be displayed in the field for a particular menu item",
          "$ref": "#/definitions/codeListType"
        },
        "quickInsertCode": {
          "description": "Article number in Caps of menu item",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueType": {
          "description": "RevenueType of Menu Item",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "salesPrice": {
          "description": "Price of Menu Item , Numeric currency value field conforming to Currency Format for the selected Property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Actual Cost of Menu Item",
          "$ref": "#/definitions/currencyAmountType"
        },
        "itemConsumption": {
          "description": "Selection of this notes that the price defined is charged 'as-consumed' basis",
          "type": "boolean"
        },
        "container": {
          "description": "Code and description of the container to be used by Menu Item",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "portion": {
          "description": "Portion of the menu item",
          "$ref": "#/definitions/translationTextType2000"
        },
        "servings": {
          "description": "Numeric value of servings of Menu item",
          "type": "integer"
        },
        "webBookable": {
          "description": "Check of Menu Item if it is web bookable",
          "type": "boolean"
        },
        "print": {
          "description": "check if Print action is required for menu item",
          "type": "boolean"
        },
        "inactive": {
          "description": "Check for the status of menu item",
          "type": "boolean"
        },
        "includedYN": {
          "description": "Included flag",
          "type": "boolean"
        }
      }
    },
    "cateringMenuItemsInfo": {
      "type": "object",
      "description": "Response object for retrieving Menu Items.",
      "properties": {
        "cateringMenuItems": {
          "description": "Collection of Menu Items fetched.",
          "$ref": "#/definitions/cateringMenuItemListType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringMenusInfo": {
      "type": "object",
      "description": "Response object to fetch Menu .",
      "properties": {
        "menuList": {
          "description": "Collection of Menu .",
          "$ref": "#/definitions/cateringMenuListType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypePoolDetails": {
      "type": "object",
      "description": "Response object for fetch room pool information.",
      "properties": {
        "roomTypePools": {
          "description": "Collection of room pool information.",
          "$ref": "#/definitions/roomTypePoolTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypePoolTypes": {
      "type": "array",
      "description": "Collection of room type pool and associated room type(s).",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomTypePoolType"
      }
    },
    "roomTypePoolType": {
      "type": "object",
      "description": "This type represents complete information of room type pool and Associated Room Type(s).",
      "properties": {
        "hotelId": {
          "description": "Hotel Code where room pool belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomTypePoolCode": {
          "description": "Room type pool Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "The description of room pool type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of type room pool.",
          "$ref": "#/definitions/translationTextType1000"
        },
        "sequence": {
          "description": "Sequence for representing room type pool record.",
          "type": "integer"
        },
        "associatedRoomTypes": {
          "description": "Pertain associated room type(s) detail information.",
          "$ref": "#/definitions/roomPoolRoomTypesType"
        }
      }
    },
    "translationTextType1000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 1000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "roomPoolRoomTypesType": {
      "type": "array",
      "description": "Collection of room type pool mapping type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomPoolRoomTypeType"
      }
    },
    "roomPoolRoomTypeType": {
      "type": "object",
      "description": "This extension will only use for consuming RoomType and SellSequence elements for consistency.",
      "properties": {
        "roomClass": {
          "description": "Room class for the room type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Short Description of room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "activeDate": {
          "description": "Active date of the room type.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "pseudo": {
          "description": "Indicates if room type is pseudo.",
          "type": "boolean"
        },
        "accessible": {
          "description": "Indicates if room type is accessible.",
          "type": "boolean"
        },
        "sendToInterface": {
          "description": "Indicates if room type is sent to interface.",
          "type": "boolean"
        },
        "sellSequence": {
          "description": "Indicates room types sell sequence.",
          "type": "number"
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "boolean"
        },
        "meetingRoom": {
          "description": "Indicates room type is meeting room. This Can be Meeting room flag cannot be unmarked at the property level. Can only be marked for non pseudo room types.",
          "type": "boolean"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "numberOfRooms": {
          "description": "Number of rooms for this room type.",
          "type": "integer"
        },
        "inactive": {
          "description": "Indicates the room type is inactive or not.",
          "type": "boolean"
        },
        "restricted": {
          "description": "Indicates that the room pool cannot be used to allocate inventory to this room type. Inventory must be allocated directly to the room type itself.",
          "type": "boolean"
        }
      }
    },
    "roomTypePoolCriteria": {
      "type": "object",
      "description": "Request object for creating new room pool.",
      "properties": {
        "roomPoolTypes": {
          "description": "Collection of room pool information.",
          "$ref": "#/definitions/roomTypePoolTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypePoolToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing room pool.",
      "properties": {
        "roomPoolTypes": {
          "description": "Collection of room pool information.",
          "$ref": "#/definitions/roomTypePoolTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "ResourceConfig",
      "description": "The Resource Config Service Web Service offers capability to configure Master Data needed for Hotel Resources such as managing Inventory Items, Item Pools, Item Classes, etc."
    },
    {
      "name": "ChainConfig",
      "description": "These APIs will allow you to configure events related configuration related to Administration."
    },
    {
      "name": "HotelConfig",
      "description": "These APIs will allow you to configure events related configuration related to Administration."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}