{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Channel Configuration API",
    "description": "APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "22.3",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/chl/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hotels/{hotelId}/rooms/mapping": {
      "get": {
        "summary": "Gets channel property room mapping",
        "description": "Use this API to get channel room mapping to OPERA hotel's room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>getChannelRoomMapping</p>",
        "operationId": "getChannelRoomMapping",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRoomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactiveMappings",
            "in": "query",
            "required": false,
            "description": "Flag whether to include inactive mappings or not.",
            "type": "boolean"
          },
          {
            "name": "includeUnmappedRoomTypes",
            "in": "query",
            "required": false,
            "description": "Flag whether to include unmapped room types or not.",
            "type": "boolean"
          },
          {
            "name": "onlyUnmappedRoomTypes",
            "in": "query",
            "required": false,
            "description": "Flag whether to include mapped room types only.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Operation to fetch hotel-channel room type mappings.",
            "schema": {
              "$ref": "#/definitions/channelRoomMappingsSummary"
            }
          },
          "204": {
            "description": "ChannelRoomMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partnerâ€™s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "bookingChannelInfoType": {
      "type": "object",
      "properties": {
        "hotelMappings": {
          "description": "Hotel Code mapping for the Booking Channel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelMappingType"
          }
        },
        "configurationParameters": {
          "$ref": "#/definitions/parametersType"
        },
        "bookingChannelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "bookingChannelType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        }
      }
    },
    "hotelMappingType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "parametersType": {
      "type": "array",
      "description": "Collection of generic Name-Value-Pair parameters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parameterType": {
      "type": "object",
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "translationTextType50": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 50.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "bookingChannelsInfoType": {
      "type": "array",
      "description": "Additional detail about booking channel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingChannelInfoType"
      }
    },
    "channelMappingEnhancedDescriptionType": {
      "type": "object",
      "description": "Enhanced descriptions of hotel-channel room type or rate code mapping.",
      "properties": {
        "enhancedDescriptionLine1": {
          "description": "Enhanced Description Line 1.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine2": {
          "description": "Enhanced Description Line 2.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine3": {
          "description": "Enhanced Description Line 3.",
          "$ref": "#/definitions/translationTextType50"
        }
      }
    },
    "channelRoomMappingDescriptionType": {
      "type": "object",
      "description": "This type holds descriptions of hotel-channel room type mapping. Description may be from Hotel Room Type description, Global description or custom user defined description. Global description only supports enhanced description.",
      "properties": {
        "roomTypeDescription": {
          "description": "Description of hotel-channel room type mapping from Hotel Room Type configuration.",
          "$ref": "#/definitions/channelRoomMappingDescriptionDetailsType"
        },
        "globalDescription": {
          "description": "Description of hotel-channel room type mapping from Global description.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "customDescription": {
          "description": "Custom or user-defined description of hotel-channel room type mapping.",
          "$ref": "#/definitions/channelRoomMappingDescriptionDetailsType"
        }
      }
    },
    "channelRoomMappingDescriptionDetailsType": {
      "type": "object",
      "description": "This type holds descriptions of hotel-channel room type mapping. Descriptions may be enhanced descriptions, HTML supported description or a simple string description.",
      "properties": {
        "enhancedDescription": {
          "description": "Enhanced descriptions which allow defining line 1 to 3 descriptions.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "hTMLSupportedDescription": {
          "description": "HTML supported description with addition of channel room type short description.",
          "$ref": "#/definitions/channelRoomMappingHTMLSupportedDescriptionType"
        },
        "description": {
          "description": "Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "channelRoomMappingHTMLSupportedDescriptionType": {
      "type": "object",
      "description": "This type holds HTML description of hotel-channel room type with additional channel room type short description.",
      "properties": {
        "description": {
          "description": "Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "Channel room type or rate code short description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "channelRoomMappingsSummary": {
      "type": "object",
      "description": "Operation to fetch hotel-channel room type mappings.",
      "properties": {
        "channelRoomMappingsSummary": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/channelRoomMappingsSummaryType"
        },
        "masterInfo": {
          "description": "Additional details about the booking channels and source descriptions for a hotel room type referenced within the fetched results.",
          "$ref": "#/definitions/channelRoomMappingMasterInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappingsSummaryType": {
      "type": "object",
      "description": "Collection of hotel-channel room type mappings.",
      "properties": {
        "channelRoomMappingSummary": {
          "description": "Information about hotel-channel room type mapping.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelRoomMappingSummaryType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "channelRoomMappingSummaryType": {
      "type": "object",
      "description": "Basic details of hotel-channel room type mapping.",
      "properties": {
        "endDate": {
          "description": "End date of the hotel-channel room type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "Hotel-channel room type mapping description.",
          "$ref": "#/definitions/channelRoomMappingDescriptionType"
        },
        "alternateChannelRoomType": {
          "description": "Alternate channel room type name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "channelRoomTypeOrder": {
          "description": "Channel room type order of the hotel-channel room type mapping.",
          "type": "number"
        },
        "sellSequence": {
          "description": "Sell sequence for hotel-channel room type mapping.",
          "type": "number"
        },
        "active": {
          "description": "Flag that indicates whether hotel-channel room type mapping is active or not.",
          "type": "boolean"
        },
        "bedTypeCode": {
          "description": "Channel bed type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "baseAllocation": {
          "description": "Channel base allocation.",
          "type": "integer"
        },
        "rateCodes": {
          "description": "Rate codes where hotel-channel room type mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "channelRateCodes": {
          "description": "Channel rate codes where hotel-channel room mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "noOfRateRoomsMapped": {
          "description": "Number of active rate room mappings for the channel room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "The maximum occupancy for this room category.",
          "type": "integer"
        },
        "defaultOccupancy": {
          "description": "Default occupancy for the room type.",
          "type": "integer"
        },
        "physicalRoomsCount": {
          "description": "The physical number of rooms in this room category at this property.",
          "type": "integer"
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRoomType": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Begin Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "channelRoomMappingMasterInfoType": {
      "type": "object",
      "description": "Additional details about the booking channels and source descriptions for a hotel room type referenced within the fetched results.",
      "properties": {
        "bookingChannelsInfo": {
          "description": "Additional details about booking channels.",
          "$ref": "#/definitions/bookingChannelsInfoType"
        },
        "sourceDescriptions": {
          "description": "hotel-channel room type mapping source descriptions.",
          "$ref": "#/definitions/channelRoomMappingsSourceDescriptionsType"
        }
      }
    },
    "channelRoomMappingsSourceDescriptionsType": {
      "type": "array",
      "description": "This type holds hotel-channel room type mapping source descriptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelRoomMappingSourceDescriptionsType"
      }
    },
    "channelRoomMappingSourceDescriptionsType": {
      "type": "object",
      "description": "Hotel-channel room type mapping source descriptions.",
      "properties": {
        "description": {
          "description": "Hotel room type description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "globalDescription": {
          "description": "Hotel room type global description.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code the descriptions belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type the descriptions belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    }
  },
  "tags": [
    {
      "name": "Channel",
      "description": "The Channel APIs allows you to view, configure and manage the mappings for your channel rate codes, negotiated rates, room types, global descriptions, letters, credit card types and channel codes."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}