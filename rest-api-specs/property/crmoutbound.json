{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Customer Relationship Management Outbound API",
    "description": "APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "22.3",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/crm/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/externalSystems/{extSystemCode}/chains/{chainCode}/enrollments": {
      "post": {
        "summary": "Create an Enrollment",
        "description": "Use this API when you have a guest profile and you want to enroll that guest profile into a membership program in an external system. <p><strong>OperationId:</strong>postEnrollment</p>",
        "operationId": "postEnrollment",
        "parameters": [
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Profile will be downloaded from this External System."
          },
          {
            "name": "chainCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Chain code from which the External Profiles will be downloaded."
          },
          {
            "name": "enrollment",
            "in": "body",
            "required": true,
            "description": "Request object to create profile enrollment.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/enrollment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-transactionId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/enrollment"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/chains/{chainCode}/externalProfiles": {
      "get": {
        "summary": "Retrieve profiles from external system",
        "description": "Use this API when you want to search for profiles in an external system. The response will include a list of profiles that exist in the external system, based on your search criteria.  For example, you want to see if the external system has a profile for Mr David Smith.  The GET API will send a request to external system, and the response will include a list of any profiles that exist for Mr Davis Smith in that system.  If a profile does exist, and the user would like to 'download' that profile into OPERA, you would then proceed to use the downlodExternalProfiles API.",
        "operationId": "getExternalProfiles",
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching profiles from external CRM System. This object contains profile primary details, profile summary details, master info list containing code and description used as lookup for description.",
            "schema": {
              "$ref": "#/definitions/externalProfiles"
            }
          },
          "204": {
            "description": "ExternalProfiles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Profiles will be fetched from this External System."
          },
          {
            "name": "chainCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Chain code from which the External Profiles will be fetched."
          },
          {
            "name": "externalDatabaseId",
            "in": "query",
            "required": false,
            "description": "Profile will be fetched from this External database.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The types of Profile handled by the web service.",
            "uniqueItems": true,
            "enum": [
              "Guest",
              "Agent",
              "Company",
              "Group",
              "Source",
              "Employee",
              "Hotel",
              "Vendor",
              "Contact",
              "Purge",
              "BusinessHeader",
              "BillingAccount",
              "Activity",
              "Potential",
              "Account"
            ]
          },
          {
            "name": "profileId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "profileIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Family name, last name or Company Name.",
            "type": "string"
          },
          {
            "name": "givenName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names.",
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "type": "string"
          },
          {
            "name": "postalCode",
            "in": "query",
            "required": false,
            "description": "Post Office Code number.",
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "description": "State or Province name (e.g., Texas).",
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "description": "Code for a country or a nationality.",
            "type": "string"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "description": "Keyword associated to the profile.",
            "type": "string"
          },
          {
            "name": "communication",
            "in": "query",
            "required": false,
            "description": "Any communication method associated to the profile such as phone, fax, eMail id.",
            "type": "string"
          },
          {
            "name": "membershipNumber",
            "in": "query",
            "required": false,
            "description": "Membership number associated to the profile.",
            "type": "string"
          },
          {
            "name": "membershipType",
            "in": "query",
            "required": false,
            "description": "Member Type of searching profile.",
            "type": "string"
          },
          {
            "name": "arNumber",
            "in": "query",
            "required": false,
            "description": "Account Receivable associated to the profile.",
            "type": "string"
          },
          {
            "name": "birthDate",
            "in": "query",
            "required": false,
            "description": "Date of birth",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/chains/{chainCode}/externalProfiles/{profileExternalId}": {
      "get": {
        "summary": "Download a Profile from external system",
        "description": "After searching for profiles in an external system using getExternalProfiles, proceed to use this API knowing the external profile ID in the path.  The result will be a new profile created in OPERA. <p><strong>OperationId:</strong>downloadExternalProfile</p>",
        "operationId": "downloadExternalProfile",
        "parameters": [
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "description": "If supplied, profile will be downloaded from this External System, otherwise it will be decided automatically based on the configuration.",
            "type": "string"
          },
          {
            "name": "chainCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Chain code from which the External Profiles will be downloaded."
          },
          {
            "name": "profileExternalId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Identifier of the Profile on the External System."
          },
          {
            "name": "externalDatabaseId",
            "in": "query",
            "required": false,
            "description": "Profile will be downloaded from this External database.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-transactionId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for the OPERA profile resulted from the download.",
            "schema": {
              "$ref": "#/definitions/profile"
            }
          },
          "204": {
            "description": "downloadExternalProfile not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/chains/{chainCode}/validateMembershipNumber": {
      "get": {
        "summary": "Validate Membership Number attached to a membership",
        "description": "Use this API when you want to validate membership numbers from external system. <p><strong>OperationId:</strong>validateMembershipNumber</p>",
        "operationId": "validateMembershipNumber",
        "parameters": [
          {
            "name": "chainCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "membershipNo",
            "in": "query",
            "required": true,
            "description": "Indicates membership number of the guest",
            "type": "string"
          },
          {
            "name": "membershipType",
            "in": "query",
            "required": true,
            "description": "Membership type for which point calculation process is to be run.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel code from which the membership code belongs to",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Type for response for external validation of membership number",
            "schema": {
              "$ref": "#/definitions/validateMembershipNumber"
            }
          },
          "204": {
            "description": "validateMembershipNumber not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/gamingOffers/{membershipNo}": {
      "get": {
        "summary": "Get offers that can be attached for a profile",
        "description": "Use this API when you have a guest profile and you want to get the offers available from an external system. <p><strong>OperationId:</strong>getGamingOffers</p>",
        "operationId": "getGamingOffers",
        "parameters": [
          {
            "name": "membershipNo",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code for which the offers will be fetched.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching offers from external system.",
            "schema": {
              "$ref": "#/definitions/gamingOffers"
            },
            "examples": {
              "application/json": {
                "profiles": {
                  "profileInfo": [
                    {
                      "profileIdList": [
                        {
                          "type": "",
                          "idContext": "a",
                          "id": "a"
                        }
                      ],
                      "profile": {
                        "customer": {
                          "personName": [
                            {
                              "namePrefix": "a",
                              "givenName": "Thomas",
                              "middleName": "B",
                              "surname": "Smith",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "envelopeGreeting": "",
                              "salutation": "",
                              "nameType": "PRIMARY",
                              "language": "E"
                            }
                          ],
                          "anonymization": {
                            "anonymizationStatus": "REQUESTED",
                            "anonymizationDate": "2019-09-03T14:56:18.21Z"
                          },
                          "citizenCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "idType": "PASSPORT",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "expirationDate": "2019-11-29",
                                  "registeredProperty": "",
                                  "primaryInd": false,
                                  "orderSequence": -100000000
                                }
                              }
                            ]
                          },
                          "profession": "Engineer",
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "birthCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "businessTitle": "Dr",
                          "gender": "MALE",
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "customerValue": "a",
                          "creditRating": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold",
                          "birthPlace": "New York",
                          "privateProfile": false,
                          "blacklist": false
                        },
                        "company": {
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "alternateName": "a",
                          "alternateLanguage": "E",
                          "businessLocale": "a",
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "businessTitle": "a",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "commissionCode": "",
                          "creditRating": "",
                          "corporateIdType": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold VIP",
                          "blacklist": false
                        },
                        "profileImage": {
                          "language": "",
                          "imageSet": "a",
                          "sequenceId": -100000000,
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "hotelCode": "",
                          "imageURL": "a",
                          "description": "a",
                          "imageOrder": -100000000,
                          "website": "a"
                        },
                        "addresses": {
                          "addressInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "cityName": "Redwood Shores",
                                "postalCode": "94065",
                                "cityExtension": "a",
                                "county": "a",
                                "state": "CA",
                                "country": {
                                  "name": "United States of America",
                                  "code": "US"
                                },
                                "language": "E",
                                "type": "",
                                "typeDescription": "",
                                "primaryInd": false,
                                "barCode": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "telephone": {
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "phoneNumber": "+1 415 555 0100",
                                "extension": "2",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "lastModifierId": "1234"
                              }
                            }
                          ]
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "email": {
                                "emailAddress": "eg@example.com",
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address",
                                "emailFormat": "HTML",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "lastModifierId": "1232"
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                },
                                "commentTitle": "a",
                                "notificationLocation": "",
                                "type": "",
                                "typeDescription": "a",
                                "internal": false,
                                "confidential": false,
                                "overrideInternal": false,
                                "protectDescription": false,
                                "hotelCode": "",
                                "actionType": "",
                                "actionDate": "0101-01-01",
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                }
                              },
                              "newMembershipId": "",
                              "nameOnCard": "Thomas Smith",
                              "programDescription": "Hotel Plus Membership",
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipClass": "MEM",
                              "earningPreference": "POINTS",
                              "inactive": false,
                              "benefits": [
                                {
                                  "code": "",
                                  "message": "a",
                                  "inactive": false
                                }
                              ],
                              "tierAdministration": "DISABLED",
                              "downgrade": "GRACE",
                              "reIssueNewCard": "PENDING",
                              "excludeFromBatch": false,
                              "upgradeDescription": "a",
                              "downgradeDescription": "a",
                              "rating": "",
                              "membershipEnrollmentCode": "",
                              "memberStatus": "",
                              "currentPoints": -100000000,
                              "pointsLabel": "a",
                              "enrollmentSource": "",
                              "enrollmentResort": "",
                              "preferredCard": false,
                              "membershipId": "",
                              "membershipType": "",
                              "primaryMembershipYn": "a",
                              "membershipIdNo": -100000000,
                              "centralSetup": false,
                              "signupDate": "0101-01-01",
                              "effectiveDate": "0101-01-01",
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "sequence": "",
                              "maxQuantity": -100000000,
                              "availableQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "reservationPreference": false,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "keywords": {
                          "keyword": [
                            {
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": "",
                              "keyword": "a"
                            }
                          ]
                        },
                        "profileIndicators": [
                          {
                            "indicatorName": "a",
                            "count": -100000000
                          }
                        ],
                        "lastStayInfo": {
                          "lastVisit": "0101-01-01",
                          "lastRoom": "",
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "totalStay": -100000000
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "mailingActions": {
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "active": false,
                          "totalRows": -100000000
                        },
                        "privacyInfo": {
                          "marketResearchParticipation": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "infoFromThirdParty": false,
                          "autoEnrollLoyaltyProgram": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "allowEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInThirdParty": false,
                          "optInAutoEnrollmentMember": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInEmail": false
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "a",
                              "value": "a",
                              "altname": "a"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "name": "a",
                              "value": -100000000,
                              "altname": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "name": "a",
                              "value": "0101-01-01",
                              "altname": "a"
                            }
                          ]
                        },
                        "localizationGuestType": "a",
                        "profileType": "GUEST",
                        "statusCode": "ACTIVE",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "protectedBy": "a",
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastModifierId": "1200",
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "hasCommission": false
                      }
                    }
                  ],
                  "totalRows": -100000000
                },
                "links": [
                  {
                    "href": "",
                    "rel": "",
                    "method": "GET",
                    "operationId": "",
                    "templated": false,
                    "targetSchema": "",
                    "title": ""
                  }
                ]
              }
            }
          },
          "204": {
            "description": "GamingOffers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/memberships/{membershipType}/membershipIDs": {
      "post": {
        "summary": "Generate membership number",
        "description": "This API will generate a new membership number. <p><strong>OperationId:</strong>postMembershipNumber</p>",
        "operationId": "postMembershipNumber",
        "parameters": [
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Profile will be downloaded from this External System."
          },
          {
            "name": "membershipType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "membershipNumber",
            "in": "body",
            "required": true,
            "description": "Request object for generating membership number.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/membershipNumber"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-transactionId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/playerStatistics/{profileId}": {
      "get": {
        "summary": "Retrieve player statistics",
        "description": "Request for the fetch player statistics WS operation <p><strong>OperationId:</strong>getPlayerStatistics</p>",
        "operationId": "getPlayerStatistics",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Identifier for profile ID"
          },
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "External System Code"
          },
          {
            "name": "playerId",
            "in": "query",
            "required": false,
            "description": "Unique Identifier for PlayerID.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Code of the Hotel.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of the WS operation to fetch player statistics.",
            "schema": {
              "$ref": "#/definitions/fetchPlayerStatisticsRS"
            },
            "examples": {
              "application/json": {
                "profiles": {
                  "profileInfo": [
                    {
                      "profileIdList": [
                        {
                          "type": "",
                          "idContext": "a",
                          "id": "a"
                        }
                      ],
                      "profile": {
                        "customer": {
                          "personName": [
                            {
                              "namePrefix": "a",
                              "givenName": "Thomas",
                              "middleName": "B",
                              "surname": "Smith",
                              "nameSuffix": "a",
                              "nameTitle": "Mr",
                              "nameTitleSuffix": -100000000,
                              "envelopeGreeting": "",
                              "salutation": "",
                              "nameType": "PRIMARY",
                              "language": "E"
                            }
                          ],
                          "anonymization": {
                            "anonymizationStatus": "REQUESTED",
                            "anonymizationDate": "2019-09-03T14:56:18.21Z"
                          },
                          "citizenCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "identifications": {
                            "identificationInfo": [
                              {
                                "identification": {
                                  "idType": "PASSPORT",
                                  "idNumber": "C03005988",
                                  "idNumberMasked": "C030059XX",
                                  "issuedCountry": "USA",
                                  "issuedDate": "2009-11-30",
                                  "issuedPlace": "New York",
                                  "expirationDate": "2019-11-29",
                                  "registeredProperty": "",
                                  "primaryInd": false,
                                  "orderSequence": -100000000
                                }
                              }
                            ]
                          },
                          "profession": "Engineer",
                          "alienInfo": {
                            "alienRegistrationNo": "",
                            "immigrationStatus": "a",
                            "visaValidityType": "a"
                          },
                          "birthCountry": {
                            "name": "United States of America",
                            "code": "US"
                          },
                          "businessTitle": "Dr",
                          "gender": "MALE",
                          "birthDate": "2000-01-01",
                          "birthDateMasked": "",
                          "language": "EN",
                          "nationality": "US",
                          "nationalityDescription": "a",
                          "customerValue": "a",
                          "creditRating": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold",
                          "birthPlace": "New York",
                          "privateProfile": false,
                          "blacklist": false
                        },
                        "company": {
                          "companyName": "Example Corporation, Ltd.",
                          "companyName2": "a",
                          "companyName3": "a",
                          "alternateName": "a",
                          "alternateLanguage": "E",
                          "businessLocale": "a",
                          "iATAInfo": {
                            "iATACompany": "a",
                            "iATAConsortia": "a"
                          },
                          "businessTitle": "a",
                          "currencyCode": "USD",
                          "currencySymbol": "a",
                          "decimalPlaces": -100000000,
                          "language": "",
                          "nationality": "US",
                          "nationalityDescription": "United States of America",
                          "commissionCode": "",
                          "creditRating": "",
                          "corporateIdType": "",
                          "vipStatus": "2",
                          "vipDescription": "Gold VIP",
                          "blacklist": false
                        },
                        "profileImage": {
                          "language": "",
                          "imageSet": "a",
                          "sequenceId": -100000000,
                          "imageStyle": "FULL",
                          "imageType": "a",
                          "hotelCode": "",
                          "imageURL": "a",
                          "description": "a",
                          "imageOrder": -100000000,
                          "website": "a"
                        },
                        "addresses": {
                          "addressInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "address": {
                                "addressLine": [
                                  "500 Oracle Parkway"
                                ],
                                "cityName": "Redwood Shores",
                                "postalCode": "94065",
                                "cityExtension": "a",
                                "county": "a",
                                "state": "CA",
                                "country": {
                                  "name": "United States of America",
                                  "code": "US"
                                },
                                "language": "E",
                                "type": "",
                                "typeDescription": "",
                                "primaryInd": false,
                                "barCode": "a",
                                "createDateTime": "2019-09-03T14:56:18.227Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.228Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "telephone": {
                                "phoneTechType": "PHONE",
                                "phoneUseType": "MOBILE",
                                "phoneUseTypeDescription": "Mobile Phone Number",
                                "phoneNumber": "+1 415 555 0100",
                                "extension": "2",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.23Z",
                                "creatorId": "1234",
                                "lastModifyDateTime": "2019-09-03T14:56:18.231Z",
                                "lastModifierId": "1234"
                              }
                            }
                          ]
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "email": {
                                "emailAddress": "eg@example.com",
                                "type": "BUSINESSEMAIL",
                                "typeDescription": "Business Email Address",
                                "emailFormat": "HTML",
                                "primaryInd": false,
                                "orderSequence": -100000000,
                                "createDateTime": "2019-09-03T14:56:18.234Z",
                                "creatorId": "1232",
                                "lastModifyDateTime": "2019-09-03T14:56:18.234Z",
                                "lastModifierId": "1232"
                              }
                            }
                          ]
                        },
                        "comments": {
                          "commentInfo": [
                            {
                              "uniqueId": {
                                "type": "",
                                "idContext": "a",
                                "id": "a"
                              },
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                },
                                "commentTitle": "a",
                                "notificationLocation": "",
                                "type": "",
                                "typeDescription": "a",
                                "internal": false,
                                "confidential": false,
                                "overrideInternal": false,
                                "protectDescription": false,
                                "hotelCode": "",
                                "actionType": "",
                                "actionDate": "0101-01-01",
                                "createDateTime": "2019-09-03T14:56:18.239Z",
                                "creatorId": "a",
                                "lastModifyDateTime": "2019-09-03T14:56:18.239Z",
                                "lastModifierId": "a"
                              }
                            }
                          ]
                        },
                        "profileMemberships": {
                          "profileMembership": [
                            {
                              "comment": {
                                "text": {
                                  "value": "",
                                  "language": ""
                                }
                              },
                              "newMembershipId": "",
                              "nameOnCard": "Thomas Smith",
                              "programDescription": "Hotel Plus Membership",
                              "membershipLevel": "Gold",
                              "membershipLevelDescription": "Gold Level",
                              "membershipClass": "MEM",
                              "earningPreference": "POINTS",
                              "inactive": false,
                              "benefits": [
                                {
                                  "code": "",
                                  "message": "a",
                                  "inactive": false
                                }
                              ],
                              "tierAdministration": "DISABLED",
                              "downgrade": "GRACE",
                              "reIssueNewCard": "PENDING",
                              "excludeFromBatch": false,
                              "upgradeDescription": "a",
                              "downgradeDescription": "a",
                              "rating": "",
                              "membershipEnrollmentCode": "",
                              "memberStatus": "",
                              "currentPoints": -100000000,
                              "pointsLabel": "a",
                              "enrollmentSource": "",
                              "enrollmentResort": "",
                              "preferredCard": false,
                              "membershipId": "",
                              "membershipType": "",
                              "primaryMembershipYn": "a",
                              "membershipIdNo": -100000000,
                              "centralSetup": false,
                              "signupDate": "0101-01-01",
                              "effectiveDate": "0101-01-01",
                              "expireDate": "0101-01-01",
                              "expireDateExclusiveIndicator": false,
                              "orderSequence": -100000000,
                              "createDateTime": "2019-09-03T14:56:18.247Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.248Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "preferenceCollection": {
                          "preferenceType": [
                            {
                              "preference": [
                                {}
                              ],
                              "preferenceType": "",
                              "preferenceTypeDescription": "",
                              "sequence": "",
                              "maxQuantity": -100000000,
                              "availableQuantity": -100000000,
                              "maxResortUsedQuantity": -100000000,
                              "reservationPreference": false,
                              "createDateTime": "2019-09-03T14:56:18.249Z",
                              "creatorId": "a",
                              "lastModifyDateTime": "2019-09-03T14:56:18.249Z",
                              "lastModifierId": "a"
                            }
                          ]
                        },
                        "keywords": {
                          "keyword": [
                            {
                              "keywordDetail": {
                                "newKeyword": "a"
                              },
                              "type": "",
                              "keyword": "a"
                            }
                          ]
                        },
                        "profileIndicators": [
                          {
                            "indicatorName": "a",
                            "count": -100000000
                          }
                        ],
                        "lastStayInfo": {
                          "lastVisit": "0101-01-01",
                          "lastRoom": "",
                          "lastRate": {
                            "amount": -100000000,
                            "currencyCode": "aaa"
                          },
                          "totalStay": -100000000
                        },
                        "profileAccessType": {
                          "chainCode": "a",
                          "croCode": "a",
                          "hotelCode": "a",
                          "sharedLevel": "GLOBAL"
                        },
                        "profileRestrictions": {
                          "reason": "",
                          "reasonDescription": "a",
                          "restricted": false
                        },
                        "mailingActions": {
                          "mailingAction": [
                            {
                              "code": "",
                              "description": "a"
                            }
                          ],
                          "active": false,
                          "totalRows": -100000000
                        },
                        "privacyInfo": {
                          "marketResearchParticipation": false,
                          "lastPrivacyPromptDate": "2000-01-01",
                          "infoFromThirdParty": false,
                          "autoEnrollLoyaltyProgram": false,
                          "allowPhone": false,
                          "allowSMS": false,
                          "allowEmail": false,
                          "optInMailingList": false,
                          "optInMarketResearch": false,
                          "optInThirdParty": false,
                          "optInAutoEnrollmentMember": false,
                          "optInPhone": false,
                          "optInSms": false,
                          "optInEmail": false
                        },
                        "userDefinedFields": {
                          "characterUDFs": [
                            {
                              "name": "a",
                              "value": "a",
                              "altname": "a"
                            }
                          ],
                          "numericUDFs": [
                            {
                              "name": "a",
                              "value": -100000000,
                              "altname": "a"
                            }
                          ],
                          "dateUDFs": [
                            {
                              "name": "a",
                              "value": "0101-01-01",
                              "altname": "a"
                            }
                          ]
                        },
                        "localizationGuestType": "a",
                        "profileType": "GUEST",
                        "statusCode": "ACTIVE",
                        "registeredProperty": "",
                        "requestForHotel": "",
                        "protectedBy": "a",
                        "createDateTime": "2000-09-03T14:56:18.259Z",
                        "creatorId": "1200",
                        "lastModifyDateTime": "2000-09-03T14:56:18.259Z",
                        "lastModifierId": "1200",
                        "markAsRecentlyAccessed": false,
                        "markForHistory": false,
                        "hasCommission": false
                      }
                    }
                  ],
                  "totalRows": -100000000
                },
                "links": [
                  {
                    "href": "",
                    "rel": "",
                    "method": "GET",
                    "operationId": "",
                    "templated": false,
                    "targetSchema": "",
                    "title": ""
                  }
                ]
              }
            }
          },
          "204": {
            "description": "PlayerStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/profiles/{externalProfileId}/memberships": {
      "get": {
        "summary": "Get membership information on a profile",
        "description": "Use this API to retrieve membership details on a profile. <p><strong>OperationId:</strong>getMembershipDetails</p>",
        "operationId": "getMembershipDetails",
        "parameters": [
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Profile will be downloaded from this External System."
          },
          {
            "name": "externalProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "operaProfileId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "membershipType",
            "in": "query",
            "required": false,
            "description": "The type of the membership.",
            "type": "string"
          },
          {
            "name": "membershipId",
            "in": "query",
            "required": false,
            "description": "The card number associated with this membership.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Property from which the membership stay information was received.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Whether member info search will pertain to transaction dates/ stay dates/ points credit dates.",
            "uniqueItems": true,
            "enum": [
              "TransactionDate",
              "StayBeginDate",
              "StayEndDate",
              "PointsCreditDate"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-transactionId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for member info.",
            "schema": {
              "$ref": "#/definitions/memberInformation"
            }
          },
          "204": {
            "description": "MembershipDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/profiles/{externalProfileId}/profileAwards": {
      "put": {
        "summary": "Redeem an award",
        "description": "Redeem an award that exists on a profile. <p><strong>OperationId:</strong>redeemAward</p>",
        "operationId": "redeemAward",
        "parameters": [
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Profile will be downloaded from this External System."
          },
          {
            "name": "externalProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "award",
            "in": "body",
            "required": true,
            "description": "Request object to redeem award.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/award"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-transactionId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for redeem award.",
            "schema": {
              "$ref": "#/definitions/award"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileMembership"
        ]
      }
    },
    "/hotels/{hotelId}/travelAgents/{iataNumber}": {
      "get": {
        "summary": "Validate IATA number.",
        "description": "This API will validate and check an IATA number. <p><strong>OperationId:</strong>checkIataNumber</p>",
        "operationId": "checkIataNumber",
        "parameters": [
          {
            "name": "iataNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "IATA Number"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Hotel Id"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-transactionId"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch IATA Number validation for Travel Agency Profile.",
            "schema": {
              "$ref": "#/definitions/iataNumberDetails"
            }
          },
          "204": {
            "description": "checkIataNumber not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    },
    "/validatedAddresses": {
      "get": {
        "summary": "Retrive valid addresses from a third party vendor.",
        "description": "Use this API when you want to validate address from a third party vendor. The response will be a list of addresses with its address ID based on the search criteria. <p><strong>OperationId:</strong>getValidatedAddresses</p>",
        "operationId": "getValidatedAddresses",
        "parameters": [
          {
            "name": "addressText",
            "in": "query",
            "required": true,
            "description": "The suggestion that should be presented to the user as a possible match to their input.",
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "required": true,
            "description": "The ID of the address recieved as part of an address search validation.",
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "description": "The preferred language for results. This should be a 2 or 4 character language code.",
            "type": "string"
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "required": false,
            "description": "Maximum time you are prepared to wait for a response.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response list of address validations based on supplied criteria",
            "schema": {
              "$ref": "#/definitions/validatedAddresses"
            }
          },
          "204": {
            "description": "ValidatedAddresses not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    },
    "/validatedAddresses/{externalAddressId}": {
      "get": {
        "summary": "Get full Address information from third party system for a given external Address ID. The external Address ID is fetched from valdatedAddresses service.",
        "description": "Use this API when you want to fetch full address information for a given address Id. <p><strong>OperationId:</strong>getValidatedAddress</p>",
        "operationId": "getValidatedAddress",
        "parameters": [
          {
            "name": "externalAddressId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "timeoutSeconds",
            "in": "query",
            "required": false,
            "description": "Maximum time you are prepared to wait for a response.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response address returned form the external vendor based on supplied criteria",
            "schema": {
              "$ref": "#/definitions/validatedAddress"
            }
          },
          "204": {
            "description": "ValidatedAddress not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ProfileExternal"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-transactionId": {
      "name": "x-transactionId",
      "description": "Transaction Id",
      "type": "string",
      "in": "header"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "profileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "customerType": {
      "type": "object",
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties": {
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date"
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string",
          "maxLength": 2000
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "alienInfoType": {
      "type": "object",
      "description": "immigration/visa information of a foreign person.",
      "properties": {
        "alienRegistrationNo": {
          "description": "Alien Registration Number.",
          "type": "string",
          "maxLength": 2000
        },
        "immigrationStatus": {
          "description": "Immigration Status on an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaValidityType": {
          "description": "Visa Type of an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "identificationInfoType": {
      "type": "object",
      "description": "Information on the identification of the customer.",
      "properties": {
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "identificationType": {
      "type": "object",
      "description": "Identification information of the customer.",
      "properties": {
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date"
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date"
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string",
          "maxLength": 2000
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string",
          "maxLength": 2000
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileMembershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string",
          "maxLength": 2000
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string",
          "maxLength": 2000
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string",
          "maxLength": 2000
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string",
          "maxLength": 2000
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string",
          "maxLength": 2000
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string",
          "maxLength": 2000
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string",
          "maxLength": 2000
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string",
          "maxLength": 2000
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date"
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date"
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date"
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, whild Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string",
          "maxLength": 2000
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "iATAInfoType": {
      "type": "object",
      "description": "IATA Information of the profile.",
      "properties": {
        "iATACompany": {
          "description": "IATA Company Detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "iATAConsortia": {
          "description": "IATA Consortia.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAValidationResult": {
          "description": "IATA Validation Result.",
          "type": "boolean"
        }
      }
    },
    "uRLInfoType": {
      "type": "object",
      "description": "Web site address.",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "ownerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        }
      }
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "imageSetType": {
      "type": "object",
      "description": "Represents on image set record.",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageStyleType": {
      "type": "string",
      "description": "An enumeration of image styles.",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "lastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details for the profile",
      "properties": {
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date"
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string",
          "maxLength": 2000
        },
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "mailingActionsType": {
      "type": "object",
      "description": "Defines mailing action list for the profile.",
      "properties": {
        "mailingAction": {
          "description": "Defines mailing action code and description.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "active": {
          "description": "When true indicates that profile has subscribed to the mailing list.",
          "type": "boolean"
        },
        "totalRows": {
          "description": "Total number of rows queried",
          "type": "integer"
        }
      }
    },
    "privacyInfoType": {
      "type": "object",
      "description": "Defines Privacy related information for the profile.",
      "properties": {
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date"
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        }
      }
    },
    "profileAccessType": {
      "type": "object",
      "properties": {
        "croCode": {
          "description": "Indicates the CRO code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "hotelId": {
          "description": "Indicates the Hotel code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sharedLevel": {
          "description": "Indicates whether the profile is shared at the following levels : global/property/CRO",
          "$ref": "#/definitions/profileSharedLevelType"
        }
      }
    },
    "profileSharedLevelType": {
      "type": "string",
      "description": "Simple types for Shared level.",
      "enum": [
        "Global",
        "Property",
        "Cro"
      ]
    },
    "preferenceTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string",
          "maxLength": 2000
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string",
          "maxLength": 2000
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "preferenceType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "preferenceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        }
      }
    },
    "keywordType": {
      "type": "object",
      "properties": {
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "type": {
          "description": "The type of keyword",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "keywordDetailType": {
      "type": "object",
      "properties": {
        "newKeyword": {
          "description": "The new keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date"
        },
        "altname": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "altname": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "altname": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "externalProfileSummaryInfoType": {
      "type": "object",
      "description": "Summary information about a external profile and the associated Unique IDs.",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code.",
          "$ref": "#/definitions/profileIdList"
        },
        "profile": {
          "description": "Provides summary information regarding profile.",
          "$ref": "#/definitions/externalProfileSummaryType"
        }
      }
    },
    "externalProfileSummaryType": {
      "type": "object",
      "description": "Type provides the basic information about the external profile.",
      "properties": {
        "formerName": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "gender": {
              "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "birthDate": {
              "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
              "type": "string",
              "format": "date"
            },
            "birthDateMasked": {
              "description": "Indicates the date of birth as masked.",
              "type": "string",
              "maxLength": 2000
            },
            "currencyCode": {
              "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "currencySymbol": {
              "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
              "type": "string",
              "minLength": 0,
              "maxLength": 10
            },
            "decimalPlaces": {
              "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
              "type": "integer"
            },
            "language": {
              "description": "Language identification.",
              "type": "string",
              "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
            },
            "customerValue": {
              "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "addressInfo": {
          "description": "Detailed information on an address for the customer.",
          "$ref": "#/definitions/addressInfoType"
        },
        "telephoneInfo": {
          "description": "Detailed information on telephone/ fax for the customer.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "emailInfo": {
          "description": "Detailed information on an eMail address for the customer.",
          "$ref": "#/definitions/emailInfoType"
        },
        "profileMembership": {
          "description": "Information on membership for the customer.",
          "$ref": "#/definitions/profileMembershipType"
        },
        "urlInfo": {
          "description": "Detailed information on web url/address for the customer.",
          "$ref": "#/definitions/uRLInfoType"
        },
        "owners": {
          "description": "Owner of the customer.",
          "$ref": "#/definitions/ownersType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "registeredProperty": {
          "description": "Property this profile is registered with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "ownersType": {
      "type": "array",
      "description": "Generic type for a list of owners.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ownerType"
      }
    },
    "profileEnrollmentType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "urls": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "urlInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "profileId": {
          "description": "Unique id of the profile.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "enrollmentCode": {
          "description": "Membership enrollment code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "externalDatabaseID": {
          "description": "Enrollment details will be fetched from this External database.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "userId": {
          "description": "UserID/LoginID of the user who is enrolling the Guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "employeeId": {
          "description": "EmployeeID of the user who is enrolling the Guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "externalProfileSummariesType": {
      "type": "object",
      "description": "A complex type containing the collection of Profile objects or Unique IDs of Profiles.",
      "properties": {
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/externalProfileSummaryInfoType"
          }
        },
        "totalRows": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "status": {
          "description": "Status of external Profile operation.",
          "$ref": "#/definitions/externalStatusType"
        },
        "haltOperation": {
          "description": "Hold/Continue external Profile operation.",
          "type": "boolean"
        }
      }
    },
    "externalStatusType": {
      "type": "string",
      "description": "Success return when there is no error and operation is successful.",
      "enum": [
        "NotEnoughCriteria",
        "IgnoredUnsupportedCriteria",
        "ExternalError",
        "CommunicationError",
        "Success"
      ]
    },
    "memberAwardType": {
      "type": "object",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems.",
          "$ref": "#/definitions/profileIdList"
        },
        "membershipType": {
          "description": "The type of the membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipCardNo": {
          "description": "The card number associated with this membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The current level of the membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Unique identifiers for the Reservation like Confirmation Number.",
          "$ref": "#/definitions/reservationIdList"
        },
        "adults": {
          "description": "Number of adults associated with the reservation.",
          "type": "integer"
        },
        "reservationTimeSpan": {
          "description": "Arrival and Departure dates of the reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "memberPointsBefore": {
          "description": "Member points before award transaction.",
          "type": "integer"
        },
        "memberPointsAfter": {
          "description": "Member points after award transaction.",
          "type": "integer"
        },
        "awardPoints": {
          "description": "Points associated with the award.",
          "type": "integer"
        },
        "cancelPointsReturn": {
          "description": "Number of cancel points returned.",
          "type": "integer"
        },
        "actualCancelPoints": {
          "description": "Actual number of cancel points.",
          "type": "integer"
        },
        "expiryPoints": {
          "description": "Points that will expire.",
          "type": "integer"
        },
        "awardProcessType": {
          "description": "Processing type of the award like Actual , Projected or Inactive.",
          "$ref": "#/definitions/memberAwardProcessType"
        },
        "memberAwardDetails": {
          "description": "Details related to member award per stay date.",
          "$ref": "#/definitions/memberAwardDetailsType"
        },
        "hotelId": {
          "description": "Property associated with the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "memberAwardDetailsType": {
      "type": "array",
      "description": "Details related to member award per stay date.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/memberAwardDetailType"
      }
    },
    "memberAwardDetailType": {
      "type": "object",
      "description": "Details related to member award like award type, stay date, rate code, etc.",
      "properties": {
        "awardType": {
          "description": "The award type or code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "awardBasedOn": {
          "description": "Indicates if award is a Stay, Package Element or other.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cancelPenaltyDays": {
          "description": "Number days before arrival to apply penalty for cancellation.",
          "type": "integer"
        },
        "cancelPenaltyCharge": {
          "description": "Number points deducted if award is cancelled.",
          "type": "integer"
        },
        "cancelPenaltyType": {
          "description": "Type of cancel penalty like Points, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cancelPenaltyPoints": {
          "description": "Number of penalty points if cancelled.",
          "type": "integer"
        },
        "stayDate": {
          "description": "Date of stay.",
          "type": "string",
          "format": "date"
        },
        "rateCode": {
          "description": "Rate code associated with the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type label associated with the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "product": {
          "description": "Product code for which the award was issued, in case of a product award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "fromRoomType": {
          "description": "Room type label before the upgrade in case of an upgrade award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "toRoomType": {
          "description": "Room type label after the upgrade for an upgrade award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "totalLocalAmount": {
          "description": "Total Local Amount on bill in Hotel Currency.",
          "type": "number"
        },
        "redeemedLocalAmount": {
          "description": "Redeemed Local Amount on bill in Hotel Currency.",
          "type": "number"
        },
        "totalCentralAmount": {
          "description": "Total Central Amount on bill in External System Currency.",
          "type": "number"
        },
        "redeemedCentralAmount": {
          "description": "Redeemed Central Amount on bill in External System Currency.",
          "type": "number"
        },
        "transactionCode": {
          "description": "The Payment Transaction Code for which the Surcharge Applies.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "exchangeRateType": {
          "description": "Exchange Rate Type for the Currency Exchange.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardVoucherNo": {
          "description": "Award Voucher Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "awardCancellationNo": {
          "description": "Unique ID for the award cancellation if cancelled.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "inactive": {
          "description": "If the award detail is inactive.",
          "type": "boolean"
        },
        "pointsRequired": {
          "description": "Points required for the stay date.",
          "type": "integer"
        }
      }
    },
    "memberAwardProcessType": {
      "type": "string",
      "description": "Processing type of the award like Actual , Projected or Inactive.",
      "enum": [
        "Actual",
        "Projected",
        "Inactive"
      ]
    },
    "profile": {
      "type": "object",
      "description": "Object for creation of profiles. This object contains profile details with unique identifiers for each profile.",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as ID.",
          "$ref": "#/definitions/profileIdList"
        },
        "profileDetails": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "enrollment": {
      "type": "object",
      "description": "Response object for fetching profile enrollment from external system.",
      "properties": {
        "enrollmentInfo": {
          "description": "Type contains profile enrollment information.",
          "$ref": "#/definitions/profileEnrollmentType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "externalProfiles": {
      "type": "object",
      "description": "Response object for fetching profiles from external CRM System. This object contains profile primary details, profile summary details, master info list containing code and description used as lookup for description.",
      "properties": {
        "externalProfileSummaries": {
          "description": "Type contains Profile's summary information.",
          "$ref": "#/definitions/externalProfileSummariesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "award": {
      "type": "object",
      "description": "Request object to redeem award.",
      "properties": {
        "memberAward": {
          "$ref": "#/definitions/memberAwardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "fetchPlayerStatisticsRS": {
      "type": "object",
      "description": "Response of the WS operation to fetch player statistics.",
      "properties": {
        "playerStatistics": {
          "description": "The player statistics details for the given profile.",
          "$ref": "#/definitions/playerStatisticsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "playerStatisticsType": {
      "type": "object",
      "description": "Contains Player Statistics information",
      "properties": {
        "enrollmentDate": {
          "type": "string",
          "maxLength": 2000
        },
        "compDollars": {
          "type": "string",
          "maxLength": 2000
        },
        "actualTableWins": {
          "type": "string",
          "maxLength": 2000
        },
        "actualOtherWins": {
          "type": "string",
          "maxLength": 2000
        },
        "tableTimePlayed": {
          "type": "string",
          "maxLength": 2000
        },
        "otherTimePlayed": {
          "type": "string",
          "maxLength": 2000
        },
        "averageSlotBet": {
          "type": "string",
          "maxLength": 2000
        },
        "skillRating": {
          "type": "string",
          "maxLength": 2000
        },
        "playerTableWins": {
          "type": "string",
          "maxLength": 2000
        },
        "playerOtherWins": {
          "type": "string",
          "maxLength": 2000
        },
        "theoriticalTableWins": {
          "type": "string",
          "maxLength": 2000
        },
        "theoriticalOtherWins": {
          "type": "string",
          "maxLength": 2000
        },
        "expectedProfit": {
          "type": "string",
          "maxLength": 2000
        },
        "grossMarkers": {
          "type": "string",
          "maxLength": 2000
        },
        "compPoints": {
          "type": "string",
          "maxLength": 2000
        },
        "totalComps": {
          "type": "string",
          "maxLength": 2000
        },
        "actualSlotWins": {
          "type": "string",
          "maxLength": 2000
        },
        "creditLimit": {
          "type": "string",
          "maxLength": 2000
        },
        "slotTimePlayed": {
          "type": "string",
          "maxLength": 2000
        },
        "avgTableBet": {
          "type": "string",
          "maxLength": 2000
        },
        "avgOtherBet": {
          "type": "string",
          "maxLength": 2000
        },
        "preferredGame": {
          "type": "string",
          "maxLength": 2000
        },
        "playerSlotWins": {
          "type": "string",
          "maxLength": 2000
        },
        "noOfRatings": {
          "type": "string",
          "maxLength": 2000
        },
        "theoSlotWins": {
          "type": "string",
          "maxLength": 2000
        },
        "theoProfit": {
          "type": "string",
          "maxLength": 2000
        },
        "bettingLimit": {
          "type": "string",
          "maxLength": 2000
        },
        "netMarkers": {
          "type": "string",
          "maxLength": 2000
        },
        "notes": {
          "type": "string",
          "maxLength": 2000
        }
      }
    },
    "gamingOffers": {
      "type": "object",
      "description": "Response object for fetching offers from external system.",
      "properties": {
        "gamingOffersInfo": {
          "description": "Type contains offers information.",
          "$ref": "#/definitions/gamingOffersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "gamingOffersType": {
      "type": "array",
      "description": "Offers that are availabl to be attached",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "iataNumberDetails": {
      "type": "object",
      "description": "Response object to fetch IATA Number validation for Travel Agency Profile.",
      "properties": {
        "checkIataNumberInfo": {
          "description": "Type contains profile enrollment information.",
          "$ref": "#/definitions/checkIataNumberType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkIataNumberType": {
      "type": "object",
      "description": "Type provides the IATA Validation information.",
      "properties": {
        "code": {
          "description": "IATA Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastRefreshDate": {
          "description": "Last Refresh Date.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reason": {
          "description": "Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "agencyName": {
          "description": "Agency Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "approvalDate": {
          "description": "Approval Date.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "agencyClass": {
          "description": "Agency Class.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "siteType": {
          "description": "Site Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "address": {
          "description": "Address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "city": {
          "description": "City.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "postalCode": {
          "description": "Postal Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "state": {
          "description": "State.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "country": {
          "description": "Country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "phoneNumber": {
          "description": "Phone Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "message": {
          "description": "Message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "membershipNumber": {
      "type": "object",
      "description": "Request object for generating membership number.",
      "properties": {
        "generateMembershipNumberCriteria": {
          "description": "Generate Membership Number criteria.",
          "$ref": "#/definitions/generateMembershipNumberCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "generateMembershipNumberCriteriaType": {
      "type": "object",
      "description": "Auto generate membership number criteria.",
      "properties": {
        "membershipType": {
          "description": "Indicates the Membership Type where membership number to be generated will be based on.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "memberInformation": {
      "type": "object",
      "description": "Response object for member info.",
      "properties": {
        "memberInfo": {
          "$ref": "#/definitions/memberInfoRSType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "memberInfoRSType": {
      "type": "object",
      "properties": {
        "memberInfoDetails": {
          "description": "Points and stay details of the membership.",
          "$ref": "#/definitions/memberInfoDetailsType"
        },
        "memberInfoRangeDetails": {
          "description": "Points and stay details for the membership range.",
          "$ref": "#/definitions/memberInfoDetailsType"
        },
        "nextTierPoints": {
          "description": "Points required for next tier of membership.",
          "type": "integer"
        },
        "pointsAvailable": {
          "description": "Points available for the member.",
          "type": "integer"
        }
      }
    },
    "memberInfoDetailsType": {
      "type": "object",
      "properties": {
        "guestTotalNights": {
          "description": "Total nights of the guest.",
          "type": "integer"
        },
        "guestTotalStay": {
          "description": "STotal stays of the guest.",
          "type": "integer"
        },
        "tierBaseNights": {
          "description": "Tier Base Nights Points.",
          "type": "integer"
        },
        "tierBaseRevenue": {
          "description": "Tier Base Revenue Points.",
          "type": "number"
        },
        "tierBaseStay": {
          "description": "Tier Base Stay Points.",
          "type": "integer"
        },
        "tierBonusNights": {
          "description": "Tier Bonus Nights Points.",
          "type": "integer"
        },
        "tierBonusRevenue": {
          "description": "Tier Bonus Revenue Points.",
          "type": "number"
        },
        "tierBonusStay": {
          "description": "Tier Bonus Stay Points.",
          "type": "integer"
        },
        "membershipTotalNights": {
          "description": "Total Nights of the membership.",
          "type": "integer"
        },
        "membershipTotalStay": {
          "description": "Total Stay of the membership.",
          "type": "integer"
        },
        "awardBasePoints": {
          "description": "Total base points of the award.",
          "type": "integer"
        },
        "awardBonusPoints": {
          "description": "Total bonus points of the award.",
          "type": "integer"
        },
        "awardMiscPoints": {
          "description": "Total miscellaneous points of the award.",
          "type": "integer"
        },
        "totalAwardPoints": {
          "description": "Total points of the award.",
          "type": "integer"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "addressValidationsType": {
      "type": "array",
      "description": "A collection of validated Addresses.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/addressValidationInfoType"
      }
    },
    "addressValidationInfoType": {
      "type": "object",
      "properties": {
        "addressText": {
          "description": "The suggestion that should be presented to the user as a possible match to their input.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "externalAddressId": {
          "description": "The ID of the address recieved as part of an address search validation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "addressType": {
          "description": "If the Type is 'Address' then the Id can be passed to the Retrieve service. Any other Id should be passed as the Container to a further Find request to get more results.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "validateMembershipNumber": {
      "type": "object",
      "description": "Response object for fetching offers from external system.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validatedAddresses": {
      "type": "object",
      "description": "Response object for fetching Addresses from external system.",
      "properties": {
        "addressValidationsInfo": {
          "description": "Type contains Address information.",
          "$ref": "#/definitions/addressValidationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validatedAddress": {
      "type": "object",
      "description": "Response object for fetching full address based on ID from external system.",
      "properties": {
        "addressValidationInfo": {
          "description": "Type contains Address information.",
          "$ref": "#/definitions/addressType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Profile",
      "description": "The Profile APIs allow you to view, create, update, and delete profiles in OPERA Cloud. Each time a new profile in created in OPERA Cloud, a profileID is assigned.  Use this profileID to retrieve and update details relating to that profile.   The resource 'Companies' includes group, source, company and travel agent profile types.   The resource 'Guests' includes individual and contact profile types."
    },
    {
      "name": "ProfileExternal",
      "description": "The Profile External module allows you to retrieve and manage profiles from an external system."
    },
    {
      "name": "ProfileMembership",
      "description": "This will allow you to create a guest profile enrollment in OPERA Cloud. Enrollment relates to a membership program, so as an example you can enrol the guest Mr Tom Smith into a Membership / loyalty program."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}