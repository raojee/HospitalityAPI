{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Rate API",
    "description": "APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>",
    "version": "22.3",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/rtp/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/displaySets": {
      "get": {
        "summary": "Get Display Sets",
        "description": "Use this API to get Display Sets. <p><strong>OperationId:</strong>getDisplaySets</p>",
        "operationId": "getDisplaySets",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Display Sets.",
            "schema": {
              "$ref": "#/definitions/displaySetsDetails"
            }
          },
          "204": {
            "description": "DisplaySets not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/hotels/{hotelId}/bestavailablerates": {
      "get": {
        "summary": "Fetch Best Available Rates",
        "description": "This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>getBestAvailableRates</p>",
        "operationId": "getBestAvailableRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "startDay",
            "in": "query",
            "required": true,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "rateCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "endDay",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "daysOfWeek",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Allowed values for the days of week type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "required": false
          },
          {
            "name": "lengthOfStay",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Allowed values for length stay type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "One",
                "Two",
                "Three",
                "Four",
                "Five",
                "Six",
                "Seven",
                "Eight"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for validating a coupon.",
            "schema": {
              "$ref": "#/definitions/getBestAvailableRatesDetails"
            }
          },
          "204": {
            "description": "BestAvailableRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "post": {
        "summary": "Create a Best Available Rates",
        "description": "This API allows to create Best Available rates for rate code(s). <p><strong>OperationId:</strong>postBestAvailableRates</p>",
        "operationId": "postBestAvailableRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "createBestAvailableRates",
            "in": "body",
            "required": true,
            "description": "Request to create best available rates for rate code(s)",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createBestAvailableRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "delete": {
        "summary": "Delete Best Available Rates",
        "description": "This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>deleteBestAvailableRates</p>",
        "operationId": "deleteBestAvailableRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lOS1",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 1 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS2",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 2 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS3",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 3 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS4",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 4 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS5",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 5 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS6",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 6 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS7",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 7 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS8",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 8 configuration.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/negotiatedRates": {
      "get": {
        "summary": "Get negotiated rates and profiles ",
        "description": "This API allows you to fetch negotiated rates and profile for a given hotel id. <p><strong>OperationId:</strong>getNegotiatedRates</p>",
        "operationId": "getNegotiatedRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeInactiveNegotiatedRates",
            "in": "query",
            "required": false,
            "description": "Inactive negotiated rates.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructionsLimit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for negotiated rates instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Discounts"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching negotiated rates and profile discounts.",
            "schema": {
              "$ref": "#/definitions/negotiatedRates"
            }
          },
          "204": {
            "description": "NegotiatedRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "post": {
        "summary": "Create negotiated rates ",
        "description": "This API allows you to create negotiated rate for a given profile. <p><strong>OperationId:</strong>postNegotiatedRates</p>",
        "operationId": "postNegotiatedRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "negotiatedRates",
            "in": "body",
            "required": true,
            "description": "Request object for creating negotiated rates. Also this object creates new profile discounts for given negotiated rates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/negotiatedRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/negotiatedRates/{rateCode}": {
      "put": {
        "summary": "Change negotiated rates ",
        "description": "This API allows you to update negotiated rate for a given profile. <p><strong>OperationId:</strong>putNegotiatedRates</p>",
        "operationId": "putNegotiatedRates",
        "parameters": [
          {
            "name": "rateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "negotiatedRates",
            "in": "body",
            "required": true,
            "description": "Request object for changing negotiated rates. This object can be used to manage the negotiated rates and profile discounts. Profile discounts can be created/updated/deleted.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/negotiatedRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/negotiatedRatesDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/negotiatedRates/{rateCode}/profiles": {
      "get": {
        "summary": "Fetch Negotiated Rates",
        "description": "This API allows you to fetch a Rate Plan and Profile for given hotel id and negotiated rate code. <p><strong>OperationId:</strong>getNegotiatedRatesForGivenHotelAndRate</p>",
        "operationId": "getNegotiatedRatesForGivenHotelAndRate",
        "parameters": [
          {
            "name": "rateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeInactiveNegotiatedRates",
            "in": "query",
            "required": false,
            "description": "Inactive negotiated rates.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructionsLimit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for negotiated rates instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Discounts"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching negotiated rates and profile discounts.",
            "schema": {
              "$ref": "#/definitions/negotiatedRates"
            }
          },
          "204": {
            "description": "NegotiatedRatesForGivenHotelAndRate not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/packageGroups": {
      "get": {
        "summary": "Get package groups",
        "description": "This API allows you to fetch package group. <p><strong>OperationId:</strong>getPackageGroups</p>",
        "operationId": "getPackageGroups",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Package code or group to be searched.",
            "type": "string"
          },
          {
            "name": "descriptionWildCard",
            "in": "query",
            "required": false,
            "description": "The description or a part of the description based on which results should be filtered.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch package groups.",
            "schema": {
              "$ref": "#/definitions/packageGroupsInfo"
            }
          },
          "204": {
            "description": "PackageGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/packages/{packageCode}": {
      "get": {
        "summary": "Get package for given package",
        "description": "This API allows you to fetch package details for a given package. <p><strong>OperationId:</strong>getPackage</p>",
        "operationId": "getPackage",
        "parameters": [
          {
            "name": "packageCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Package Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for package instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Header",
                "PostingRules",
                "CalculatedPrice",
                "Items",
                "Details",
                "UsageDetails"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch a package's complete details.",
            "schema": {
              "$ref": "#/definitions/packageInfo"
            }
          },
          "204": {
            "description": "Package not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/packages/{packageCode}/rates": {
      "get": {
        "summary": "Get package rates",
        "description": "This API allows you to fetch rate plan codes associated for a package. <p><strong>OperationId:</strong>getPackageRates</p>",
        "operationId": "getPackageRates",
        "parameters": [
          {
            "name": "packageCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Package Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch rate plan codes associated for a package. It contains package's short information.",
            "schema": {
              "$ref": "#/definitions/packageRates"
            }
          },
          "204": {
            "description": "PackageRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/rateCategories": {
      "post": {
        "summary": "Create Rate Category",
        "description": "This API can be used to Use this API to create a Rate Category e.g.  RACK. Only one rate category can be Use this API to created at a time. <p><strong>OperationId:</strong>postRateCategory</p>",
        "operationId": "postRateCategory",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "rateCategoryCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for Creating a new Rate Category for a property.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/rateCategoryCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/rateClasses": {
      "get": {
        "summary": "Get rate classes",
        "description": "Use this API to get rate classes. <p><strong>OperationId:</strong>getRateClass</p>",
        "operationId": "getRateClass",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "rateClassListCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the rate class.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator which tells whether inactive rate class to be included or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch rate classes.",
            "schema": {
              "$ref": "#/definitions/rateClassDetails"
            }
          },
          "204": {
            "description": "RateClass not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/ratePlans": {
      "post": {
        "summary": "Create rate plans ",
        "description": "This API allows you to create Rate Plans for a given hotel id. <p><strong>OperationId:</strong>postRatePlan</p>",
        "operationId": "postRatePlan",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "ratePlan",
            "in": "body",
            "required": true,
            "description": "Request object to create rate plan.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ratePlan"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/ratePlans/{ratePlanCode}": {
      "get": {
        "summary": "Get rate plan",
        "description": "This API allows you to fetch Rate Plan for a given hotel id and Rate Plan Code. <p><strong>OperationId:</strong>getRatePlan</p>",
        "operationId": "getRatePlan",
        "parameters": [
          {
            "name": "ratePlanCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for Rate plan codes instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "PrimaryDetails",
                "TransactionDetails",
                "Packages",
                "RateCommission",
                "NegotiatedProfiles",
                "RateControls",
                "RoutingInstructions",
                "AccessExclusions",
                "ApprovalNotes"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch rate plan's complete details.",
            "schema": {
              "$ref": "#/definitions/ratePlanInfo"
            }
          },
          "204": {
            "description": "RatePlan not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/ratePlans/{ratePlanCode}/schedules": {
      "get": {
        "summary": "Get rate plan schedules",
        "description": "This API allows you to fetch Rate Plan schedules. <p><strong>OperationId:</strong>getRatePlanSchedules</p>",
        "operationId": "getRatePlanSchedules",
        "parameters": [
          {
            "name": "ratePlanCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "excludeRatePlanPackage",
            "in": "query",
            "required": false,
            "description": "Exclude the List of Pricing Schedule Packages from the response.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "tierId",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          },
          {
            "name": "ratePlanScheduleId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "ratePlanScheduleIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Type.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClass",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Class.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Include inactive rate schedules in the fetch result.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch rate plan schedules.",
            "schema": {
              "$ref": "#/definitions/ratePlanSchedulesInfo"
            }
          },
          "204": {
            "description": "RatePlanSchedules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "put": {
        "summary": "Change rate plan schedules",
        "description": "This API allows you to update Rate Plan schedules. <p><strong>OperationId:</strong>putRatePlanSchedules</p>",
        "operationId": "putRatePlanSchedules",
        "parameters": [
          {
            "name": "ratePlanCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "ratePlanSchedules",
            "in": "body",
            "required": true,
            "description": "Request object to change rate plan schedules.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ratePlanSchedules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "post": {
        "summary": "Create rate plan schedules",
        "description": "This API allows you to create Rate Plan schedules. <p><strong>OperationId:</strong>postRatePlanSchedules</p>",
        "operationId": "postRatePlanSchedules",
        "parameters": [
          {
            "name": "ratePlanCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "ratePlanSchedulesToCreate",
            "in": "body",
            "required": true,
            "description": "Request object to create rate plan schedules.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ratePlanSchedulesToCreate"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "delete": {
        "summary": "Delete rate plan schedule",
        "description": "This API allows you to delete Rate Plan schedules. <p><strong>OperationId:</strong>deleteRatePlanSchedules</p>",
        "operationId": "deleteRatePlanSchedules",
        "parameters": [
          {
            "name": "ratePlanCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "ratePlanScheduleIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/packages": {
      "get": {
        "summary": "Get packages",
        "description": "This API allows you to fetch packages for a hotel id. <p><strong>OperationId:</strong>getPackages</p>",
        "operationId": "getPackages",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "packageCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "descriptionWildCard",
            "in": "query",
            "required": false,
            "description": "The description or a part of the description based on which results should be filtered.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start Date for pricing schedule.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End Date for pricing schedule.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "adults",
            "in": "query",
            "required": false,
            "description": "Number of adults for pricing schedule calculation.",
            "type": "integer"
          },
          {
            "name": "children",
            "in": "query",
            "required": false,
            "description": "Number of children for pricing schedule calculation.",
            "type": "integer"
          },
          {
            "name": "bucket1Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
            "type": "integer"
          },
          {
            "name": "bucket2Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
            "type": "integer"
          },
          {
            "name": "bucket3Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
            "type": "integer"
          },
          {
            "name": "bucket4Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
            "type": "integer"
          },
          {
            "name": "bucket5Count",
            "in": "query",
            "required": false,
            "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
            "type": "integer"
          },
          {
            "name": "includeGroup",
            "in": "query",
            "required": false,
            "description": "Indicates if Group Packages will be fetched.",
            "type": "boolean"
          },
          {
            "name": "sellSeparate",
            "in": "query",
            "required": false,
            "description": "Indicates if Only Sell Separate Packages will be fetched, if not specified, it will ignore the criteria.",
            "type": "boolean"
          },
          {
            "name": "ticketPostingRhythm",
            "in": "query",
            "required": false,
            "description": "Indicates if Only Ticket Posting Rhythm will be fetched, if not specified, it will ignore the criteria.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for package instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Header",
                "PostingRules",
                "CalculatedPrice",
                "Items",
                "Details",
                "UsageDetails"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch list of packages.",
            "schema": {
              "$ref": "#/definitions/packagesInfo"
            }
          },
          "204": {
            "description": "Packages not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/profiles/{profileId}/negotiatedRates": {
      "get": {
        "summary": "Get negotiated rate details for given profile",
        "description": "This API allows you to fetch negotiated Rates for a given profile. <p><strong>OperationId:</strong>getNegotiatedRatesForGivenProfile</p>",
        "operationId": "getNegotiatedRatesForGivenProfile",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "hotelCode",
            "in": "query",
            "required": false,
            "description": "Hotel code associated to the hotel",
            "type": "string"
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "required": false,
            "description": "Rate Plan Code associated with the rate",
            "type": "string"
          },
          {
            "name": "includeInactiveNegotiatedRates",
            "in": "query",
            "required": false,
            "description": "Inactive negotiated rates.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructionsLimit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for negotiated rates instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Discounts"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching negotiated rates and profile discounts.",
            "schema": {
              "$ref": "#/definitions/negotiatedRates"
            }
          },
          "204": {
            "description": "NegotiatedRatesForGivenProfile not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/ratePlans": {
      "get": {
        "summary": "Get rate plans",
        "description": "This API allows you to fetch Rate Plans. <p><strong>OperationId:</strong>getRatePlans</p>",
        "operationId": "getRatePlans",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeRateInformation",
            "in": "query",
            "required": false,
            "description": "Indicates whether rate plan short and long information should be included in the fetched results.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Rate Plan code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "rateCategory",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Rate category of the rate plan.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "sellDate",
            "in": "query",
            "required": false,
            "description": "Sell date of the rate plan.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "displaySet",
            "in": "query",
            "required": false,
            "description": "Display set for the rate plan.",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "attributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Include or not include inactive rate codes.",
            "type": "boolean"
          },
          {
            "name": "dayUseOnly",
            "in": "query",
            "required": false,
            "description": "Indicates to only fetch rate plans flagged as Day Use.",
            "type": "boolean"
          },
          {
            "name": "approvalStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Indicates that the Rate Plan is approved for selling.",
            "uniqueItems": true,
            "enum": [
              "NewUnapproved",
              "ChangedUnapproved",
              "Rejected",
              "Approved"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch rate plans summary information.",
            "schema": {
              "$ref": "#/definitions/ratePlansSummary"
            }
          },
          "204": {
            "description": "RatePlans not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "displaySetsDetails": {
      "type": "object",
      "description": "Response object for fetching Display Sets.",
      "properties": {
        "displaySets": {
          "description": "Collection of Display Sets.",
          "$ref": "#/definitions/displaySetsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "displaySetsType": {
      "type": "array",
      "description": "List of Display Sets.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/displaySetType"
      }
    },
    "displaySetType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Determines whether this code is inactive or not.",
          "type": "boolean"
        },
        "protected": {
          "description": "Determines whether this code is protected from deleting and making inactive",
          "type": "boolean"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "getBestAvailableRatesDetails": {
      "type": "object",
      "properties": {
        "bestAvailableRatesList": {
          "description": "The list of best available rates for rate code(s)",
          "$ref": "#/definitions/bestAvailableRatesListType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bestAvailableRatesListType": {
      "type": "object",
      "description": "The list of best availabe rates for rate code(s)",
      "properties": {
        "bestAvailableRates": {
          "description": "Collection of best available rates for rate code(s)",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bestAvailableRateType"
          }
        },
        "masterInfoList": {
          "description": "The list of references of rate code selected as best available rates",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/masterInfo"
          }
        },
        "hotelId": {
          "description": "Hotel code for which best available rates will be considered.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bestAvailableRateType": {
      "type": "object",
      "description": "The list of best availabe rates for rates code(s).",
      "properties": {
        "rateCode": {
          "description": "Rate Code selected to be search.",
          "$ref": "#/definitions/codeListType"
        },
        "lengthOfStay": {
          "description": "Best available rate length of stay",
          "type": "integer"
        },
        "date": {
          "description": "Best available rate date available",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "masterInfo": {
      "type": "object",
      "description": "The reference to the rate codes selected as best availabe rates",
      "properties": {
        "rate": {
          "description": "Rate Codes for which best available rates will be considered.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "createBestAvailableRates": {
      "type": "object",
      "description": "Request to create best available rates for rate code(s)",
      "properties": {
        "bestAvailableRates": {
          "description": "The best available rates created.",
          "$ref": "#/definitions/bestAvailableRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bestAvailableRatesType": {
      "type": "object",
      "description": "The best available rate for rate code(s)",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for Best Available Rate",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate Code selected to be search.",
          "$ref": "#/definitions/codeListType"
        },
        "dateRange": {
          "description": "Date range for the best available rates.",
          "$ref": "#/definitions/dateRangeType"
        },
        "duration": {
          "description": "Days for which best available rates will be considered",
          "type": "object",
          "properties": {
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            }
          }
        },
        "lengthOfStay": {
          "description": "Length of Stay for which best available rates will be considered",
          "type": "object",
          "properties": {
            "lOS1": {
              "description": "Indicates Length of Stay 1 configuration.",
              "type": "boolean"
            },
            "lOS2": {
              "description": "Indicates Length of Stay 2 configuration.",
              "type": "boolean"
            },
            "lOS3": {
              "description": "Indicates Length of Stay 3 configuration.",
              "type": "boolean"
            },
            "lOS4": {
              "description": "Indicates Length of Stay 4 configuration.",
              "type": "boolean"
            },
            "lOS5": {
              "description": "Indicates Length of Stay 5 configuration.",
              "type": "boolean"
            },
            "lOS6": {
              "description": "Indicates Length of Stay 6 configuration.",
              "type": "boolean"
            },
            "lOS7": {
              "description": "Indicates Length of Stay 7 configuration.",
              "type": "boolean"
            },
            "lOS8": {
              "description": "Indicates Length of Stay 8 configuration.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "baseType": {
      "type": "string",
      "description": "Simple type for base type, flat or differential.",
      "enum": [
        "Flat",
        "Differential"
      ]
    },
    "roomTypeListType": {
      "type": "array",
      "description": "Room Type.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "rateByAgeBucketsType": {
      "type": "array",
      "description": "Rate amount by age bucket.",
      "maxItems": 3,
      "items": {
        "$ref": "#/definitions/rateByAgeBucketType"
      }
    },
    "rateByAgeBucketType": {
      "type": "object",
      "description": "Rate amount by age bucket.",
      "properties": {
        "rateAmount": {
          "description": "Rate amount by age bucket.",
          "type": "number"
        },
        "minimumAge": {
          "description": "Minimum age for age bucket.",
          "type": "integer"
        },
        "maximumAge": {
          "description": "Maximum age for age bucket.",
          "type": "integer"
        }
      }
    },
    "negotiatedRates": {
      "type": "object",
      "description": "Response object for fetching negotiated rates and profile discounts.",
      "properties": {
        "negotiatedRates": {
          "description": "Negotiated rates based on the search criteria.",
          "$ref": "#/definitions/negotiatedRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "negotiatedRatesType": {
      "type": "array",
      "description": "List of Negotiated rates to be maintained.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/negotiatedRateType"
      }
    },
    "negotiatedRateType": {
      "type": "object",
      "description": "Negotiated rate details",
      "properties": {
        "negotiatedProfile": {
          "description": "Collection of Negotiated profiles.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedProfileType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "negotiatedProfileType": {
      "type": "object",
      "description": "Profile details",
      "properties": {
        "profileIdList": {
          "description": "Unique id for the Negotiated profile.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileName": {
          "description": "Name details for the profile.",
          "$ref": "#/definitions/profileNameType"
        },
        "rateInfoList": {
          "description": "collection of Negotiated rates.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negRateAccessType"
          }
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "profileNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "negRateAccessType": {
      "type": "object",
      "description": "Details of Negotiated rate.",
      "properties": {
        "commissionCode": {
          "description": "Commission code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "negotiatedRateOrder": {
          "description": "Sequence for the negotiated rate.",
          "type": "integer"
        },
        "newTimeSpan": {
          "description": "Valid Time span for the negotiated rate.",
          "$ref": "#/definitions/timeSpanType"
        },
        "discounts": {
          "description": "List of discounts for the negotiated rate.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileDiscountType"
          }
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "profileDiscountType": {
      "type": "object",
      "description": "Discount details for a profile.",
      "properties": {
        "dateRangeDetails": {
          "description": "Valid Time span for the discount rate and days of week details.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "discAmount": {
          "description": "Discount amount value and type. Percentage or flat for a discounted rate.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "number"
            },
            "flatOrPercentage": {
              "type": "string"
            }
          }
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "negotiatedRatesDetails": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "packageGroupsInfo": {
      "type": "object",
      "description": "Response object to fetch package groups.",
      "properties": {
        "packageGroupList": {
          "description": "List of package groups.",
          "type": "object",
          "properties": {
            "packageGroups": {
              "description": "Package Groups of each hotel.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/hotelPackageGroupsType"
              }
            },
            "allRowsFetched": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalRows": {
              "description": "Total number of rows queried",
              "type": "integer"
            }
          }
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelPackageGroupsType": {
      "type": "object",
      "properties": {
        "packageGroup": {
          "description": "Information about the each package group.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageGroupType"
          }
        },
        "hotelId": {
          "description": "Hotel code for the packages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "packageGroupType": {
      "type": "object",
      "description": "Information about a package group common to all usages.",
      "properties": {
        "description": {
          "description": "Package group description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of the package group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "code": {
          "description": "Package group Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sellSeparate": {
          "description": "Can Package group be sold separately?",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Is Package group web bookable?",
          "type": "boolean"
        },
        "membersList": {
          "description": "List of Package group Members.",
          "$ref": "#/definitions/packageCodeListType"
        }
      }
    },
    "packageCodeListType": {
      "type": "array",
      "description": "Package Full Information",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/packageCodeType"
      }
    },
    "packageCodeType": {
      "type": "object",
      "properties": {
        "header": {
          "description": "Package code header details.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "schedules": {
          "description": "Package code price schedule details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configPackageScheduleType"
          }
        },
        "hotelId": {
          "description": "Hotel code for the packages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Package Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Package Code Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "group": {
          "description": "Indicates if it is a Package Group or not.",
          "type": "boolean"
        },
        "ratePlanCode": {
          "description": "Package Code specific to a rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "adjustOverlappingRange": {
          "description": "Flag to adjust the overlapping dates automatically. True will allow the system to adjust the overlapping dates automatically . False will not allow overlapping dates and throws error messages if overlapping dates are found",
          "type": "boolean"
        },
        "redemption": {
          "description": "Flag to configure the package as Award Package so they can be redeemed for points on a reservation",
          "type": "boolean"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "usageDetails": {
          "description": "Package code usage information.",
          "$ref": "#/definitions/configPackageUsageDetailType"
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "type": "object",
      "description": "A Config Package Info type.",
      "properties": {
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "Indicates the end sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "configPackageTransactionType": {
      "type": "object",
      "description": "A HotelPackageTransaction type.",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "packagePostingRules": {
          "description": "The package posting rule details.",
          "$ref": "#/definitions/packagePostingRulesType"
        }
      }
    },
    "packagePostingRulesType": {
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "The Transaction code used to post the package price.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "overageCode": {
          "description": "The overage code to record over consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "profitCode": {
          "description": "The transaction code to record package profit, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "lossCode": {
          "description": "The transaction code to record package Loss, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "alternateCodesList": {
          "description": "The alternate transaction code that can be consumed by the guest in place of the transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageTransactionCodeType"
          }
        }
      }
    },
    "packageTransactionCodeType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Posting / transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Code is inclusive or exclusive of other chanrges such as taxes.",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "amountDeterminationType": {
      "type": "string",
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "configPostingAttributesType": {
      "type": "object",
      "description": "A config Package posting attributes type.",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the room rate.",
          "type": "boolean"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "deliveryTimeRequired": {
          "description": "Indicates whether a delivery time is required for the package.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Can package be sold via Web channel.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionName": {
          "description": "The custom formula function name used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionArguments": {
          "description": "The function argument name-value combination accepted by the custom formula used for this package.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        }
      }
    },
    "functionArgumentsType": {
      "type": "array",
      "description": "Collection of function arguments and their corresponding values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionArgumentType": {
      "type": "object",
      "description": "This type provided details of a function argument and the value it holds.",
      "properties": {
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "packagePostingRhythmType": {
      "type": "object",
      "description": "Package Posting rhythm type.",
      "properties": {
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            },
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            }
          }
        },
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The start and end of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the start date for the period. The End Date specified on the reservation when the package was attached is the end date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "postingRhythmType": {
      "type": "string",
      "description": "Simple type for posting Rhythm types.",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "packageCalculationRuleType": {
      "type": "string",
      "description": "Simple type for package caluculation rules.",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        }
      }
    },
    "configPackageUsageDetailType": {
      "type": "object",
      "description": "A Config Package Usage Detail type.",
      "properties": {
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation.",
          "$ref": "#/definitions/productSourceType"
        },
        "usedInReservations": {
          "description": "Indicates if the package is used in, reserved or prospect reservations.",
          "type": "boolean"
        },
        "usedInRates": {
          "description": "Indicates if the package is used in any rate code.",
          "type": "boolean"
        },
        "usedInHouseReservations": {
          "description": "Indicates if any checked in reservations are using this product.",
          "type": "boolean"
        }
      }
    },
    "productSourceType": {
      "type": "string",
      "description": "Sources of Products",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "configPackageScheduleType": {
      "type": "object",
      "description": "A Hotel Package Schedule.",
      "properties": {
        "newTimeSpan": {
          "description": "The new time span for package price.",
          "$ref": "#/definitions/timeSpanType"
        },
        "schedulePrices": {
          "description": "Collection of price schedule for the package.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelPackageSchedulePriceType"
          }
        },
        "ratePlanCode": {
          "description": "The rate plan code specific prices for the package (if any).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "minNights": {
          "description": "Minimum number of nights that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "maxNights": {
          "description": "Maximum number of nights that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "minPersons": {
          "description": "Minimum number of persons that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "maxPersons": {
          "description": "Maximum number of persons that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "newMinNights": {
          "description": "New minimum number of nights that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "newMaxNights": {
          "description": "New maximum number of nights that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "newMinPersons": {
          "description": "New minimum number of persons that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "newMaxPersons": {
          "description": "New maximum number of persons that are required on a reservation to avail the package.",
          "type": "integer"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "hotelPackageSchedulePriceType": {
      "type": "object",
      "description": "A Hotel Package Schedule Pricing.",
      "properties": {
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "unitPoints": {
          "description": "Number of points per unit of the package",
          "type": "number"
        },
        "bucket": {
          "description": "The bucket is applicable for child bucket functionality when package's price calculation rule is Child.",
          "$ref": "#/definitions/packageChildBuckets"
        }
      }
    },
    "packageChildBuckets": {
      "type": "string",
      "description": "Simple type for package child buckets.",
      "enum": [
        "Bucket1",
        "Bucket2",
        "Bucket3"
      ]
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "description": "",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addtionalCodeInfoType": {
      "type": "array",
      "description": "Holds name of additional code information",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "packageInfo": {
      "type": "object",
      "description": "Request object to create a package.",
      "properties": {
        "packageCode": {
          "description": "Details of the package code to be created.",
          "$ref": "#/definitions/packageCodeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "packageRates": {
      "type": "object",
      "description": "Response object to fetch rate plan codes associated for a package. It contains package's short information.",
      "properties": {
        "ratePlanList": {
          "description": "Hotel code for which rates are associated.",
          "type": "object",
          "properties": {
            "ratePlan": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ratePlanShortInfoType"
              }
            },
            "hotelCode": {
              "description": "Hotel code for which rates are associated.",
              "$ref": "#/definitions/codeType"
            },
            "packageCode": {
              "description": "Package code for which rates are associated.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ratePlanShortInfoType": {
      "type": "object",
      "description": "The Rate plan code information.",
      "properties": {
        "primaryDetails": {
          "description": "Rate plan code header primary details.",
          "$ref": "#/definitions/ratePlanPrimaryDetailsType"
        },
        "classifications": {
          "description": "Rate plan code grouping details.",
          "$ref": "#/definitions/ratePlanClassificationsType"
        },
        "descriptions": {
          "description": "Short and Long info details of the Rate Plan.",
          "$ref": "#/definitions/ratePlanDescriptionsType"
        },
        "externalAttributes": {
          "description": "Elements which are needed by External Interfaces",
          "$ref": "#/definitions/ratePlanExternalAttributesType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "discountAllowed": {
          "description": "Indicates whether the rate plan is allowed to be discounted.",
          "type": "boolean"
        }
      }
    },
    "ratePlanPrimaryDetailsType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the rate plan.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "startSellDate": {
          "description": "Start sell date of the rate plan.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "End sell date of the rate plan.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sellSequence": {
          "description": "Sell Sequence for the rate plan.",
          "type": "number"
        },
        "privilegedRate": {
          "description": "The particular rate code is marked as privileged making it restrictive on who can update information.",
          "type": "boolean"
        },
        "privilegedRateRestriction": {
          "description": "The restrictions marked on the rate code are marked as privileged making it restrictive on who can update information.",
          "type": "boolean"
        },
        "baseType": {
          "description": "In Advanced Dynamic Base Rates, specifies how the rate code rates are defined, either as FLAT (defined by amounts) or DIFFERENTIAL (defined by offset).",
          "$ref": "#/definitions/baseType"
        },
        "lockStatus": {
          "description": "Specifies the lock status of the rate code. Rates can be Unlocked, Externally locked, locked at Property level, or locked at Central level.",
          "$ref": "#/definitions/rateCodeLockStatusType"
        },
        "approvalStatus": {
          "description": "Approval Status of the Rate Plan.",
          "$ref": "#/definitions/ratePlanApprovalStatusType"
        }
      }
    },
    "rateCodeLockStatusType": {
      "type": "string",
      "description": "Indicates that the rate code is locked by the central system and cannot be edited at the property level.",
      "enum": [
        "Unlocked",
        "External",
        "Property",
        "Central"
      ]
    },
    "ratePlanApprovalStatusType": {
      "type": "string",
      "description": "Indicates that the Rate Plan is approved for selling.",
      "enum": [
        "NewUnapproved",
        "ChangedUnapproved",
        "Rejected",
        "Approved"
      ]
    },
    "ratePlanClassificationsType": {
      "type": "object",
      "properties": {
        "rateCategory": {
          "description": "Rate Category for the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySet": {
          "description": "Display set for the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCode": {
          "description": "Market code for the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCode": {
          "description": "Source code for the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateGroup": {
          "description": "Rate group for the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "ratePlanDescriptionsType": {
      "type": "object",
      "description": "Info URL, Short and Long Info details of the rate plan.",
      "properties": {
        "shortInfo": {
          "description": "Short info of the rate plan.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "longInfo": {
          "description": "Long info of the rate plan.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "infoURL": {
          "description": "Info URL is the location associated for more information about the rate plan.",
          "type": "string"
        },
        "rateInfoTemplate": {
          "description": "Rate information template which is configured for the hotel. This value can be used to populate the LongInfo of this rate plan, if desired.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "ratePlanExternalAttributesType": {
      "type": "object",
      "properties": {
        "marshaRateProgram": {
          "description": "Rate Category for the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "billingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingInstructionType": {
      "type": "object",
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "properties": {
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "rateAccessExclusionType": {
      "type": "object",
      "description": "Access Exclusion information indicating the actions allowed under a HUB or Hotel for which the access exclusion is set.",
      "properties": {
        "sourceType": {
          "description": "The type of source (CRO or Hotel code) for which the rate access exclusion is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceValue": {
          "description": "CRO or Hotel code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "allowModifyReservation": {
          "description": "Allow to modify a reservation under this access exclusion.",
          "type": "boolean"
        },
        "allowCancelReservation": {
          "description": "Allow to cancel a reservation under this access exclusion.",
          "type": "boolean"
        },
        "allowCreateReservation": {
          "description": "Allow to create a reservation under this access exclusion.",
          "type": "boolean"
        },
        "inactive": {
          "description": "The rate access exclusion is inactive",
          "type": "boolean"
        },
        "excludeFromAvailability": {
          "description": "Exclude a specific rate from availability",
          "type": "boolean"
        },
        "dateRange": {
          "description": "Date range for the rate access exclusion.",
          "$ref": "#/definitions/dateRangeType"
        }
      }
    },
    "rateCategoryCriteria": {
      "type": "object",
      "description": "Request object for Creating a new Rate Category for a property.",
      "properties": {
        "hotelRateCategory": {
          "description": "Hotel rate category to be created.",
          "$ref": "#/definitions/hotelRateCategoryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRateCategoryType": {
      "type": "object",
      "description": "This type represents the rate category type.",
      "properties": {
        "rateCategoryDetails": {
          "description": "Begin date for the rate category.",
          "type": "object",
          "properties": {
            "beginDate": {
              "description": "Begin date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "description": "End date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "description": "Description of rate category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "rateClass": {
              "description": "Active date of the room category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "sellSequence": {
              "description": "Indicates rate category sell sequence.",
              "type": "number"
            }
          }
        },
        "rateCategory": {
          "description": "Rate category Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code for a rate category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "rateClassDetails": {
      "type": "object",
      "description": "Response for fetch rate classes.",
      "properties": {
        "rateClasses": {
          "description": "Collection of rate classes.",
          "type": "object",
          "properties": {
            "rateClasses": {
              "description": "Collection of rate classes.",
              "$ref": "#/definitions/rateClassesType"
            },
            "totalPages": {
              "description": "Evaluated total page count based on the requested max fetch count.",
              "type": "integer"
            },
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rateClassesType": {
      "type": "array",
      "description": "Collection of hotel rate classes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/rateClassType"
      }
    },
    "rateClassType": {
      "type": "object",
      "description": "A hotel rate class.",
      "properties": {
        "description": {
          "description": "Description of the rate class.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display Sequence of the rate class.",
          "type": "integer"
        },
        "timeSpan": {
          "description": "Begin Date and End Date of the rate class.",
          "$ref": "#/definitions/timeSpanType"
        },
        "rateClass": {
          "description": "Code that uniquely identifies the rate class.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCategories": {
          "description": "List of Attached Rate Categories.",
          "$ref": "#/definitions/simpleRateCategoriesType"
        },
        "hotelId": {
          "description": "Hotel Code the rate class belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "simpleRateCategoriesType": {
      "type": "array",
      "description": "List of Rate Categories with description.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "scheduleRateAmountsType": {
      "type": "object",
      "properties": {
        "onePersonRate": {
          "description": "Rate amount for one person.",
          "type": "number"
        },
        "twoPersonRate": {
          "description": "Rate amount for two persons.",
          "type": "number"
        },
        "threePersonRate": {
          "description": "Rate amount for three persons.",
          "type": "number"
        },
        "fourPersonRate": {
          "description": "Rate amount for four persons.",
          "type": "number"
        },
        "fivePersonRate": {
          "description": "Rate amount for five persons.",
          "type": "number"
        },
        "extraPersonRate": {
          "description": "Rate amount for each extra person.",
          "type": "number"
        },
        "extraChildRate": {
          "description": "Rate amount for each extra Child.",
          "type": "number"
        },
        "oneChildRate": {
          "description": "Rate amount for one Child.",
          "type": "number"
        },
        "twoChildrenRate": {
          "description": "Rate amount for two Children.",
          "type": "number"
        },
        "threeChildrenRate": {
          "description": "Rate amount for three Children.",
          "type": "number"
        },
        "fourChildrenRate": {
          "description": "Rate amount for four Children.",
          "type": "number"
        },
        "rateByAgeBuckets": {
          "description": "Collection of rate amount by age bracket.",
          "$ref": "#/definitions/rateByAgeBucketsType"
        },
        "minimumChildrenForFreeStay": {
          "description": "Minimum number of children needed to get free stay.",
          "type": "integer"
        },
        "pointsRequired": {
          "description": "The number of award points required for applying this rate plan schedule.",
          "type": "number"
        },
        "overrideFloorAmount": {
          "description": "true if floor amount needs to be override",
          "type": "boolean"
        }
      }
    },
    "advancedBaseRateOffsetType": {
      "type": "object",
      "description": "A Rate which is of Advanced Dynamic Base Rate can have rate schedule based on an offset from its Base Rate or BAR Rate.",
      "properties": {
        "offset": {
          "description": "offset amount for the advanced dynamic base rate schedule.",
          "type": "number"
        },
        "flatOrPercentage": {
          "description": "It signifies offset amount is of Flat or Percentage type. Valid Values are F/P.",
          "type": "string",
          "minLength": 1,
          "maxLength": 1
        },
        "applyBar": {
          "description": "Should this schedule be Advanced dynamically based on BAR rate.",
          "type": "boolean"
        }
      }
    },
    "rateAmountBoundariesType": {
      "type": "object",
      "description": "Rate amount boundaries for the rate plan schedule. Minimum and/or maximum rate amounts can be defined for one and/or two adults.",
      "properties": {
        "minimum": {
          "description": "Minimum rate amounts for one and/or two adults.",
          "$ref": "#/definitions/rateAmountBoundaryType"
        },
        "maximum": {
          "description": "Maximum rate amounts for one and/or two adults.",
          "$ref": "#/definitions/rateAmountBoundaryType"
        }
      }
    },
    "rateAmountBoundaryType": {
      "type": "object",
      "description": "Set of rate amounts for one and/or two adults. This set will represent either the minimum or maximum rate boundary.",
      "properties": {
        "onePersonRate": {
          "description": "One person rate amount for the rate boundary.",
          "type": "number"
        },
        "twoPersonRate": {
          "description": "Two person rate amount for the rate boundary.",
          "type": "number"
        }
      }
    },
    "ratePlanScheduleClassificationsType": {
      "type": "object",
      "properties": {
        "marketCode": {
          "description": "Market code for the rate schedule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCode": {
          "description": "Source code for the rate schedule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "occupantThresholdPricingType": {
      "type": "object",
      "description": "Definition for creating pricing for a rate schedule, based on occupants threshold level.",
      "properties": {
        "adults": {
          "description": "Threshold for Adults in the room.",
          "type": "object",
          "properties": {
            "threshold": {
              "description": "Threshold value, after it is reached the corresponding amount will be charged.",
              "type": "integer"
            },
            "amount": {
              "description": "Amount to be charged after the threshold is reached.",
              "type": "number"
            }
          }
        },
        "children": {
          "description": "Threshold for Children in the room.",
          "type": "object",
          "properties": {
            "threshold": {
              "description": "Threshold value, after it is reached the corresponding amount will be charged.",
              "type": "integer"
            },
            "amount": {
              "description": "Amount to be charged after the threshold is reached.",
              "type": "number"
            },
            "excludeBucket1": {
              "description": "When rates are Defined by Age buckets, should the 1st buckets children count be excluded from threshold pricing.",
              "type": "boolean"
            },
            "excludeBucket2": {
              "description": "When rates are Defined by Age buckets, should the 2nd buckets children count be excluded from threshold pricing.",
              "type": "boolean"
            },
            "excludeBucket3": {
              "description": "When rates are Defined by Age buckets, should the 3rd buckets children count be excluded from threshold pricing.",
              "type": "boolean"
            }
          }
        },
        "occupants": {
          "description": "Threshold for Occupants in the room.",
          "type": "object",
          "properties": {
            "threshold": {
              "description": "Threshold value, after it is reached the corresponding amount will be charged.",
              "type": "integer"
            },
            "amount": {
              "description": "Amount to be charged after the threshold is reached.",
              "type": "number"
            }
          }
        }
      }
    },
    "scheduleAdjustmentDetailsType": {
      "type": "array",
      "description": "The list of adjustment codes for the rate plan schedule.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/adjustmentDetailType"
      }
    },
    "adjustmentDetailType": {
      "type": "object",
      "description": "The adjustment code details for the rate schedule.",
      "properties": {
        "overriddenAmount": {
          "description": "The amount with which the actual adjustment will be overridden. if no amount is sent, default adjustment code's amount will be used.",
          "type": "number"
        },
        "adjustmentCode": {
          "description": "the adjustment code that needs to be attached to the rate schedule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deleteAdjustment": {
          "description": "Should this Adjustment code be deleted ?",
          "type": "boolean"
        }
      }
    },
    "ratePackagesType": {
      "type": "object",
      "properties": {
        "packages": {
          "description": "A collection of packages attached to the rate code.",
          "$ref": "#/definitions/ratePackageCodeListType"
        },
        "packageGroups": {
          "description": "Package Group full Information along with the members that belong to this Group.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/ratePackageGroupType"
          }
        }
      }
    },
    "ratePackageCodeListType": {
      "type": "array",
      "description": "Rate Package Full Information",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ratePackageCodeType"
      }
    },
    "ratePackageCodeType": {
      "type": "object",
      "description": "Package code details applied to a rate plan.",
      "properties": {
        "header": {
          "description": "Package code header details.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "schedules": {
          "description": "Package code price schedule details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configPackageScheduleType"
          }
        },
        "hotelId": {
          "description": "Hotel code for the packages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Package Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Package Code Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "group": {
          "description": "Indicates if it is a Package Group or not.",
          "type": "boolean"
        },
        "ratePlanCode": {
          "description": "Package Code specific to a rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "adjustOverlappingRange": {
          "description": "Flag to adjust the overlapping dates automatically. True will allow the system to adjust the overlapping dates automatically . False will not allow overlapping dates and throws error messages if overlapping dates are found",
          "type": "boolean"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "scheduleExceptions": {
          "description": "Package code schedule price exception for the rate plan.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configPackageScheduleType"
          }
        },
        "quantity": {
          "description": "Quantity of the package code included in the rate plan.",
          "type": "integer"
        }
      }
    },
    "ratePackageGroupType": {
      "type": "object",
      "description": "Information about a package group common to all usages.",
      "properties": {
        "description": {
          "description": "Package group description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of the package group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "code": {
          "description": "Package group Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sellSeparate": {
          "description": "Can Package group be sold separately?",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Is Package group web bookable?",
          "type": "boolean"
        },
        "packages": {
          "description": "List of Package group members for a rate plan.",
          "$ref": "#/definitions/ratePackageCodeListType"
        }
      }
    },
    "tierIDType": {
      "type": "integer",
      "minimum": 1,
      "maximum": 5
    },
    "ratePlanInfo": {
      "type": "object",
      "description": "Response object to fetch rate plan's complete details.",
      "properties": {
        "ratePlans": {
          "description": "Rate plan complete details such as primary details, classifications, room types etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanType"
          }
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ratePlanType": {
      "type": "object",
      "description": "The Rate plan code Details.",
      "properties": {
        "primaryDetails": {
          "description": "Rate plan code header primary details.",
          "$ref": "#/definitions/ratePlanPrimaryDetailsType"
        },
        "classifications": {
          "description": "Rate plan code grouping details.",
          "$ref": "#/definitions/ratePlanClassificationsType"
        },
        "transactionDetails": {
          "description": "Rate plan code header folio and transaction information.",
          "$ref": "#/definitions/ratePlanTransactionDetailsType"
        },
        "rateCommission": {
          "description": "Commission details for Rate plan code.",
          "$ref": "#/definitions/ratePlanCommissionType"
        },
        "rateDeposit": {
          "description": "Deposit details for Rate plan code.",
          "$ref": "#/definitions/ratePlanDepositType"
        },
        "descriptions": {
          "description": "Short and Long info details of the Rate Plan.",
          "$ref": "#/definitions/ratePlanDescriptionsType"
        },
        "roomTypeList": {
          "description": "List of room types that are supported by the Rate Plan.",
          "$ref": "#/definitions/rateRoomTypeListType"
        },
        "ratePackages": {
          "description": "A collection of packages associated to the rate plan code.",
          "$ref": "#/definitions/ratePackagesType"
        },
        "negotiatedRates": {
          "description": "List of negotiated Profiles.",
          "type": "object",
          "properties": {
            "negotiatedRate": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedRateType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "controls": {
          "description": "Describes the sell and yield controls for the rate code.",
          "$ref": "#/definitions/ratePlanControlsType"
        },
        "distribution": {
          "description": "Distribution setup for the rate code.",
          "$ref": "#/definitions/ratePlanDistributionType"
        },
        "ratePlanCodeIndicators": {
          "description": "Indicators of additional information attached to the Rate code.",
          "$ref": "#/definitions/indicatorsType"
        },
        "ratePlanBasedOnRates": {
          "description": "Rate plan types based on rates.",
          "$ref": "#/definitions/ratePlanBasedOnRatesType"
        },
        "ratePlanScheduleInfo": {
          "description": "Rate plan's summary information about its schedules.",
          "$ref": "#/definitions/ratePlanScheduleInfoType"
        },
        "approvalNotes": {
          "description": "Approval Notes for Rate plan code.",
          "$ref": "#/definitions/ratePlanNotesType"
        },
        "routingInstructions": {
          "description": "Rate plan's default routing instructions.",
          "$ref": "#/definitions/ratePlanRoutingInstructionsType"
        },
        "externalAttributes": {
          "description": "Elements which are needed by External Interfaces",
          "$ref": "#/definitions/ratePlanExternalAttributesType"
        },
        "accessExclusions": {
          "description": "List of access exclusions.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateAccessExclusionType"
          }
        },
        "mobileCheckinAllowed": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "type": "boolean"
        },
        "mobileCheckoutAllowed": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "supressRate": {
          "description": "Is rate amount suppressed for the rate plan?",
          "type": "boolean"
        },
        "printRate": {
          "description": "Is Rate amount printed on the reports for the rate plan?",
          "type": "boolean"
        },
        "discountAllowed": {
          "description": "Is rate plan code discounted?",
          "type": "boolean"
        },
        "redemption": {
          "description": "Is redemption allowed on the rate code?",
          "type": "boolean"
        },
        "externallyControlled": {
          "description": "Is rate plan code externally controlled?",
          "type": "boolean"
        },
        "bARRate": {
          "description": "Is rate plan code of BAR Rate type?",
          "type": "boolean"
        },
        "daily": {
          "description": "Is rate plan code a daily rate?",
          "type": "boolean"
        },
        "tiered": {
          "description": "Is rate plan code a tiered rate?",
          "type": "boolean"
        },
        "dayUse": {
          "description": "Is rate plan code for day use?",
          "type": "boolean"
        },
        "dayType": {
          "description": "Indicates if rate Calendar factors such as adder/multiplier should be used for price calculation.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Is rate plan code complimentary?",
          "type": "boolean"
        },
        "houseUse": {
          "description": "Is rate plan code for house use?",
          "type": "boolean"
        },
        "negotiated": {
          "description": "Is rate plan code only available as a negotiated rate that must be associated with a guest, company, or travel agent profile ?",
          "type": "boolean"
        },
        "ownerRate": {
          "description": "Is rate plan code flagged as an owner rate plan? Owner rate plans have special functionality for no-shows depending on the Rolling Noshow Preference application setting.",
          "type": "boolean"
        },
        "membershipEligible": {
          "description": "Is rate plan code flagged as eligible for memberships? This flag controls whether the guest stay, which this rate plan is attached to, qualifies for point calculations for Frequent Flyer or Frequent Guest programs. If the rate plan associated to the reservation has not been flagged for Membership then the guest will not earn any points/miles for their stay.",
          "type": "boolean"
        },
        "advancedDailyBase": {
          "description": "Flag to identify if Rate Code is Advanced Daily Base Rate Code",
          "type": "boolean"
        },
        "advancedDailyRate": {
          "description": "Flag to identify if Rate Code is Advanced Daily Rate",
          "type": "boolean"
        },
        "floorAmount": {
          "description": "An amount that act as Floor value for Rate Plan.",
          "type": "number"
        }
      }
    },
    "ratePlanTransactionDetailsType": {
      "type": "object",
      "properties": {
        "folioText": {
          "description": "Folio text of the rate plan.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "transactionCode": {
          "description": "Transaction code used by the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomTransactionCodes": {
          "description": "Collection of transaction codes configured by room types/room classes. The Revenue Posting by Room Type/Room Class function should be on to use this element.",
          "$ref": "#/definitions/ratePlanRoomTransactionCodesType"
        },
        "packageTransactionCode": {
          "description": "Package Transaction code used by the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencyCode": {
          "description": "Currency code used by the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateIncludesTax": {
          "description": "Is tax included in the rate plan?",
          "type": "boolean"
        },
        "exchangePosting": {
          "description": "Determines how the exchange rate is set for the rate code.",
          "$ref": "#/definitions/exchangePostingType"
        },
        "postingRhythm": {
          "description": "Determines the rate code posting rhythm.",
          "$ref": "#/definitions/ratePlanPostingRhythmType"
        },
        "advancedPostingRhythms": {
          "description": "When the Advanced Rate Code Posting Rhythm parameter is turned on, this element will contain the collection of advanced Buy x Get y posting rhythms for the rate plan.",
          "$ref": "#/definitions/ratePlanAdvancedPostingRhythmsType"
        }
      }
    },
    "ratePlanRoomTransactionCodesType": {
      "type": "array",
      "description": "Single transaction code and room type/class association.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ratePlanRoomTransactionCodeType"
      }
    },
    "ratePlanRoomTransactionCodeType": {
      "type": "object",
      "description": "Transaction code associated to a room type or room class on a rate plan.",
      "properties": {
        "roomType": {
          "description": "Room type which the transaction code is associated to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "description": "Room class which the transaction code is associated to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code associated to the room type/room class.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "exchangePostingType": {
      "type": "string",
      "description": "Fixed at Block.",
      "enum": [
        "FixedAtCheckIn",
        "FixedAtReservation",
        "CurrentDate",
        "FixedAtBlock"
      ]
    },
    "ratePlanPostingRhythmType": {
      "type": "object",
      "description": "Rate Plan Posting rhythm type.",
      "properties": {
        "doNotPostEveryXNights": {
          "description": "Do not Post the Rate Code every X nights. This can be used to offer free nights after staying certain number of nights on the rate plan.",
          "type": "object",
          "properties": {
            "xNight": {
              "description": "The night the rate plan is not supposed to be posted.",
              "type": "integer",
              "minimum": 1,
              "maximum": 14
            },
            "postPackages": {
              "description": "Post the packages on free nights if the packages posting rhythm falls on the night rate plan is not getting posted.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "ratePlanAdvancedPostingRhythmsType": {
      "type": "array",
      "description": "Posting rhythm details for a rate plan containing Buy x Get y functionality.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ratePlanAdvancedPostingRhythmType"
      }
    },
    "ratePlanAdvancedPostingRhythmType": {
      "type": "object",
      "description": "Posting rhythm details for a rate plan containing Buy x Get y functionality.",
      "properties": {
        "code": {
          "description": "Code identifying the posting rhythm within the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the posting rhythm offer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "beginSellDate": {
          "description": "Date which the posting rhythm becomes applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "Date which the posting rhythm ceases to be applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "requiredPaidNights": {
          "description": "The number of nights which are required to be paid in order to receive free nights.",
          "type": "integer"
        },
        "eligibleFreeNights": {
          "description": "The number of free nights which are eligible when the number of required paid nights has been met.",
          "type": "integer"
        },
        "repeatWithinStay": {
          "description": "Indicates if the posting rhythm offer can be repeated more than once during the entire stay.",
          "type": "boolean"
        },
        "repeatWithinSellSegment": {
          "description": "Indicates if the posting rhythm offer can be repeated more than once within a specific sell segment of the reservation.",
          "type": "boolean"
        }
      }
    },
    "ratePlanCommissionType": {
      "type": "object",
      "properties": {
        "commissionCode": {
          "description": "commission code used by the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionPercentage": {
          "description": "commission percentage used by the rate plan.",
          "type": "number"
        },
        "commissionAmount": {
          "description": "commission amount used by the rate plan.",
          "type": "number"
        }
      }
    },
    "ratePlanDepositType": {
      "type": "object",
      "properties": {
        "depositMaturityPreference": {
          "description": "Deposit maturity preference used by the rate plan.",
          "$ref": "#/definitions/depositMaturityPreferenceType"
        }
      }
    },
    "depositMaturityPreferenceType": {
      "type": "string",
      "description": "Fixed values for Deposite Maturity Preference affecting the rate code",
      "enum": [
        "CheckIn",
        "LastStayNight",
        "LastDayAdvDeposit"
      ]
    },
    "rateRoomTypeListType": {
      "type": "array",
      "description": "Details of each room type",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/rateRoomTypeDetailType"
      }
    },
    "rateRoomTypeDetailType": {
      "type": "object",
      "description": "Details of single room type",
      "properties": {
        "code": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Text description for the room type",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "pseudo": {
          "description": "True if room type will not be associated with physical rooms included in inventory",
          "type": "boolean"
        },
        "rateFloor": {
          "description": "This is the minimum amount of which room can be sold",
          "type": "number"
        }
      }
    },
    "ratePlanControlsType": {
      "type": "object",
      "properties": {
        "sell": {
          "description": "Sell controls for the rate code i.e. min. Length of stay, max Length of Stay etc.",
          "$ref": "#/definitions/ratePlanSellControlsType"
        },
        "yield": {
          "description": "Yield controls for the rate code i.e. Is rate yieldable? Rate bucket it belongs to? Yield Market it belongs to? etc .",
          "$ref": "#/definitions/ratePlanYieldControlsType"
        }
      }
    },
    "ratePlanSellControlsType": {
      "type": "object",
      "properties": {
        "minimumStayThrough": {
          "description": "Minimum number of nights the guest has to stay through to consume this rate plan code.",
          "type": "integer"
        },
        "maximumStayThrough": {
          "description": "Maximum number of nights the guest has to stay through to consume this rate plan code.",
          "type": "integer"
        },
        "minimumLengthOfStay": {
          "description": "Minimum number of nights the guest has to stay to consume this rate plan code.",
          "type": "integer"
        },
        "maximumLengthOfStay": {
          "description": "Maximum number of nights the guest has to stay to consume this rate plan code.",
          "type": "integer"
        },
        "minimumAdvanceBooking": {
          "description": "Minimum number of days the guest has to book in advance to consume this rate plan code.",
          "type": "integer"
        },
        "maximumAdvanceBooking": {
          "description": "Maximum number of days the guest has to book in advance to consume this rate plan code.",
          "type": "integer"
        }
      }
    },
    "ratePlanYieldControlsType": {
      "type": "object",
      "properties": {
        "yieldable": {
          "description": "Is rate plan code Yieldable / non-yieldable / stay-pattern?",
          "$ref": "#/definitions/ratePlanYieldableType"
        },
        "yieldAsRatePlanCode": {
          "description": "This rate plan code is to be yielded as Yield as Rate Plan Code (if any).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "yieldMarketCodeList": {
          "description": "The List of Yeild market codes to be used for this Rate Plan Code (if any).",
          "$ref": "#/definitions/yieldMarketCodeListType"
        },
        "rateBucket": {
          "description": "The rate bucket the rate plan code belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "ratePlanYieldableType": {
      "type": "string",
      "description": "Simple type for valid values for Yieldable element for the Rate plan code.",
      "enum": [
        "Yieldable",
        "NonYieldable",
        "StayPattern"
      ]
    },
    "yieldMarketCodeListType": {
      "type": "array",
      "description": "Yield Market Code for the rate plan code.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "ratePlanDistributionType": {
      "type": "object",
      "properties": {
        "restrictionUpdate": {
          "description": "Restriction updates for the rate plan to be sent to channels?",
          "type": "boolean"
        },
        "rateUpdate": {
          "description": "Rate updates for the rate plan to be sent to channels?",
          "type": "boolean"
        },
        "regionalAvailability": {
          "description": "Consider the rate plan for regional availability to be used by channels?",
          "type": "boolean"
        },
        "myFidelioUploadAllowed": {
          "description": "Rate plan to be uploaded to MyFidleio and published.",
          "type": "boolean"
        },
        "channelRateMappingExists": {
          "description": "Flag to indicate if Rate Plan is mapped to at least one Channel.",
          "type": "boolean"
        },
        "channelAllowed": {
          "description": "Rate plan Code is available for channels.",
          "type": "boolean"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "ratePlanBasedOnRatesType": {
      "type": "array",
      "description": "Rate plan type based on rates.",
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/ratePlanBasedOnRateType"
      }
    },
    "ratePlanBasedOnRateType": {
      "type": "object",
      "description": "Base Rate type such as \"Base Rate\", \"Dynamic Base Rate\"",
      "properties": {
        "baseRate": {
          "description": "Base Rate type",
          "type": "object",
          "properties": {
            "basedOnRatePlan": {
              "description": "Rate plan code used to base the rate on.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "baseAmount": {
              "description": "Base Amount used for base rate calculation.",
              "type": "number"
            },
            "flatOrPercentage": {
              "description": "Flat or Percentage (FLT/PCT) indicator.",
              "type": "string",
              "minLength": 0,
              "maxLength": 3
            },
            "rounding": {
              "description": "Rounding style used for the calculated rate amounts. Valid values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down - Keep Decimal.",
              "type": "string",
              "minLength": 0,
              "maxLength": 1
            },
            "dependentRatePlans": {
              "description": "Dependent Rate plan code(s) for the rate plan. It is the list of rate plans that are based on the Rate Plan.",
              "$ref": "#/definitions/ratePlanCodeListType"
            }
          }
        },
        "dynamicBaseRate": {
          "description": "Dynamic Base Rate type",
          "type": "object",
          "properties": {
            "dynamicBasedOnRatePlan": {
              "description": "Rate plan code used to Dynamically base the rate on.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "dynamicBaseAmount": {
              "description": "Base Amount used for Dynamic base rate calculation.",
              "type": "number"
            },
            "flatOrPercentage": {
              "description": "Flat or Percentage (FLT/PCT) indicator.",
              "type": "string",
              "minLength": 0,
              "maxLength": 3
            },
            "rounding": {
              "description": "Rounding style used for the calculated rate amounts. Valid values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down - Keep Decimal.",
              "type": "string",
              "minLength": 0,
              "maxLength": 1
            },
            "compareWithRateSchedules": {
              "description": "While showing availability, do system need to compare the static rates defined for the rate with dynamically computed base rate pricing? If true, availability shows lower of the these two pricing. If false, availabilty shows the dynamically calucated pricing.",
              "type": "boolean"
            },
            "dependentRatePlans": {
              "description": "Dependent Rate plan code(s) for the rate plan.It is the list of rate plans that are Dynamically based on the Rate Plan.",
              "$ref": "#/definitions/ratePlanCodeListType"
            }
          }
        },
        "bARBasedRate": {
          "description": "Best Available Rate (BAR) Based Rate type",
          "type": "object",
          "properties": {
            "bARBaseAmount": {
              "description": "Base Amount used for BAR based rate calculation.",
              "type": "number"
            },
            "flatOrPercentage": {
              "description": "Flat or Percentage (FLT/PCT) indicator.",
              "type": "string",
              "minLength": 0,
              "maxLength": 3
            },
            "rounding": {
              "description": "Rounding style used for the calculated rate amounts. Valid values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down - Keep Decimal.",
              "type": "string",
              "minLength": 0,
              "maxLength": 1
            },
            "compareWithRateSchedules": {
              "description": "While showing availability, do system need to compare the static rates defined for the rate with dynamically computed BAR based rate pricing? If true, availability shows lower of the these two pricing. If false, availabilty shows the dynamically calucated pricing.",
              "type": "boolean"
            },
            "defaultToHighestBar": {
              "description": "While showing availability, in case all the BAR rates are closed whether to calculate the rate amount based on highest BAR instead of defaulting to its own rate schedule. If false, availability shows rates from its own rate schedule.",
              "type": "boolean"
            }
          }
        },
        "advancedDynamicBaseRate": {
          "description": "Advanced Dynamic Base Rate type",
          "$ref": "#/definitions/advancedDynamicBaseRateType"
        },
        "basedOnRatePlanType": {
          "description": "Determines the type of Based on Rate plan. None type signifies it is not based on rate plan and if passed to any operation that changes rate plan will remove the Based On Rate Plan (if any).",
          "$ref": "#/definitions/basedOnRatePlanType"
        }
      }
    },
    "ratePlanCodeListType": {
      "type": "array",
      "description": "Rate Plan code.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "advancedDynamicBaseRateType": {
      "type": "object",
      "description": "Advanced Dynamic Base Rate type",
      "properties": {
        "basedOnRatePlan": {
          "description": "Rate plan code used to Advanced Dynamically base the rate on.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rounding": {
          "description": "Rounding style used for the calculated rate amounts. Valid values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down - Keep Decimal.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "compareWithRateSchedules": {
          "description": "While showing availability, do system need to compare the static rates defined for the rate with Advanced dynamically computed base rate pricing? If true, availability shows lower of the these two pricing. If false, availability shows the advanced dynamically calculated pricing.",
          "type": "boolean"
        },
        "advancedDependentRatePlans": {
          "description": "Advanced Dependent Rate plan code(s) for the rate plan.It is the list of rate plans that are Advanced Dynamically based on the Rate Plan.",
          "$ref": "#/definitions/ratePlanCodeListType"
        }
      }
    },
    "basedOnRatePlanType": {
      "type": "string",
      "description": "None means that rate is a standard rate. If sent in the changeRatePlan operation will delete any Based on Rate Plan Type.",
      "enum": [
        "BaseRate",
        "DynamicBaseRate",
        "BARBasedRate",
        "AdvancedDynamicBaseRate",
        "None"
      ]
    },
    "ratePlanScheduleInfoType": {
      "type": "object",
      "description": "This type contains summary details about the rate plan schedules such as Schedulesefined etc.",
      "properties": {
        "schedulesDefined": {
          "description": "Returns true in case the rate plan has any schedules defined.",
          "type": "boolean"
        }
      }
    },
    "ratePlanNotesType": {
      "type": "array",
      "description": "",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ratePlanNoteType"
      }
    },
    "ratePlanNoteType": {
      "type": "object",
      "description": "Details of the Rate Plan Approval Note",
      "properties": {
        "noteId": {
          "description": "Unique identifier for the Approval Note",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "note": {
          "description": "Note Text",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "ratePlanRoutingInstructionsType": {
      "type": "object",
      "description": "Routing fetchInstructions details for a rate plan.",
      "properties": {
        "profileType": {
          "description": "The profile type configured for the rate plan routing instructions. Valid values are Company, Agent, Contact, and Source.",
          "$ref": "#/definitions/routingProfileTypeType"
        },
        "transactionCodes": {
          "description": "Set of transaction codes configured for the rate plan.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of billing instructions configured for the rate plan.",
          "$ref": "#/definitions/billingInstructionsType"
        }
      }
    },
    "routingProfileTypeType": {
      "type": "string",
      "description": "Profile Types available for routing instructions.",
      "enum": [
        "Agent",
        "Company",
        "Contact",
        "Source"
      ]
    },
    "ratePlan": {
      "type": "object",
      "description": "Request object to create rate plan.",
      "properties": {
        "ratePlan": {
          "description": "Rate plan code details to be created.",
          "$ref": "#/definitions/ratePlanType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ratePlanSchedulesInfo": {
      "type": "object",
      "description": "Response object to fetch rate plan schedules.",
      "properties": {
        "ratePlanScheduleList": {
          "description": "List of the rate plan schedules fetched based on the request criteria.",
          "$ref": "#/definitions/ratePlanScheduleListType"
        },
        "ratePlanMasterInfo": {
          "description": "Contains the Rate Plan info that will be used as reference by the Rate Schedules. For example, it provides the master list for room types that a rate schedule can have for a rate plan.",
          "$ref": "#/definitions/ratePlanMasterInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ratePlanScheduleListType": {
      "type": "object",
      "properties": {
        "ratePlanSchedule": {
          "description": "Rate plan schedule list.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/ratePlanSchedulesType"
          }
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "ratePlanSchedulesType": {
      "type": "object",
      "properties": {
        "ratePlanScheduleId": {
          "description": "Rate Plan schedule ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ratePlanScheduleDetail": {
          "description": "Rate Plan Schedule Details.",
          "$ref": "#/definitions/ratePlanScheduleDetailType"
        }
      }
    },
    "ratePlanScheduleDetailType": {
      "type": "object",
      "description": "Details of rate plan schedule including room type list and days of week of the schedule.",
      "properties": {
        "rateAmounts": {
          "description": "Rate amounts for the rate plan schedule.",
          "$ref": "#/definitions/scheduleRateAmountsType"
        },
        "advancedBaseRateOffset": {
          "description": "Rate plan schedule based on an offset from its Base Rate or BAR Rate.",
          "$ref": "#/definitions/advancedBaseRateOffsetType"
        },
        "rateAmountBoundaries": {
          "description": "Rate amount boundaries for the rate plan schedule. Includes the minimum and/or maximum rate amounts for one and/or two adults.",
          "$ref": "#/definitions/rateAmountBoundariesType"
        },
        "classifications": {
          "description": "Rate plan schedule grouping details.",
          "$ref": "#/definitions/ratePlanScheduleClassificationsType"
        },
        "occupantThresholdPricing": {
          "description": "Occupant threshold pricing for the rate plan schedule including adult thresholds, child thresholds, and occupant thresholds.",
          "$ref": "#/definitions/occupantThresholdPricingType"
        },
        "adjustmentDetails": {
          "description": "The adjustment code details for the rate plan schedule.",
          "$ref": "#/definitions/scheduleAdjustmentDetailsType"
        },
        "rateSchedulePackages": {
          "description": "List of packages attached to the rate plan schedule.",
          "$ref": "#/definitions/ratePackagesType"
        },
        "tierID": {
          "description": "Tier that the rate plan schedule belongs to.",
          "$ref": "#/definitions/tierIDType"
        },
        "seasonCode": {
          "description": "Season code attached to the rate plan schedule that defines the start and end dates. When creating a rate plan schedule, if a season code is provided the start and end dates will be ignored. These values will be pulled from the season code record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomTypeList": {
          "description": "List of room types that are for the rate plan schedule.",
          "$ref": "#/definitions/roomTypeListType"
        },
        "advancedDailyBaseRatePlanCode": {
          "description": "The Base Rate Plan Code which will be used to look up for and configure the Pricing Schedule for the main Rate Plan Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "ratePlanMasterInfoType": {
      "type": "object",
      "description": "The Rate plan info type is used primarily by rate plan schedules to get basic rate plan header details.",
      "properties": {
        "primaryDetails": {
          "description": "Rate plan code header primary details.",
          "$ref": "#/definitions/ratePlanPrimaryDetailsType"
        },
        "roomTypeList": {
          "description": "List of room types that are supported by the Rate Plan.",
          "$ref": "#/definitions/rateRoomTypeListType"
        },
        "ratePlanBasedOnRates": {
          "description": "Based on rate plan details.",
          "$ref": "#/definitions/ratePlanBasedOnRatesType"
        },
        "rateTiers": {
          "description": "Rate Tier levels and ranges available for the property.",
          "$ref": "#/definitions/rateTiersType"
        },
        "hotelId": {
          "description": "Hotel Code of the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate Plan Code of the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "tiered": {
          "description": "Is Rate plan tiered?",
          "type": "boolean"
        },
        "daily": {
          "description": "Is rate plan code a daily rate?",
          "type": "boolean"
        },
        "currencyCode": {
          "description": "Currency code used by the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bARRate": {
          "description": "Is rate plan code of BAR Rate type?",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Is rate plan code Complimentary?",
          "type": "boolean"
        },
        "houseUse": {
          "description": "Is rate plan code for House Use?",
          "type": "boolean"
        },
        "advancedDailyBase": {
          "description": "Flag to identify if Rate Code is Advanced Daily Base Rate Code",
          "type": "boolean"
        },
        "floorAmount": {
          "description": "An amount that act as Floor value for Rate Plan.",
          "type": "number"
        }
      }
    },
    "rateTiersType": {
      "type": "array",
      "description": "Details for each rate tier.",
      "maxItems": 5,
      "items": {
        "$ref": "#/definitions/rateTierType"
      }
    },
    "rateTierType": {
      "type": "object",
      "description": "Details for a single rate tier.",
      "properties": {
        "startLOS": {
          "description": "The starting length of stay days. This is a required field.",
          "type": "integer"
        },
        "endLOS": {
          "description": "The ending length of stay days. This is not a required field.",
          "type": "integer"
        },
        "tierID": {
          "description": "The rate tier number/level.",
          "$ref": "#/definitions/tierIDType"
        }
      }
    },
    "ratePlanSchedules": {
      "type": "object",
      "description": "Request object to change rate plan schedules.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the rate plan schedule.",
          "$ref": "#/definitions/codeType"
        },
        "ratePlanCode": {
          "description": "Rate plan code of the rate plan schedule.",
          "$ref": "#/definitions/codeType"
        },
        "ratePlanScheduleList": {
          "description": "List of rate plan schedules to be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanSchedulesType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ratePlanSchedulesToCreate": {
      "type": "object",
      "description": "Request object to create rate plan schedules.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the rate plan schedule.",
          "$ref": "#/definitions/codeType"
        },
        "ratePlanCode": {
          "description": "Rate plan code of the rate plan schedule.",
          "$ref": "#/definitions/codeType"
        },
        "ratePlanScheduleList": {
          "description": "List of rate plan schedules to be created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ratePlanScheduleDetailType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "packagesInfo": {
      "type": "object",
      "description": "Response object to fetch list of packages.",
      "properties": {
        "packageCodesList": {
          "description": "List of package codes.",
          "type": "object",
          "properties": {
            "packageCodes": {
              "description": "Package Codes of each hotel.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/hotelPackageCodesType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelPackageCodesType": {
      "type": "object",
      "description": "Depending on the fetch instructions either full details or basic details will be fetched",
      "properties": {
        "packageCodeShortInfo": {
          "description": "Basic information about the each package code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageCodeShortInfoType"
          }
        },
        "packageCodeInfo": {
          "description": "Full Details about each package code",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageCodeType"
          }
        },
        "hotelId": {
          "description": "Hotel code for the packages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "packageCodeShortInfoType": {
      "type": "object",
      "properties": {
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "code": {
          "description": "Package Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "group": {
          "description": "Indicates if it is a Package Group or not.",
          "type": "boolean"
        },
        "usedInAppSetting": {
          "description": "Flag to check the package code is used in application setting.",
          "type": "boolean"
        }
      }
    },
    "ratePlansSummary": {
      "type": "object",
      "description": "Response object to fetch rate plans summary information.",
      "properties": {
        "ratePlanShortInfoList": {
          "description": "List of summary information for the rate plan code.",
          "type": "object",
          "properties": {
            "ratePlanShortInfo": {
              "description": "List of summary information for the rate plan code.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ratePlanShortInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            },
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "totalPages": {
              "description": "Evaluated total page count based on the requested max fetch count.",
              "type": "integer"
            }
          }
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "RatePlan",
      "description": "The Rate Plan APIs allow for creating, managing, and retrieving rates and their related components such as negotiated rates and packages."
    },
    {
      "name": "ChainConfig",
      "description": "These APIs will allow you to configure rate related configuration related for Administration."
    },
    {
      "name": "HotelConfig",
      "description": "These APIs will allow you to configure rate related configuration related for Administration."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}